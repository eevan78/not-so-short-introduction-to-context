%%% Фајл:     b07_Structure.mkiv
%%% Аутор:    Joaquín Ataz-López
%%% Започето: Март 2020
%%% Завршено: Мај 2020
%%% Садржај:  Ово је друго поглавље на којем сам радио и из мог угла,
%%%	      једно од најважнијих. Једну по једну, пробавао сам опције
%%%	      за команду setuphead, и нисам могао да откријем шта неке
%%%	      од њих раде, или како да их натерам да функционишу. Сумњам
%%%	      да је тако зато што сам (1) управо почео да радим са
%%%	      системом ConTeXt и до јула, августа, рад је постао много
%%%	      удобнији, али до тада ми је све изгледало као кинески и
%%%	      (2) тестове у документу где са м писао одељке користио
%%%	      класични стил (\chapter или \section уместо \startchapter
%%%	      или \startsection).
%%% 
%%% Уређивано са: Emacs + AuTeX - и повремено са vim + context-plugin
%%%

% \environment ../introCTX_env.mkiv

\startcomponent b07_Structure.mkiv

\startchapter
  [
    reference=cap:structure,
    title=Структура документа,
  ]

\TocChap

\startsection
  [title=Структурна подела у документима]

Осим за врло кратке текстове (на пример, као што је писмо), документ се
обично организује у блокове или групе текста које у општем случају следе
хијерархијски редослед. Нема стандардног начина за давање имена овим
блоковима: у романима, на пример, структурна подела се обично назива
\quotation{поглавља} мада неки – они дужи – имају и веће блокове који
се обично називају \quotation{делови} и који групишу већи број поглавља.
Драмска дела праве разлику између \quotation{чинова} и
\quotation{сцена}. Академски приручници су (понекад) подељени на
\quotation{делове} и \quotation{лекције}, \quotation{теме} или
\quotation{поглавља} која такође и сама често имају сопствене поделе;
иста врста сложене хијерархијске поделе често постоји и у осталим
академским или техничким документима (као што је овај који читате,
посвећен објашњавању компјутерског програма или система). Чак су и
закони организовани у \quotation{књиге} (најдуже и најсложеније, као што
су кодекси) \quotation{наслове},\quotation{поглавља},
\quotation{одељке}, \quotation{пододељке}. Научни и технички документи
такође могу достићи до шест, седам, па чак и осам нивоа угњеждавања ових
врста подела.

Ово поглавље се бави анализом механизама које \ConTeXt\ нуди као подршку
за ове структурне поделе. На све њих ће се односити један свеобухватни
појам \quotation{одељци}.

\startSmallPrint

  Не постоји јасан појам који нам омогућава да уопштено говоримо о свим
  овим врстама структурне поделе. Појам \quotation{одељак} који сам ја
  изабрао, концентрише се на структурну поделу више него било који други,
  мада је лоша страна то што се једна од предефинисаних структурних подела
  у систему \ConTeXt\ назива \quotation{section} (односно одељак). Надам
  се да то неће унети забуну и верујем да ће бити прилично једноставно да
  се из контекста одреди да ли говоримо о одељку као општој одредници за
  структурне поделе, или о специфичној подели коју \ConTeXt\ назива
  одељак.

\stopSmallPrint

Сваки \quotation{одељак} (у општем смислу) подразумева:

\startitemize
 
  \item Разумно велику {\em структурну поделу документа} која може да
  укључи и остале поделе нижег нивоа. Из ове перспективе,
  \quotation{одељци} подразумевају блокове текста који међу собом имају
  хијерархијски однос. Из угла својих одељака, документ као целина може да
  се посматра као стабло.  Документ {\em per se} је стабло, свако од
  његових поглавља је грана, а свака од њих може да има гранчице које се
  такође деле, и тако даље.

  Да би се документ читао и разумео, врло је важно да има што јаснију
  структуру. Словослагач то не ради, ово је ауторов задатак. И мада није
  до система \ConTeXt\ да нас учини бољим ауторима него што то јесмо,
  велики скуп команди за поделу документа које обезбеђује, при чему је
  хијерархија међу њима прилично јасна, може да нам помогне у писању
  докумената који имају бољу структуру.

  \item {\em Име структуре} које бисмо називали њен \quotation{наслов}
  или \quotation{лабела}. То име се штампа:

  \startitemize

    \item Увек (или скоро увек) на месту у документу где почиње
    структурна подела.

    \item Повремено и у садржају, у заглављу или подножју страница које
    садрже одређени одељак.

  \stopitemize

  \ConTeXt\ нам омогућава да ове задатке аутоматизујемо на такав начин
  да је особине форматирања којима се наслов структурне јединице штампа
  потребно навести само једном, као и то да ли би он требало или не да буде
  део садржаја, или заглавља или подножја. Да би то извео, \ConTeXt\
  једино мора да зна где је почетак и крај сваке структурне јединице, како
  се зове и на којем је хијерархијском нивоу.

\stopitemize

\stopsection

\startsection
  [
    reference=sec:sectiontypes,
    title=Типови одељака и њихова хијерархија,
  ]

\ConTeXt\ разликује {\em нумерисане} и {\em ненумерисане} одељке. Ови
први се, као што им име наговештава, аутоматски нумеришу и шаљу у
садржај, а понекада и у заглавља и/или подножја страница.

\ConTeXt\ има хијерархијски поређане предефинисане команде за дељење
приказане у \in{табели}[tbl:sectioned].

\placetable
  [here]
  [tbl:sectioned]
  {\ConTeXt\ команде за поделу}
{
  \starttabulate[|l|l|l|]
\HL
\NC {\bf Ниво}
\NC {\bf Нумерисани одељци}
\NC {\bf Ненумерисани одељци}
\NR
\HL
\NC 1
\NC{\tt \backslash part}\PlaceMacro{part}\PlaceMacro{startpart}
\NC –
\NR
\NC 2
\NC{\tt \backslash chapter}\PlaceMacro{chapter}\PlaceMacro{startchapter}
\NC{\tt \backslash title}\PlaceMacro{title}\PlaceMacro{starttitle}
\NR
\NC 3
\NC{\tt \backslash section}\PlaceMacro{section}\PlaceMacro{startsection}
\NC{\tt \backslash subject}\PlaceMacro{subject}\PlaceMacro{startsubject}
\NR
\NC 4
\NC{\tt \backslash subsection}\PlaceMacro{subsection}\PlaceMacro{startsubsection}
\NC{\tt \backslash subsubject}\PlaceMacro{subsubject}\PlaceMacro{startsubsubsubject}
\NR
\NC 5
\NC{\tt \backslash subsubsection}\PlaceMacro{subsubsection}\PlaceMacro{startsubsubsection}
\NC{\tt \backslash subsubsubject}\PlaceMacro{subsubsubject}\PlaceMacro{startsubsubsubject}
\NR
\NC 6
\NC{\tt \backslash subsubsubsection}\PlaceMacro{subsubsubsection}\PlaceMacro{startsubsubsubsection}
\NC{\tt \backslash subsubsubsubject}\PlaceMacro{subsubsubsubject}\PlaceMacro{startsubsubsubsubject}
\NR
\NC ...
\NC ...
\NC ...
\NR
\HL
\stoptabulate
}

Потребно је пружити и следећа објашњења у вези са предефинисаним
одељцима:

\startitemize

  \item У \in{табели}[tbl:sectioned] су команде поделе приказане у свом
  традиционалном облику.  Али управо ћемо видети да оне могу да се
  користе и као {\em окружења} (\tex{startchapter  ... \stopchapter}, на
  пример) и да се тај приступ уствари препоручује.

  \item У садржај се поставља само првих 6 нивоа поделе. Међутим, моји
  тестови су показали да постоји до 12 нивоа: након \color[darkmagenta]{\MyKey{\backslash sub\-sub\-sub\-sec\-tion}}
  долази \color[darkmagenta]{\MyKey{\backslash sub\-sub\-sub\-sub\-sect\-ion}}, и тако даље, све до
  \color[darkmagenta]{\MyKey{\backslash sub\-sub\-sub\-sub\-sub\-sub\-sub\-sub\-sub\-sec\-tion}}, или
  \color[darkmagenta]{\MyKey{\backslash sub\-sub\-sub\-sub\-sub\-sub\-sub\-sub\-sub\-sub\-ject}}.

  \startSmallPrint

    Али требало би да имамо у виду ће ови (превише дубоки) нижи нивои
    представљени изнад врло тешко да унапреде разумевање текста!  Врло
    је вероватно да имамо велике одељке који се неизбежно баве са
    неколико тема, па ће ово читаоцу да отежа {\em схватање} њиховог
    садржаја. Ако се иде предубоко у нивое, читалац губи осећај
    комплетног текста, и то је последица превелике фрагментације
    материјала. Ја лично сматрам да је у општем случају четири нивоа
    сасвим довољно; врло ретко би било потребно да се иде до шест или
    седам нивоа, али било која већа дубина обично није добра идеја.

    Из перспективе писања изворног фајла, чињеница да креирање додатних
    поднивоа значи додавање још једног \quotation{sub} на претходни
    ниво, може учинити изворни фајл скоро нечитљивим: није једноставно
    разумети ниво команде која се зове
    \quotation{subsubsubsubsubsection} јер морам да бројим све те
    \quotation{sub}-ове! Мој савет је, дакле, да ако је заиста потребно
    толико нивоа дубине, од петог нивоа па надаље (subsubsection)
    дефинишемо сопствене команде за поделу (погледајте
    \in{одељак}[sec:definehead]) и да им дамо имена која су јаснија од
    предефинисаних.

  \stopSmallPrint

  \item Највиши ниво (\tex{part}) постоји само за нумерисане наслове и
  има особину да се наслов дела не штампа. Међутим, чак и ако се наслов не
  штампа, умеће се празна страница (па можемо претпоставити да ће се
  наслов штампати онда када корисник реконфигурише команду), а нумерација
  {\em дела} се узима у обзир за израчунавање нумерације поглавља и
  осталих одељака.

  \startSmallPrint

    Према \ConTeXt\ викију, разлог што подразумевана верзија команде
    \tex{part} не штампа ништа је што скоро увек наслов на овом нивоу
    тражи посебан распоред; и мада је то тачно, мени се не чини као довољно
    добар разлог, јер у пракси се често редефинишу и поглавља и одељци, а
    чињеница да делови не штампају ништа приморава почетнике да {\em уроне}
    у документацију како би открили шта није у реду.
    
  \stopSmallPrint

  \item Мада је први ниво поделе \quotation{део}, то је само теоретски и
  апстрактно. У одређеном документу први ниво поделе ће бити онај који
  одговара првој команди поделе у документу. Значи, у документу који нема
  делове већ поглавља, поглавље ће бити први ниво. Али ако документ нема
  ни поглавља, већ само одељке, онда хијерархија тог документа почиње од
  одељака.

\stopitemize

\stopchapter

\startsection
  [
    reference=sec:sectionsyntax,
    title=Заједничка синтакса команди поделе,
  ]

Све команде поделе, укључујући и све нивое које креира корисник
(погледајте \in{одељак}[sec:definehead]), подржавају следеће
алтернативне облике синтаксе (ако, на пример, користимо ниво
\MyKey{section}):

\vbox{\starttyping
\section [Лабела] {Наслов}
\section [Опције]
\startsection [Опције] [Променљиве] ... \stopsection
\stoptyping}\blank[nowhite]

У сва три начина, аргументи унутар великих заграда нису обавезни и могу
да се изоставе. Њима ћемо се позабавити одвојено, али прва синтакса од
ове три помаже да се објасни да се у Mark~IV препоручује употреба трећег
приступа.

\startitemize

  \item Први облик синтаксе, који би могли да назовемо
  {\em\quotation{класична}}, команде прихватају два аргумента, један
  необавезан унутар великих заграда, а други обавезан унутар витичастих
  заграда.  Необавезни аргумент служи да се команди придружи лабела која
  ће се користити за интерне референце (погледајте
  \in{одељак}[sec:references]). Обавезан аргумент унутар витичастих
  заграда је наслов одељка.

  \item Остала два облика су више у \ConTeXt\ стилу: све што је команди
  потребно се преноси вредностима и опцијама унутар великих заграда.

  \startSmallPrint

    Присетимо се да сам у \in{одељцима}[sec:command scope] и
    \in{}[sec:command options] рекао да се у систему \ConTeXt\ опсег
    важења сваке команде наводи витичастим заградама, а њене опције у
    великим заградама. Али ако размислимо о томе, наслов одређене команде
    поделе није опсег важења њене примене, па да би се остало у сагласности
    са општом синтаксом, не би требало да се наводи унутар витичастих
    заграда, већ као опција.  \ConTeXt\ дозвољава овај изузетак јер је то
    класични начин рада у систему \TeX, али нуди и алтернативне облике
    синтаксе који су конзистентнији са општим дизајном система.

  \stopSmallPrint

  Тип опција је додела вредности (ИмеОпције=Вредност) и оне су следеће:

  \startitemize

  \item {\tt\bf reference}: лабела за унакрсне референце.

  \item {\tt\bf title}: наслов одељка који ће се штампати у телу
  документа.

  \item {\tt\bf list}: наслов одељка који ће се штампати у садржају.

  \item {\tt\bf marking}: наслов одељка који ће се штампати у заглављу
  или подножју страница.

  \item {\tt\bf bookmark}: наслов одељка који ће се конвертовати у {\em
  bookmark} у PDF фајлу.

  \item {\tt\bf ownnumber}: ова опција се користи у случају када се
  одељак не нумерише аутоматски; тада ће ова опција доделити одељку
  наведени број.

  \stopitemize

  Наравно, опције \MyKey{list}, \MyKey{marking} и \MyKey{bookmark} би
  требало да се користе само онда када нам је потребан другачији наслов
  који ће заменити главни постављен опцијом \MyKey{title}. Ово је веома
  корисно, на пример, када је наслов сувише дугачак за заглавље; мада то
  можемо да постигнемо и помоћу команди
  \PlaceMacro{nomarking}\tex{nomarking} и \PlaceMacro{nolist}\tex{nolist}
  (нешто врло слично). С друге стране, треба имати на уму да ако текст
  наслова (опција \quotation{title}) садржи запете, онда мора да се
  постави унутар витичастих заграда, и комплетан текст и сама запета, како
  би се обезбедило да \ConTeXt\ зна да је запета део наслова. Исто важи и
  за остале опције: \quotation{list}, \quotation{marking} и
  \quotation{bookmark}. Дакле, да не бисмо морали да водимо рачуна о томе
  има ли у наслову запета, мислим да је добра идеја развити навику да се
  вредност било које од ових опција поставља унутар витичастих заграда.

\stopitemize

На пример, следеће линије ће креирати поглавље под називом
\quotation{Тест поглавље} којем се придружује лабела за унакрсне
референце \quotation{test}, док ће наслов у тексту бити
\quotation{Поглавље тест} уместо \quotation{Тест поглавље}.

\vbox{\starttyping
\chapter
  [
    title={Тест поглавље},
    reference={test},
    marking={Поглавље тест}
  ]
\stoptyping}\blank[nowhite]

Синтакса \tex{startТипСекције} претвара одељак у {\em окружење}. Она је
конзистентнија са чињеницом да је, као што сам рекао на почетку,
позадина сваког одељка издвојени блок текста, мада {\em окружења} која
креирају команде поделе \ConTeXt\ подразумевано не сматра за {\em
групе}. Ова процедура је оно што Mark~IV препоручује; врло могуће јер
овај начин успостављања одељака од нас захтева да експлицитно наведемо
где сваки одељак почиње и где се завршава. Тако се лакше обезбеђује
конзистентност структуре, а вероватно и боља подршка за XML и EPUB
излаз. Уствари, то је за XML излаз од суштинске важности.

Када користимо \tex{startИмеСекције} унутар великих заграда може да се
наведе једна или више променљивих. Њихове вредности могу касније да се
употребе на осталим местима у документу командом
\PlaceMacro{structureuservariable}\tex{structureuservariable}.

\startSmallPrint

  Постојање корисничких променљивих у систему \ConTeXt\ омогућава врло
  напредну употребу јер помоћу њих могу да се донесу одлуке да ли да се
  фрагмент компајлира или не, или на који начин да се то уради, или
  којим шаблоном, све у зависности од вредности одређене променљиве.
  Међутим, ови \ConTeXt\ алати излазе ван оквира материјала којим желим
  да се бавим у овом уводу.

\stopSmallPrint

\stopsection

\startsection
  [
    reference=sec:setuphead,
    title=Формат и конфигурација одељака и њихових наслова,
  ]

\startsubsection
  [title=Команде \tex{setuphead} и \tex{setupheads}]
\PlaceMacro{setuphead}\PlaceMacro{setupheads}

\ConTeXt\ подразумевано додељује одређене карактеристике сваком нивоу
поделе које углавном (али не само то) утичу на формат у којем се наслов
приказује у главном телу документа, али не и начин на који се наслов
приказује у садржају или заглављима и подножјима. Ове особине можемо да
променимо командом \tex{setuphead} чија синтакса је следећа:

\type{\setuphead[Одељци][Опције]}

где

\startitemize

  \item {\tt\bf Одељци} представља име једног или више одељака
  (раздвојених запетама) на које утиче команда. Може бити:

  \startitemize

  \item Било који од предефинисаних одељака (part, chapter, title,
  итд.), па у том случају можемо на њих да указујемо било по имену, било
  по њиховом нивоу.  За указивање по нивоу користимо реч \quotation{{\tt
  section-{\em БрНивоа}}}, где је {\em БрНивоа} број нивоа жељеног
  одељка.  Тако да је \MyKey{section-1} исто што и \MyKey{part},
  \MyKey{section-2} исто што и \MyKey{chapter}, итд.

  \item Било која врста одељка који смо сами дефинисали. Што се тога
  тиче, погледајте \in{одељак}[sec:definehead].

  \stopitemize

  \item {\tt\bf Опције} представља конфигурационе опције. То су опције
  типа експлицитне доделе вредности (ИмеОпције=вредност). Број доступних
  опција је огроман (преко шездесет) па ћу их зато објаснити груписањем у
  категорије сагласно њиховој функцији.  Међутим, морам истаћи да нисам
  успео одредити шта неке од ових опција раде нити како се користе.  О
  њима нећу да говорим.

\stopitemize

Раније сам рекао да \tex{setuphead} утиче на одељке који се експлицитно
наведу. Али то не значи да измена одређеног одељка не би требало да
утиче на остале осим ако експлицитно нису били поменути у команди.
Уствари је тачно супротно: измена одељка утиче на остале одељке {\em
који су везани} за њега, чак и када то није експлицитно наведено у
команди.  Постоје две врсте везе између различитих одељака:


\startitemize

  \item Ненумерисане команде су везане са одговарајућом нумерисаном
  командом истог нивоа, тако да промена изгледа нумерисане команде утиче и
  на изглед ненумерисане команде истог нивоа; али не и обрнуто: промена
  ненумерисане команде не утиче на нумерисану. Ово значи да ако, на
  пример, променимо неки аспект \MyKey{chapter} (ниво 2) такође мењамо и
  тај аспект за \MyKey{title}; али ако изменимо \MyKey{title}, то неће
  утицати на \MyKey{chapter}.

  \item Команде су повезане хијерархијски, тако да ако на неком нивоу
  изменимо {\em одређене особине}, та измена ће утицати и на све нивое
  који долазе након тог нивоа. Ово важи само за неке особине. На пример,
  боју: ако подесимо да се пододељци исписују црвеном бојом, такође мењамо
  и боју за подпододељке, подподпододељке на црвену, итд. Али то се не
  дешава за остале особине као што је стил фонта, на пример.

\stopitemize

Уз команду \tex{setuphead}, \ConTeXt\ обезбеђује и команду
\tex{setupheads} која глобално утиче на све команде поделе. У вези ове
команде, \ConTeXt\ вики наводи да су неки људи пријавили да не
функционише. Резултат мојих тестова је да команда ради за неке опције,
али за неке не ради.  Тачније, не ради са опцијом \MyKey{style}, што је
изненађујуће, јер је стил наслова највероватнија ствар коју би
корисник пожелео глобално да промени за све наслове. Али према мојим
тестовима, команда ради са осталим опцијама, као што су на пример,
\MyKey{number} или \MyKey{color}. Тако ће на пример,
\tex{setupheads[color=blue]} обезбедити да се сви наслови у нашем
документу исписују плавом бојом.

Пошто сам помало лењ да тестирам сваку опцију и видим да ли ради или не
са командом \tex{setupheads} (упамтите да постоји више од шездесет
опција), у даљем тексту ћу помињати само \tex{setuphead}.

Коначно: пре испитивања одређених опција, требало би да обратимо пажњу
на нешто што је речено на \ConTeXt\ викију, мада се вероватно не налази
на одговарајућем месту: неке опције функционишу само ако користимо
синтаксу \cmd{start{\em ИмеОдељка}}.

\startSmallPrint

  Ова информација је дата у вези са командом \tex{setupheads}, а не у вези
  са \tex{setuphead}. Пошто је то место на којем је објашњен највећи део
  опција, чини се да је то најразумније место да се ова информација
  изложи, ако већ треба да се каже само на једном месту. С друге стране,
  информација помиње само опцију \MyKey{insidesection} и није јасно да ли
  то исто важи и за остале опције.

\stopSmallPrint

\stopsubsection

\startsubsection
  [
    reference=sec:title parts,
    title=Делови наслова одељка,
  ]

Пре него што се упустимо у одређене опције којима можемо подесити изглед
наслова, корисно је да истакнемо да наслов може имати до три различита
дела.  \ConTeXt\ нам омогућава да их форматирамо појединачно, или
заједно.  Елементи наслова су следећи:

\startitemize

  \item {\bf Сам наслов}, то јест текст који га сачињава. У принципу,
  увек се приказује овај наслов, осим за одељке типа \MyKey{part} за које
  се подразумевано наслов не исписује. Опција која контролише да ли се
  наслов приказује или не је \MyKey{placehead} и њене вредности могу бити
  \MyKey{yes}, \MyKey{no} \MyKey{hidden}, \MyKey{empty} или
  \Doubt\MyKey{section}. Значење прве две је јасно.  Али нисам сигуран у
  вези резултата осталих вредности ове опције.

  Дакле, ако желимо да се наслов приказује у првом нивоу одељака,
  подешавање би требало да буде:

  \vbox{\starttyping
    \setuphead
      [part]
      [placehead=yes]
  \stoptyping}\blank[nowhite]

  Као што већ знамо, наслов одређених одељака може аутоматски да се
  пошаље у заглавља и садржај. Опцијама команди поделе {\tt list} и {\tt
  marking} можемо да наведемо алтернативни наслов који ће се послати тамо.
  Такође је могуће да се у току писања наслова употребе
  команде\PlaceMacro{nolist}\tex{nolist} или
  \PlaceMacro{nomarking}\tex{nomarking} тако да се одређени делови наслова
  замене елипсисима у садржају или заглављу. На пример:

  \vbox{\starttyping
    \chapter{Утицаји импресионизма \nomarking{19. века у 21. веку}}
  \stoptyping}\blank[nowhite]

  ће у заглављу да напише \quotation{Утицаји импресионизма …}.

  \item {\bf Нумерација}. Ово је случај само за нумерисане одељке (part,
  chapter, section, sub\-section...), али не важи за ненумерисане
  (title, subject, subsubject). Уствари, то да ли ће се одређени одељак
  нумерисати или не зависи од опција \MyKey{number} и
  \MyKey{incrementnumber} чије су могуће вредности \MyKey{yes} и
  \MyKey{no}. У нумерисаним одељцима се обе ове опције постављају на
  {\tt yes} а у ненумерисаним на {\tt no}.

  \startSmallPrint

   Зашто постоје две опције које контролишу исту ствар? Јер у суштини,
   оне контролишу различите ствари; једна контролише да ли се одељак
   уопште нумерише ({\tt incrementnumber}), а друга да ли се број
   приказује ({\tt number}). Ако се за одељак постави {\tt
   incrementnumber=yes} и {\tt number=no}, добићемо одељак који је споља
   (визуелно) ненумерисан, али се интерно још увек броји. То може бити
   корисно да се такав одељак постави у садржај, јер се он обично
   састоји само од нумерисаних одељака.  У вези овога, погледајте
   \in{пододељак}[sec:toc with unnumbered secs] у \in{одељку}
   [sec:manual adjustments].

  \stopSmallPrint

  \item {\bf Лабела} за наслов. У принципу, овај елемент је у насловима
  празан. Али можемо да му доделимо вредност, па ће се у том случају
  испред броја и самог наслова исписивати лабела коју смо доделили за
  тај ниво.  На пример, у насловима поглавља желимо да видимо исписану
  реч \quotation{Поглавље}, или реч \quotation{Део} за делове. За ово не
  користимо команду\tex{setuphead} већ \tex{setuplabeltext}. Ова команда
  нам омогућава да доделимо текстуалну вредност лабелама различитих
  нивоа поделе. Тако на пример, ако желимо да се у нашем документу
  испред наслова поглавља исписује \quotation{Поглавље}, треба да
  поставимо:

  \vbox{\starttyping
    \setuplabeltext
      [chapter=Поглавље~]
  \stoptyping}\blank[nowhite]

  У примеру сам иза додељеног имена поставио резервисани карактер
  \quotation{\lettertilde} који иза речи умеће размак на којем не може
  да се направи прелом реда.  Ако нам не смета да се ред преломи између
  лабеле и броја, једноставно можете да напишете размак. Али тај размак
  (било које врсте) је важан; без њега ће број бити спојен са лабелом и
  видели бисмо, на пример \quotation{Поглавље1} уместо
  \quotation{Поглавље 1}.

\stopitemize

\stopsubsection

\startsubsection
  [title=Контрола нумерације (у нумерисаним одељцима)]

Већ знамо да предефинисани нумерисани одељци (part, chapter,
section…) и то да ли се одређени одељак нумерише или не, зависи од
опција \MyKey{number} и \MyKey{incrementnumber} постављених командом
\tex{setuphead}.

Нумерација разних нивоа је подразумевано аутоматска, осим ако опцији
\MyKey{ownnumber} не доделимо вредност \MyKey{yes}.  Када је
\MyKey{ownumber=yes} мора да се назначи број који се додељује свакој
команди. Ово се ради:

\startitemize

  \item Ако је команда позвана употребом класичне синтаксе, додавањем
  аргумента са бројем пре текста наслова. На пример:\\
  \cmd{chapter\{13\}\{Наслов поглавља\}} ће да генерише поглавље којем је
  ручно додељен број 13.

  \item Ако је команда позвана синтаксом која је специфична за \ConTeXt\
  (\tex{ТипОдељка [Опције]} или \tex{startТипОдељка [Опције]}), опцијом
  \MyKey{ownnumber}. На пример:\\ \type{\chapter[title={Наслов поглавља},
  ownnumber=13]}, ће да генерише поглавље којем је ручно додељен број 13.

\stopitemize

Када \ConTeXt\ аутоматски врши нумерацију, он употребљава интерне
бројаче који чувају бројеве различитих нивоа; тако постоји бројач за
делове, други за поглавља, још један за одељке, итд. Сваки пут када
\ConTeXt\ пронађе команду поделе, он извршава следеће акције:

\startitemize[packed]

  \item Увећава за \quote{1} бројач придружен нивоу који одговара
  команди.

  \item Ресетује на 0 бројаче придружене свим нивоима испод оног којем
  одговара команда.

\stopitemize

Ово значи да ће сваки пут када се пронађе ново поглавље, бројач поглавља
да се увећа за 1 и сви одељци, пододељци, подпододељци итд. се враћају
на 0; али се не дирају бројачи придружени деловима.

Ако желите да утичете на број од којег се почиње нумерација, употребите
команду \PlaceMacro{setupheadnumber}\tex{setupheadnumber} као што следи:

\type{\setupheadnumber[ТипОдељка][Број од којег почиње бројање]}

где је {\em Број од којег почиње бројање} број од којег почиње бројање
било ког типа одељака.  Дакле ако је {\em Број од којег почиње бројање}
нула, први одељак ће бити 1; ако је 10, први одељак ће бити 11.

Ова команда омогућава и да се утиче на шаблон аутоматског увећавања;
тако на пример, можемо подесити да се поглавља или одељци броје у
паровима, или по три.  Дакле, \tex{setupheadnumber[section][+5]} ће
поставити да се одељци броје као 5 од пет; а
\tex{setupheadnumber[chapter][14, +5]} ће се постарати да прво поглавље
почне од 15 (14+1), друго ће бити 20 (15+5), треће 25, итд.

Нумерација поделе се подразумевано исписује арапским бројевима, и
укључује се нумерација свих претходних нивоа. То значи: у документу који
се састоји од делова, поглавља, одељака и пододељака, одређени пододељак
ће навести којем делу, поглављу и одељку припада.  Тако је четврти
пододељак другог одељка у трећем поглављу првог реда бити
\quotation{1.3.2.4}.

Начин приказа бројева контролишу две основне опције:

\startitemize

  \item {\tt\bf conversion:} она контролише врсту набрајања која ће се
користити. Нуди већи број вредности, зависно од типа нумерације који
желимо:
  \reference[Num:conversion]{Конверзије набрајања}

  \startitemize

    \item {\bf Нумерација арапским бројевима}: класична нумерација: 1,
    2, 3, ... се добија вредностима {\tt n, N} или {\tt numbers}.

    \item {\bf Нумерација римским бројевима}. Постоји три начина за ово:

    \startitemize[packed]

      \item Римски бројеви од великих слова: {\tt I, R, Romannumerals}.
      \item Римски бројеви од малих слова: {\tt i, r, romannumerals}.
      \item Римски бројеви у капиталу: {\tt KR, RK}.

    \stopitemize

    \item {\bf Нумерација словима}. Постоји три начина за ово:

    \startitemize[packed]

      \item Велика слова: {\tt A, Character}
      \item Мала слова: {\tt a, character}
      \item Капитал: {\tt AK, KA}
    
    \stopitemize

  \item {\bf Нумерација речима}. Значи да пишемо реч која означава број.
  Тако на пример, \quote{3} постаје \quote{Three}. Постоји два начина да
  се ово уради:

  \startitemize[packed]

    \item Речи почињу великим словом: {\tt Words}.
    \item Речи исписане само малим словима: {\tt words}.

  \stopitemize

  \item {\bf Нумерација симболима}: Нумерација базирана на симболима
  користи различите сетове симбола у којима је сваком симболу додељена
  нумеричка вредност. Пошто сетови симбола које користи \ConTeXt\ имају
  врло ограничен број симбола, онда је погодно да се користи ова врста
  нумерације када очекивани максимални број није сувише велики.  \ConTeXt\
  редом обезбеђује четири различита сета симбола: {\tt set~0, set~1, set~2
  and set~3}. Испод је наведен сваки од ових сетова који се користе за
  нумерацију.  Запазите да је за сетове {\tt set~0} и {\tt set~1}
  максимални број који може да се достигне 9, а за сетове {\tt set~2} и
  {\tt set~3} 12:
\reference[examples of conversion set]{}\blank[nowhite]
    \startitemize[empty, packed]
      \item Set 0: \dorecurse{9}{\convertnumber{set 0}{#1}\quad}\par
      \item Set 1: \dorecurse{9}{\convertnumber{set 1}{#1}\quad}\par
      \item Set 2: \dorecurse{12}{\convertnumber{set 2}{#1}\quad}\par
      \item Set 3: \dorecurse{12}{\convertnumber{set 3}{#1}\quad}\par

    \stopitemize

  \stopitemize

  \item {\tt\bf sectionsegments:} ова опција нам омогућава да
  контролишемо да ли се приказује нумерација претходних нивоа.  Можемо
  да назначимо претходне нивое који ће се приказивати.  То се ради тако
  што се идентификује почетни и крајњи ниво који се приказују.
  Идентификација нивоа може да се изврши његовим бројем (part=1,
  chapter=2, section=3, etc.), или именом (part, chapter, section,
  etc.).  Тако на пример, \MyKey{sectionsegments=2:3} наводи да би
  требало приказивати нумерацију поглавља и одељака.  Потпуно је исто
  као да кажемо \MyKey{sectionsegments=chapter:section}. Ако желимо
  назначити да се приказују сви бројеви изнад одређеног нивоа, можемо
  као вредност опције \MyKey{optionsegments} да употребимо {\em
  ПочетниНиво:all}, или {\em ПочетниНиво:*}. На пример,
  \MyKey{sectionsegments=3:*} наводи да се приказује нумерација почевши
  од нивоа 3 (section).

\stopitemize

Замислимо, на пример, да хоћемо да се делови нумеришу римским бројевима
исписаним великим словима; поглавља арапским бројевима, али без приказа
броја дела којем припадају; одељци и пододељци арапским бројевима уз
приказ бројева поглавља и одељка, а подпододељци великим словима. Требало
би да напишемо следеће:

\vbox{\starttyping
  \setuphead[part][conversion=I]
  \setuphead[chapter]     [conversion=n, sectionsegments=2]
  \setuphead[section]     [conversion=n, sectionsegments=2:3]
  \setuphead[subsection]  [conversion=n, sectionsgments=2:4]
  \setuphead[subsubsection][conversion=A, sectionsegments=5]
\stoptyping}\blank[nowhite]

\stopsubsection

\startsubsection
  [
    reference=sec:titlestyle,
    title=Боја и стил наслова,
  ]

Следеће опције контролишу стил и боју:

\startitemize

  \item {\bf Стил} се контролише опцијама \MyKey{style},
  \MyKey{numberstyle} и \MyKey{textstyle} у зависности од тога да ли
  желимо да утичемо за комплетан наслов, само на нумерацију или само на
  текст.  Овим опцијама можемо да укључимо команде које утичу на фонт;
  одређени фонт, стил (roman, sans serif или ty\-pe\-wri\-ter),
  алтернативу (italic, bold, slanted…) и величину.  Ако само желимо да
  наведемо једну особину стила, то можемо да урадимо употребом имена стила
  (на пример, \quotation{bold} за црни слог), или наводећи одговарајућу
  скраћеницу (\quotation{bf}), или команду која је генерише (\tex{bf}, у
  случају црног слога). Ако желимо да наведемо неколико особина
  истовремено, то морамо да урадимо помоћу команди које их генеришу, тако
  што их пишемо једну за другом.  С друге стране, имајте на уму да ако
  наведемо само једну особину, остале особине стила ће се успоставити
  аутоматски на подразумеване вредности за документ, а то је разлог што се
  ретко саветује успостављање само једне особине стила.

  \item {\bf Боја} се поставља опцијама \MyKey{color},
  \MyKey{numbercolor} и \MyKey{textcolor} у зависности од тога да ли
  боју желимо да поставимо за комплетан наслов, или само за набрајање или
  само за текст. Боја која се овде наводи може да буде једна од
  предефинисаних \ConTeXt\ боја, или нека друга боја коју смо раније сами
  дефинисали и доделили јој име. Међутим, овде не можемо директно да
  употребимо команду за дефиницију боје.

\stopitemize

Уз ових шест опција, постоји још пет које служе за постављање
софистициранијих особина којима можемо урадити скоро све што замислимо.
То су: \MyKey{command},
\MyKey{numbercommand}, \MyKey{textcommand},\MyKey{deepnumbercommand} и
\MyKey{deeptextcommand}. Хајде да најпре објаснимо прве три:

\startitemize

  \item {\tt\bf command} наводи команду која ће прихватити два
  аргумента, број и наслов одељка. То може бити обична
  \ConTeXt\ команда, или команда коју смо сами дефинисали.

  \item {\tt\bf numbercommand} личи на \MyKey{command}, али ова команда
  прихвата само аргумент са бројем одељка.

  \item {\tt\bf textcommand} такође личи на \MyKey{command}, али она
  прихвата само аргумент са текстом наслова.

\stopitemize

Ове три опције нам омогућавају да урадимо практично било шта што
пожелимо. На пример, ако желим да одељци буду десно поравнати,
уоквирени и са преломом линије између броја и текста, једноставно могу
да креирам команду која то ради, па да је онда наведем као вредност
опције \MyKey{command}. То би се постигло следећим линијама:

\vbox{\starttyping
\define[2]\AlignSection
  {\framed[frame=on, width=broad,align=flushright]{#1\\#2}}

\setuphead
  [section]
  [command=\AlignSection]
\stoptyping}\blank[nowhite]

Када истовремено поставимо опције \MyKey{command} и \MyKey{style},
команда се примењује на наслов са задатим стилом. Ово значи, на пример,
да ако смо поставили \MyKey{textstyle=\backslash em}, и
\MyKey{textcommand=\backslash WORD}, команда \tex{WORD} (која текст који
узима као аргумент претвара у велика слова) ће се применити на наслов са
постављеним стилом, тј.: \cmd{WORD\{\backslash em Текст наслова\}}. Ако
желимо да буде обрнуто, тј. да се стил примени на садржај наслова након
примене команде, требало да уместо опција \MyKey{textcommand} и
\MyKey{numbercommand} употребимо опције \MyKey{deeptextcommand} и
\MyKey{deepnumbercommand}.  То би у горњем примеру генерисало
\MyKey{\color[darkmagenta]{\{\backslash em\backslash WORD\{Текст
наслова\}\}}}.

У већини случајева не би било разлике ако се уради на један или други
начин. Али у неким случајевима може бити разлике.

\stopsubsection

\startsubsection
  [title=Место броја и текста наслова]

Опција \MyKey{alternative} истовремено контролише две ствари: место
набрајања у односу на текст наслова и место самог наслова (укључујући и
број и текст) у односу на страницу на којој се приказује и садржај
одељка. То су две различите ствари, али њима управља иста опција,
контролишу се истовремено.

Место наслова у односу на страницу и први пасус садржаја одељка се
контролише следећим могућим вредностима опције \MyKey{alternative}:

\startitemize

  \item {\tt\bf text:} наслов одељка се интегрише у први пасус садржаја
  одељка. Резултат је сличан ономе што производи \LaTeX\ са
  \tex{paragraph} и \tex{subparagraph}.

  \item {\tt\bf paragraph:} наслов одељка ће бити независан пасус.

  \item {\tt\bf normal:} наслов одељка ће се поставити на подразумевано
  место које \ConTeXt\ обезбеђује за одређени тип одељка у питању. Обично
  је то \MyKey{paragraph}.

  \item {\tt\bf middle:} наслов се пише као самостални, центрирани
  пасус. Ако је команда набрајања, број и текст се постављају у различите
  линије, обе центриране.

  Сличан резултат ономе што се добија са \MyKey{alternative=middle},
  добија се опцијом \MyKey{align} која контролише поравнање наслова.
  Може да има вредности \MyKey{left}, \MyKey{middle} или
  \MyKey{flushright}.  Али ако овом опцијом центрирамо наслов, број и
  текст ће се појавити на истој линији.

  \item {\tt\bf margintext:} ова опција исписује комплетан наслов
  (набрајање и текст) у простор резервисан за маргину.

\stopitemize

Место броја у односу на текст наслова се назначава следећим вредностима
опције \MyKey{alternative}:

\startitemize

  \item {\tt\bf margin/inmargin:} наслов је посебан пасус. Набрајање се
  исписује у простору резервисаном за маргину. Нисам открио разлику
  између \MyKey{margin} и \MyKey{inmargin}.

  \item {\tt\bf reverse:} наслов чини посебна пасус, али се уобичајени
  редослед обрће, па се прво исписује текст, а онда број.

  \item {\tt\bf top/bottom:} у насловима чији текст заузима више од
  једне линије, ове две опције контролишу да ли ће набрајање да се
  поравнава са првом или са последњом линијом наслова.

\stopitemize

\stopsubsection

\startsubsection
  [title=Команде или акције које се извршавају пре или након исписивања наслова]

Постоји могућност да се наведе једна или више команди које се извршавају
пре исписивања наслова (опције \MyKey{before}) или након (опције
\MyKey{after}).  Ове опције се често употребљавају за визуелно истицање
наслова. На пример: ако између наслова и текста који му претходи желимо
да уметнемо вертикални размак, \MyKey{before=\backslash blank} ће да
дода празну линију. Ако желимо још већи размак, могли бисмо да напишемо
\MyKey{before=\{\backslash blank[3*big]\}}. У овом случају смо вредност
опције поставили унутар витичастих заграда да спречимо грешку. Такође
смо визуелно могли да нагласимо размак између претходног текста и
наредног са \MyKey{before=\backslash hairline, after=\backslash
hairline}, што би исцртало хоризонталну линију пре и после наслова.

Врло сличне опцијама \MyKey{before} и \MyKey{after} су опције
\MyKey{commandbefore} и \MyKey{commandafter}. Према резултатима мојих
тестова, \Conjecture изводим закључак да је разлика у томе што ове
претходне две извршавају акције пре и након почетка слагања наслова као
таквог, док последње две показују на команде које ће се извршити пре и
након слагања {\em текста наслова}.

Ако испред наслова желимо да уметнемо прелом странице, потребно је да
употребимо опцију \MyKey{page} која између осталих, нуди и вредност
„yes” за уметање прелома странице, „left” да се уметне потребан број
прелома странце тако да се обезбеди да наслов почне на парној страници,
„right” да се обезбеди да наслов почне на непарној страници, или „no”
ако желимо да онемогућимо форсирани прелом странице. С друге стране, ова
опција ће за нивое испод \MyKey{chapter} функционисати само ако се
употреби \MyKey{continue=no}, у супротном неће радити ако је одељак,
пододељак или команда на првој страници поглавља.

\startSmallPrint

  У систему \ConTeXt, поглавља подразумевано почињу на новој страници.
  Ако се подеси да и одељци такође почињу на новој страници, јавља се
  проблем ако се први одељак поглавља јави на самом почетку поглавља: ако
  и тај одељак уметне прелом странице, имаћемо страницу која отвара
  поглавље и садржи само наслов. То није баш естетски задовољавајуће. То
  је разлог што можемо поставити опцију \MyKey{continue}, чије ми име,
  морам да признам, баш и није јасно: ако је \MyKey{continue=yes}, прелом
  странице се неће примењивати за одељке који су на првој страници
  поглавља. Ако је \MyKey{continue=no} прелом странице ће се
  употребљавати.

\stopSmallPrint

Ако уместо команди поделе употребљавамо окружења одељака (\cmd{start ...
\backslash stop}), имамо и опцију \MyKey{insidesection} којом можемо
назначити једну или више команди које ће се извршити онда када се испише
наслов и већ се налазимо унутар одељка. Ова опција нам омогућава да, на
пример, обезбедимо да се непосредно након почетка поглавља аутоматски
сложи садржај (\MyKey{insidesection=\backslash placecontent})

\stopsubsection

\startsubsection
  [title=Остале особине које могу да се подесе]

Уз оне које смо видели до сада, са \tex{setuphead} можемо да подесимо и
следеће додатне особине:

\startitemize

  \item {\bf Проред}. Контролише се са \MyKey{interlinespace} која
  као своју вредност узима име претходно креиране команде прореда са
  \tex{defineinterlinespace} и подешене са \tex{setupinterlinespace}.

  \item {\bf Поравнање}. Опција \MyKey{align} утиче на поравнање пасуса
  у којем се налази наслов. Неке од могућих вредности које може да има су:
  \MyKey{flushleft} (лево), \MyKey{flushright} (десно), \MyKey{middle}
  (центрирано), \MyKey{inner} (унутрашња маргина) и \MyKey{outer}
  (спољашња маргина).

  \item {\bf Маргина}. Опцијом \MyKey{margin} можемо ручно да поставимо
  маргину наслова.

  \item {\bf Увлачење првог пасуса}. Вредност опције \MyKey{indentnext}
  (која може бити „yes”, „no” или „auto”) контролише да ли се прва
  линија првог пасуса у одељку увлачи.  Обично је питање увлачења те
  линије (у документу у којем се све прве линије пасуса увлаче) ствар
  укуса.

  \item {\bf Ширина}. Наслови подразумевано заузимају потребну ширину,
  осим ако је она већа од ширине линије, па ће у том случају заузимати
  више од једне линије.  Опцијом \MyKey{width} можемо наслову доделити
  неку одређену ширину.  Опције \MyKey{numberwidth} и \MyKey{textwidth}
  редом додељују ширину набрајања или ширину текста наслова.

  \item {\bf Раздвајање броја и текста}. Опције \MyKey{distance} и
  \MyKey{textdistance} нам омогућавају да контролишемо размак који
  постоји између броја и текста наслова.

  \item Стил заглавља и подножја одељка. За ово користимо опције
  \MyKey{header} и \MyKey{footer}.

\stopitemize

\stopsubsection

\startsubsection
  [title=Остале \tex{setuphead} опције]

Опције са којима смо се до сада упознали нам нуде скоро неограничене
могућности за подешавање наслова одељака. Међутим, \tex{setuphead} нуди
још око тридесет опција које нисам \Doubt поменуо.  Већину углавном зато
што нисам открио чему служе или како се користе, а неколико зато што би
њихово објашњење захтевало да зађем у аспекте о којима не желим да се
бавим у овом уводу.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:definehead,
    title=Дефинисање нових команди поделе,
  ]
\PlaceMacro{definehead}

Своје сопствене команде за поделу можемо дефинисати командом
\tex{definehead} чија је синтакса:

\type{\definehead[ИмеКоманде][Модел][Конфигурација]}

где

\startitemize

  \item {\bf ИмеКоманде} представља име нове команде поделе.

  \item {\bf Модел} је има постојеће команде поделе која ће се користити
  као модел на основу којег ће нова команда иницијално да наследи све њене
  карактеристике.

  \startSmallPrint

    У суштини, нова команда наслеђује много више од почетних
    карактеристика модела: она постаје нека врста прилагођене инстанце
    модела, али са њим дели, на пример, интерни бројач који контролише
    нумерацију.

  \stopSmallPrint

  \item {\bf Конфигурација} је прилагођена конфигурација наше нове
  команде. Овде можемо да употребимо потпуно исте опције као у
  \tex{setuphead}.

\stopitemize

Није неопходно да се нова команда конфигурише у време када се креира. То
може и касније да се уради командом \tex{setuphead}, а уствари, у
примерима датим у \ConTeXt\ упутствима и његовом викију, изгледа да је
то и уобичајени начин.

\stopsection

\startsection
  [
    reference=sec:macrostructure,
    title=Макроструктура документа,
  ]

Поглавља, одељци, пододељци, наслови…, структура документа; они га
организују. Али уз структуру која је резултат ове врсте команди, у неким
штампаним књигама, посебно у онима које се пишу у академским круговима,
постоји врста {\em макро-редоследа} материјала књиге, који не узима у
обзир само садржај књиге, већ и функцију коју сваки од ових великих
делова има у књизи. Тако разликујемо:

\startitemize

  \item Почетни део документа који садржи насловну страницу, страницу са
  признањима, страницу са посветом, садржај, можда предговор, страницу
  презентације, итд.

  \item Главно тело документа, које садржи основни текст документа,
  подељен у делове, поглавља, одељке, пододељке, итд. Овај део је обично
  и најопширнији и најважнији.

  \item Додатни материјал који се састоји од додатака и анекса који
  развијају или дају пример неких ствари којима се бавило у главном
  телу, или обезбеђују додатну документацију коју није написао аутор
  главног тела, итд.

  \item Завршни део документа у коме можемо пронаћи библиографију,
  индексе, речнике, итд.

\stopitemize

Сваки од ових делова у изворном фајлу можемо да омеђимо окружењима
наведеним у \in{табели}[tbl:macrostructure].

{\switchtobodyfont[small]
\placetable
  [here]
  [tbl:macrostructure]
  {Окружења која одражавају макроструктуру документа}
{\starttabulate[|l|l|]
\HL
\NC {\bf Део документа}
\NC {\bf Команда}
\NR
\HL
\NC Почетни део
\NC\backslash startfrontmatter [Опције] ... \backslash stopfrontmatter
\NR\PlaceMacro{startfrontmatter}
\NC Главно тело
\NC\backslash startbodymatter [Опције] ... \backslash stopbodymatter
\NR\PlaceMacro{startbodymatter}
\NC Додаци
\NC\backslash startappendices [Опције] ... \backslash stopappendices
\NR\PlaceMacro{startappendices}
\NC Завршни део
\NC\backslash startbackmatter [Опције] ... \backslash stopbackmatter\PlaceMacro{startbackmatter}
\NR
\HL
\stoptabulate
}}

Четири окружења прихватају исте четири опције: \MyKey{page},
\MyKey{before}, \MyKey{after} и \MyKey{number}, а њихове вредности и
резултат употребе су исти као код \tex{setuphead} (погледајте
\in{одељак}[sec:setuphead]), мада би требало запазити да ће опција
\MyKey{number=no} овде да елиминише нумерацију свих команди поделе
унутар окружења.

Уметање било које од ових великих подела у документ има смисла само ако
оно служи да успостави неку врсту разликовања између њих. Можда заглавља
или нумерација страница у почетном делу. Конфигурација сваког од ових
блокова се врши командом
\PlaceMacro{setupsectionblock}\tex{setupsectionblock} чија је синтакса:

\type{\setupsectionblock [Име блока] [Опције]}

где {\em Име блока} може да буде {\tt frontpart}, {\tt bodypart}, {\tt
appendix} или {\tt backpart}, а опције су оне које смо управо навели:
\MyKey{page}, \MyKey{number}, \MyKey{before} и \MyKey{after}. На пример,
ако желимо подесити да се {\em frontmatter} (почетном делу) странице
нумеришу римским бројевима, у преамбули нашег документа треба да
напишемо:

\starttyping
\setupsectionblock
  [frontpart]
  [
    before={\setuppagenumbering[conversion=Romannumerals]}
  ]
\stoptyping

Из подразумеване \ConTeXt\ конфигурације ова четири блока следи да:

\startitemize

  \item Четири блока почињу нову страницу.

  \item Нумерација одељака се мења у сваком од ових блокова:

  \startitemize

    \item У {\tt frontmatter} и {\tt backmatter} се сви нумерисани
    одељци подразумевано не нумеришу.

    \item У {\tt bodymatter} поглавља користе арапске бројеве.

    \item У {\tt appendices} се поглавља нумеришу великим словима.

  \stopitemize

\stopitemize

Такође је могуће и креирање нових блокова одељака командом
\PlaceMacro{definesectionblock}\tex{definesectionblock}.

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=72 : %%%
