%%% Фајл:     b09_References.mkiv
%%% Аутор:    Joaquín Ataz-López
%%% Започето: Јул 2020
%%% Довршено: Август 2020
%%% Садржај:  Као и претходно поглавље, у почетку је ово поглавље било
%%%	      одељак поглавља 12. Али када сам почео да га пишем,
%%%	      схватио сам да утиче на документ као целину, тако да је
%%%	      променио место. У овом случају информације суштински
%%%	      долазе из викија. 
%%% 
%%% Уређивано са: Emacs + AuTeX - и повремено са vim + context-plugin
%%%

% \environment ../introCTX_env.mkiv

\startcomponent b09_References.mkiv

\startchapter
  [title=Референце и хиперлинкови]

\TocChap

\startsection
  [title=Типови референци]

Научни и технички документи су пуни референци:

\startitemize

\item Оне понекада указују на остале документе који су основа за оно што
је речено или што је у контрадикцији са оним што се објашњава, или што
развија или нијансира идеју којом се бави, итд. У овим случајевима се
каже да је референца {\em спољашња} и, ако документ треба да буде
академски ригорозан, референца узима облик {\em цитата} из литературе.

\item Али је такође уобичајено да се у једном од одељака неког документа
указује на неки други одељак у њему, и у том случају се каже да је
референца {\em интерна}. Такође постоји и интерна референца када се на
неком месту у документу коментарише неки аспект одређене слике, табеле,
напомене или елемента сличне природе, тако што се на њега указује према
његовом броју, или према броју странице на којој се налази.

Из разлога прецизности, интерне референце би требало да указују на тачно
место, као и на место које се лако проналази. Из тог разлога су ове
врсте референци увек референца или на нумерисани елемент (као када, на
пример, кажемо \quotation{погледајте табелу 3.2}, или
\quotation{поглавље 7}), или бројеви странице. Нејасне референце типа
\quotation{као што смо већ рекли} или \quotation{као што ћемо касније
видети} нису праве референце, и нема посебног захтева за начин њиховог
словослагања, нити постоји било какав специјални алат за то. И ја лично
одвраћам своје докторанте или магистранте од навике да користе ову
праксу.

\startSmallPrint

Интерне референце се такође уобичајено називају и \quotation{унакрсне
референце} мада ћу у овом документу једноставно да користим израз
\quotation{референце} у општем смислу, а \quotation{интерне референце}
када желим да будем одређенији.

\stopSmallPrint

\stopitemize

Да би разјаснио терминологију коју користим за референце, место у
документу на којем се уводи референца ћу називати {\em извор}, а место
на које она указује, {\em циљ}. Када се посматра на овај начин, могли
бисмо рећи да је референца интерна када су извор и циљ у истом
документу, а спољашња када су извор и циљ у различитим документима.

Из угла словослагања документа:

\startitemize

\item Спољашње референце не представљају неки посебан проблем, тако да у
принципу не захтевају било какав алат којим се уводе: сви потребни
подаци из циљног документа су ми доступни и могу да их користим у
референци. Међутим, ако је документ извора електронски документ, а циљни
документ је такође доступан на мрежи, онда у референцу може да се уметне
хиперлинк који омогућава директан скок на циљ. У овим случајевима се
каже да је документ извора {\em интерактиван}.

\item За разлику од тога, интерне референце представљају изазов за
словослагање документа, јер свако ко има искуства у припреми умерено
дугачких научних или техничких докумената зна да је скоро неизбежно да
се током припреме документа нумерација страница, одељци, слике, теореме,
или сличне ствари које се наводе у референци, мењати. Тако одржавање
референци ажурним постаје врло тешко.

\startSmallPrint

У време пре компјутера, аутори су избегавали интерне референце; а оне
које су биле неизбежне, као што је садржај (који је, ако уз њега иде и
број странице сваког одељка, пример интерне референце), писали су на
крају.

\stopSmallPrint

\stopitemize

Чак и најограниченији системи за словослагање, као што су текст
процесори, омогућавају уметање неке врсте интерних унакрсних референци
као што су садржаји. Али то није ништа у поређењу са свеобухватним
механизмом за управљање референцама који је саставни део система
\ConTeXt. Његова одлика је могућност комбинације механизма за управљање
интерним референцама, намењеним за одржавање референци ажурним, са
употребом хиперлинкова, што очигледно није искључиво само за спољашње
референце.

\stopsection

\startsection
[
reference=sec:references,
title=Интерне референце,
]

За успостављање интерне референце, потребне су две ствари:

\startitemize[n]

\item Лабела или идентификатор на циљној тачки. Док компајлира документ,
\ConTeXt\ ће овој лабели да придружи одређене податке. Врсте лабеле ће
одредити тачно које податке; то може бити број одељка, број слике, број
који је придружен одређеној ставки нумерисане листе, наслов одељка, итд.

\item Команда на месту извора која чита податке придружене лабели
повезаној са местом циља и која их умеће на место извора.  Команда
варира у зависности од тога које податке лабеле желимо да уметнемо на
место извора.

\stopitemize

Када говоримо о референци, то радимо у релацији
\quotation{извор~\longrightarrow~циљ}, тако да би можда требало најпре
да објаснимо ствари које се тичу извора, па тек онда ствари које се тичу
циља. Међутим, сматрам да је разумевање логике референци лакше ако се
редослед објашњавања обрне.

\startsubsection
[
reference=sec:target labels,
title=Лабела у циљу референце,
]

У овом поглављу под појмом {\em лабела} подразумевам текст стринг који
ће се придружити месту циља референце и који ће се интерно користити за
добављање одређених информација у вези са местом циља референце, као што
су, на пример, број странице, број одељка, итд. Уствари, информације
придружене свакој лабели зависе од процедуре којом се лабела креира.
\ConTeXt\ ове лабеле назива {\em референце}, мада ја сматрам да је овај
други појам мање јасан јер поседује много шире значење.

Лабела придружена циљу референце:

\startitemize

\item Захтева да је сваки потенцијални циљ у документу јединствен, тако
да се може одредити једнозначно. Ако исту лабелу користимо за различите
циљеве, \ConTeXt\ неће пријавити грешку, већ ће учинити да две референце
указују на прву лабелу коју пронађе (у изворном фајлу), па ће споредни
ефекат тога бити да су можда неке од наших референци погрешне, а што је
још горе, нећемо то приметити. Из тог разлога је врло важно обезбедити
да када се креира лабела, новој лабели којој вршимо доделу није већ
раније извршена додела.

\item Може да се састоји из слова, цифри, знакова интерпункције,
размака, итд. На местима на које се наиђе на размаке, и даље се
примењују општа \ConTeXt\ правила која се тичу ове врсте карактера
(погледајте \in{одељак}[sec:spaces]), тако да се, на пример,
\quotation{\type{Moja fina labela}} и \quotation{\type{Moja   fina
  labela}} третирају као иста лабела, мада је у обе примењен различит
број размака.

\stopitemize

Пошто нема ограничења у карактерима који могу да се користе у имену
лабеле, а ни у броју карактера, мој савет је да се употребе имена лабела
која су јасна, па ће нам то помоћи да разумемо изворни фајл када га
будемо читали много касније након што је написан. То је разлог што
пример који сам малопре навео (\quotation{Moja fina labela}) није баш
добар пример, јер нам не говори ништа о циљу на који указује лабела.  На
пример, за наслов овог одељка би лабела \quote{sec:Labela cilja} била
боља.

За придруживање одређеног циља лабели, у суштини постоје две процедуре:

\startitemize[n]

\item Путем аргумента или опције команде која се користи за креирање
елемента на који ће лабела да указује. Са ове тачке гледишта, све
команде које креирају неку врсту структуре или текст елемент који може
бити циљ референце прихватају и опцију која се назива \MyKey{reference}
и која се користи за уметање лабеле. Понекада је лабела уместо {\em
опције} садржај комплетног аргумента.

Добар пример за ово што сам навео се налази у командама поделе, које као
што знамо из (\in{одељка}[sec:sectionsyntax]), омогућавају неколико
различитих синтакси. Команда се у класичној синтакси пише као:

\type{\section[Лабела]{Наслов}}

а у синтакси специфичној за \ConTeXt\ Mark IV, команда се пише као

\starttyping
\startsection
 [title=Наслов, reference=Лабела, ...   ]
\stoptyping

У оба случаја команда форсира уметање лабеле која ће се придружити
одељку (или поглављу, пододељку, итд.) о коме је реч.

Рекао сам да се ова могућност налази у {\em свим командама} које нам
омогућавају да креирамо текст елемент који може да постане циљ
референце. Све су то текст елементи који се нумеришу, од којих су неки
као што су то одељци, плутајући објекти свих врста (табеле, слике и
слично), фусноте или напомене на крају, цитати, нумерисане листе, описи,
дефиниције, итд.

\startSmallPrint

Када се лабела уноси директно аргументом, а не као опција којој се
додељује вредност, у систему \ConTeXt\ је могуће да се неколико лабела
придружи истом циљу. На пример:

\type{\chapter[labela1, labela2, labela3] {Моје поглавље}}

Није ми потпуно јасно која би била предност имати више различитих лабела
за један циљ, али претпостављам \Conjecture да је то могуће не због неке
предности, већ услед неког {\em интерног} захтева система \ConTeXt\ који
важи за одређене врсте аргумената.

\stopSmallPrint

\item Помоћу команди \PlaceMacro{pagereference}\tex{pagereference},
\PlaceMacro{reference}\tex{reference}, или
\PlaceMacro{textreference}\tex{textreference} чија је синтакса:

\starttyping
\pagereference[Лабела]
\reference[Лабела]{Текст}
\textreference[Лабела]{Текст}
\stoptyping

\startitemize

\item Лабела која се креира са \tex{pagereference} нам омогућава да
добијемо број странице.

\item Лабеле које се креирају са \tex{reference} и \tex{textreference}
нам омогућавају да добијемо и број странице као и текст који се
придружује уз њих и наведен је као аргумент.

И у \tex{reference} и у \tex{textreference}, текст који се везује за
лабелу не постоји у финалном документу на месту на којем се налази
команда (циљ референце), али може да се врати и појави на месту извора
референце.

\stopitemize

\stopitemize

Раније сам рекао да се свакој лабели придружују одређене информације у
вези места циља. Од типа лабеле зависи које су то информације:

\startitemize

\item Све лабеле {\em памте} (у смислу да омогућавају враћање) број
странице команде која их је креирала. За лабеле придружене одељцима који
се можда простиру на више страница, тај број ће бити број странице где
одељак о којем је реч почиње.

\item Лабеле уметнуте командом која креира нумерисани текст елемент
(одељак, напомена, табела, слика, итд.) {\em памте} број придружен том
елементу (број одељка, број напомене, итд.)

\item Ако овај елементи има {\em наслов}, као што је то случај са, на
пример, одељцима, али такође и табелама ако су биле уметнуте командом
\tex{placetable}, она ће памтити тај наслов.

\item Лабеле креиране командом \tex{pagereference} {\em памте} само
број странице.

\item Оне креиране командама \tex{reference} или \tex{textreference}
такође памте текст који им је придружен и које ове команде узимају као
аргумент.

\startSmallPrint

Уствари нисам сигуран шта је стварна разлика између команди
\tex{reference} и \tex{textreference}. Мислим да је могуће да
\Conjecture дизајн три команде које омогућавају креирање лабеле покушава
да се одговара дизајну три команде које омогућавају добијање информација
од лабела (које ћемо представити ускоро); али истина је да су, према
мојим тестовима, \tex{reference} и \tex{textreference} редундантне
команде.

\stopSmallPrint

\stopitemize

\stopsubsection

\startsubsection
[title=Команде на месту извора референце које преузимају податке са
места циља]

Команде које ћу управо да представим преузимају информације из лабела, а
ако је наш документ интерактиван, генеришу и везу са циљем референце.
Али битна ствар у вези са овим командама је да се информације преузимају
од лабеле. Ако само желимо да креирамо везу, без преузимања било каквих
информација од лабеле, морамо да употребимо команду \tex{goto} која је
објашњена у \in{одељку} [sec:createlinks].

\startsubsubsection
[title=Основне команде за преузимање информација од лабеле]

Имајући у виду да свака лабела која се придружи месту циља може да чува
различите информације, логично је да \ConTeXt\ нуди три различите
команде за преузимање тих информација; у зависности од тога коју
информацију са места циља референце желимо да преузмемо, користимо једну
од следећих команди:

\startitemize

\item Команда \tex{at} нам омогућава да преузмемо број странице на којој
је лабела.

\item За лабеле које памте број елемента (број одељка, број напоменем
број ставке, број табеле, итд.) уз број странице, команда  
\tex{in} нам омогућава да преузмемо и овај број.

\item Коначно, за лабеле које памте текст који се придружује лабели
(наслов одељка, наслов слике уметнуте командом \tex{placefigure}, итд.)
команда \tex{about} нам омогућава да преузмемо тај текст.

\stopitemize

Ове три команде, \PlaceMacro{at}\tex{at} \PlaceMacro{in}\tex{in}
\PlaceMacro{about}\tex{about}, имају исту синтаксу:

\starttyping
\at{Текст}[Лабела]
\in{Текст}[Лабела]
\about{Текст}[Лабела]
\stoptyping

\startitemize

\item {\em Лабела} је лабела од које желимо да преузмемо информацију.

\item {\em Текст} је текст написан непосредно испред информације коју
желимо да преузмемо командом. Између текста и податка из лабеле ће се
уметнути размак који не може да се преломи, а ако је функција
интерактивности укључена на такав начин да команда осим преузимања
информације генерише и линк који нам омогућава да скочимо на место циља,
текст који је наведен као аргумент ће бити део линка (на њега ће моћи да
се кликне).

\stopitemize

У наредном примеру можемо видети како \tex{in} преузима број одељка, а
\tex{at} број странице.

\startDoubleExample
\starttyping
У \in{одељку}[sec:target labels], који
почиње на \at{страници}[sec:target
labels], објашњавају се карактеристике
лабела које се користе за интерне
референце.
\stoptyping

У \in{одељку}[sec:target labels], који почиње на
\at{страници}[sec:target labels], објашњавају се карактеристике лабела
које се користе за интерне референце.

\stopDoubleExample

Запазите да је \ConTeXt\ аутоматски креирао хиперлинкове (погледајте
\in{одељак}[sec:interactivity]), и да је текст наведен као аргумент за
\tex{in} и \tex{at} део линка. Али да смо ово написали на другачији
начин, резултат би био следећи:

\startDoubleExample
\starttyping
У одељку \in{}[sec:target labels], који
почиње на страници \at{}[sec:target
labels], објашњавају се карактеристике
лабела које се користе за интерне
референце.
\stoptyping


У одељку \in{}[sec:target labels], који почиње на страници \at{}
[sec:target labels], објашњавају се карактеристике лабела које се
користе за интерне референце.

\stopDoubleExample

Остатак текста остаје исти, али речи {\em одељку} и {\em страници} које
се налазе испред референце нису део линка, јер више нису део команде.

Ако \ConTeXt\ није могао да пронађе лабелу на коју указују команде
\tex{at}, \tex{in} или \tex{about}, неће се јавити грешка у
компајлирању, али ће се у финалном документу, на месту на којем би
информација коју ове команде преузимају требало да се прикаже, исписати
\quotation{??}.

\startSmallPrint

Постоје два разлога услед којих \ConTeXt\ не може да пронађе лабелу:

\startitemize[n]

\item Направили смо грешку док смо је писали.

\item Компајлирамо само део документа, а лабела указује на део који још
увек није компајлиран (погледајте \in{одељке}[input] и
\in{}[sec-projects]).

\stopitemize

У првом случају ће бити потребно да се грешка исправи. Стога је добра
идеја да када завршимо компајлирање комплетног документа (па више није
могуће да дође до другог случаја), у PDF фајлу потражимо сва појављивања
\quotation{??} и тако потврдимо да у документу нема {\em прекинутих}
референци.

\stopSmallPrint

\stopsubsubsection

\startsubsubsection
[title=Преузимање информације придружене лабели командом \tex{ref}]
\PlaceMacro{ref}

Свако од \tex{at}, \tex{in} и \tex{about} преузима неке елементе лабеле.
Постоји још једна команда која нам омогућава да преузмемо неке елементе
лабеле који јој се наведу. То је команда \tex{ref}, а њена синтакса је:

\type{\ref[Елемент који се преузима][Лабела]}

где први аргумент може да буде:

\startitemize

\item {\tt text}: преузима текст придружен лабели.

\item {\tt title}: преузима наслов придружен лабели.

\item {\tt number}: преузима број повезан са лабелом. На пример, у
одељцима је то број одељка.

\item {\tt page}: преузима број странице.

\item {\tt realpage}: преузима стварни број странице.

\item {\tt default}: преузима оно што \ConTeXt\ сматра за {\em природни}
елемент лабеле. У општем случају се ово подудара са оним што преузима
{\tt number}.

\stopitemize

Уствари, команда \tex{ref} је много прецизнија него \tex{at}, \tex{in}
или \tex{about}, па тако на пример, прави разлику између броја странице
и стварног броја странице. Број странице не мора да се подудари са
стварним бројем странице ако, на пример, нумерисање документа почне од
1500 (јер је документ наставак неког претходног) или ако су странице у
преамбули биле нумерисане римским бројевима, па се у главном делу поново
почиње. Слично овоме, \tex{ref} прави разлику и између {\em текста} и
{\em наслова} придруженог референци, нешто што \tex{about}, на пример,
не ради.

Ако се \tex{ref} употреби за преузимање информације од лабеле која такву
информацију нема (нпр. наслов лабеле придружене фусноти), команда ће да
врати празан стринг.

\stopsubsubsection

\startsubsubsection
[title=Откривање места на које води линк]

\ConTeXt\ такође обезбеђује и две команде осетљиве на {\em адресу
линка}. \quotation{Адресом линка} желим да одредим да ли се циљ линка у
изворном фајлу проналази испред или иза извора. На пример: пишемо наш
документ и желимо да укажемо на одељак који би у коначном садржају могао
да дође испред или иза онога који управо пишемо. Просто јер још увек
нисмо донели одлуку. У оваквој ситуацији би било корисно имати команду
која пише једно или друго у зависности од тога да ли циљ на крају дође
испред или иза извора у финалном документу.  Као одговор на потребе као
што је ова, \ConTeXt\ обезбеђује команду
\PlaceMacro{somewhere}\tex{somewhere} чија је синтакса:

\type{\somewhere{Текст ако је испред}{Текст ако је иза}[Лабела]}.

\page[preference]

На пример, у следећем тексту:

\starttyping
Команда \type{\somewhere} такође може и да детектује адресу хиперлинка.
На овај начин можемо такође да пронађемо поглавља или остале текст елементе
\somewhere{испред}{иза}[sec:references] и да о њиховим описима
дискутујемо на неком другом месту \somewhere{испред}{иза}[sec:interactivity].
\stoptyping

\startnarrower\switchtobodyfont[small]

\color[red]{Команда \type{\somewhere} такође може и да детектује адресу
хиперлинка.  На овај начин можемо такође да пронађемо поглавља или
остале текст елементе \somewhere{испред}{иза}[sec:references] и да о
њиховим описима дискутујемо на неком другом месту
\somewhere{испред}{иза}[sec:interactivity].}

\stopnarrower

\startSmallPrint

За овај пример сам употребио две стварне лабеле у изворном фајлу овог
поглавља.

\stopSmallPrint

Још једна команда која може да детектује да ли се лабела на коју
покажемо налази испред или иза је команда
\PlaceMacro{atpage}\tex{atpage} чија синтакса је:

\type{\atpage[лабела]}

Ова команда је врло слична претходној, али уместо да нам омогући да сами
наведемо текст, у зависности од тога да ли се лабела налази испред или
иа, \tex{atpage} умеће подразумевани текст за свака од два случаја, а
ако је документ интерактиван, умеће и хиперлинк.

Текст који умеће \tex{atpage} је онај који се придружи уз
\MyKey{precedingpage} ознаке у случају када се {\em лабела} коју
прихвата као аргумент налази {\em испред} команде, а \MyKey{hereafter} у
супротном случају.

\startSmallPrint

Када сам стигао до овде, схватио сам да ме је претходна одлука
преварила: у овом одељку сам одлучио да оно што \ConTeXt\ назива
\quotation{референца}, зовем \quotation{лабела}. Изгледало ми је јасно.
Али одређени фрагменти текста које генеришу \ConTeXt\ команде, као што
је команда \tex{atpage}, такође се називају
\quotation{лабеле}\footnote{У српском преводу је за овај појам изабран
израз {\em ознаке,} тако да не долази до овог проблема – {\em прим.
прев.}} (овога пута у другом смислу).  (Погледајте
\in{одељак}[sec:labels]). Надам се да се читалац неће збунити. Сматрам
да се из контекста може разумети на које различито значење речи {\em
лабела} мислим у сваком случају.

\stopSmallPrint

Дакле, текст који умеће команда \tex{atpage} можемо да изменимо на исти
начин као што мењамо текст било које друге ознаке:

\starttyping
\setuplabeltext[sr][precedingpage=Нови текст ]
\setuplabeltext[sr][hereafter=Нови текст ]
\stoptyping

\startSmallPrint

Верујем да на овом месту постоји ситна грешка у \suite- (дистрибуцији
коју користим). Испитујући имена предефинисаних ознака у систему
\ConTeXt\ које могу да се промене командом \tex{setuplabeltext},
проналазе се два пара ознака које су добри кандидати да их користи
команда \tex{atpage}: 

\startitemize[packed]

\item \MyKey{precedingpage} и \MyKey{followingpage}.
\item \MyKey{hencefore} и \MyKey{hereafter}.

\stopitemize

Можемо претпоставити да би \tex{atpage} користила или први или други
пар. Али уствари, за ставке које долазе испред, она користи
\MyKey{precedingpage}, а за оне које долазе иза користи
\MyKey{hereafter}, па ми се чини да то није конзистентно.

\stopSmallPrint

\stopsubsubsection

\stopsubsection

\startsubsection
[title=Аутоматско генерисање префикса којим се спречавају лабеле
дупликати]

У великом документу није увек једноставно да се спречи дуплирање лабела.
Стога се препоручује да се уведе неки ред у начин који изаберемо за
именовање лабела. Једна пракса која помаже је да се користе префикси за
лабеле који се мењају у зависности од типа лабеле. На пример,
\quotation{sec:} за одељке, \quotation{fig:} за слике, \quotation{tbl:}
за табеле, итд.

У вези овога, \ConTeXt\ обезбеђује колекцију алата који омогућавају да:

\startitemize

\item Сам \ConTeXt\ аутоматски генерише лабеле за све дозвољене
елементе.

\item Свака ручно генерисана лабеле може да има префикс, било неки који
смо ми унапред одредили, било онај који аутоматски генерише \ConTeXt.

\stopitemize

Детаљно објашњење овог механизма је дугачко, и мада су ово несумњиво
корисни алати, не сматрам да су од суштинске важности. Дакле, пошто не
могу да се објасне у неколико речи, радије нећу да их објашњавам, већ ћу
да упутим на оно што се о њима говори у \ConTeXt\ референтном упутству,
или на \goto{викију.}[url(https://wiki.contextgarden.net/References)]

% Ако изаберемо да сами пишемо своје лабеле, команда која нам помаже да
% избегнемо дупликате је \tex{showreferences}: она ће нам приказати
% листу свих лабела које су уметнуте у документ.

\stopsubsection

\stopsection

\startsection
[
reference=sec:interactivity,
title=Интерактивни електронски документи,
]

Само електронски документи могу да буду интерактивни; али нису сви.
{\em Електронски} документ је онај који се чува у компјутерском фајлу и
који може да се отвори и чита директно на екрану.  С друге стране,
електронски документ опремљен алатима који кориснику омогућавају да врши
{\em интеракцију} са њим, назива се интерактивни; то јест: можемо са њим
још нешто осим пуког читања. Интерактивност постоји када, на пример,
документ поседује дугмад која врше неку акцију, или линкове којима
можемо да скочимо на неко друго место у документу, или на спољашњи
документ; или када постоје површине документа у којима корисник може да
пише, или постоје аудио или видео клипови који могу да се пусте, итд.

Сви документи које генерише \ConTeXt\ су електронски (пошто \ConTeXt\
генерише PDF који је по својој дефиницији електронски документ), али они
нису увек интерактивни. Укључивање интерактивности мора експлицитно да
се уради на начин који је показан у следећем одељку.

Ипак, имајте на уму да иако \ConTeXt\ генерише интерактивни PDF,
потребан вам је PDF читач који омогућава да употребите ту
интерактивност, пошто не може баш сваки постојећи PDF читач да користи
хиперлинкове, дугмад и сличне ствари које се тичу интерактивних
докумената.

\startsubsection
[title=Укључивање интерактивности у документима]
\PlaceMacro{setupinteraction}

\ConTeXt\ подразумевано не корити интерактивне функције, осим ако му
експлицитно не кажете да их користи. То се обично ради у преамбули
документа. Команда која укључује ову могућност је:

\type{\setupinteraction[state=start]}

Када желимо да генеришемо интерактивни документ, ова команда се обично
употреби само једном у преамбули. Али у суштини можемо да је користимо
колико год желимо често када је потребно да изменимо стање
интерактивности документа.  Опција \MyKey{state=start} укључује
интерактивност, док је опција \MyKey{state=stop} искључује, тако да
интерактивност можемо да искључимо у неким поглављима или {\em деловима}
нашег документа где тако желимо.

\startSmallPrint

Не пада ми на памет ниједан разлог због којег би пожелели да имамо
неинтерактивне делове документа који је интерактиван. Али оно што је
важно у вези са филозофијом система \ConTeXt\ је да ако је нешто
технички могуће, чак и ако није вероватно да ћемо га користити, систем
нуди процедуру да се то уради. Оваква филозофија је разлог што систем
\ConTeXt\ поседује огроман број могућности и спречава да прост увод, као
што је овај, буде {\em кратак}.

\stopSmallPrint

Једном када се успостави интерактивност:

\startitemize

\item Одређене \ConTeXt\ команде ће већ поседовати хиперлинкове. Дакле:

\startitemize

\item Команде за креирање садржаја ће бити, у принципу и само ако се
експлицитно не наведе другачије, интерактивне, тј. клик на ставку
садржаја врши скок на страницу на којој почиње тај одељак.

\item Команде за интерне референце које смо видели у првом делу овог
поглавља, где се кликом на њих аутоматски скаче на циљ референце.

\item Фусноте и белешке на крају, где када се кликом на сидро у главном
телу текста скаче на страницу на којој је написана сама напомена, а
кликом на ознаку напомене у тексту напомене се скаче на место у главном
тексту на којем је извршен позив на напомену.

\item Итд.

\stopitemize

\item Укључује се могућност употребе осталих команди посебно
дизајнираних за интерактивне документе, као што су презентације.  Оне
употребљавају многе алате везане за интерактивност, као што су дугмад,
менији, слике за пресвлачење, уграђени звук или видео, итд.  Објашњење
свега овога би било предугачко, а и презентације су прилично специјална
врста документа. У следећим редовима ћу зато описати једну особину
везану за интерактивност: хиперлинкове.

\stopitemize

\stopsubsection

\startsubsection
[title=Основна конфигурација интерактивности]

Уз укључивање и искључивање интерактивности, команда
\tex{setupinteraction} нам омогућава и да конфигуришемо неке ствари
везане за интерактивност; углавном, мада не само то, боју и стил
линкова. То се ради следећим опцијама команде:

\startitemize

\item {\tt color}: контролише {\em нормалну} боју линкова.

\item {\tt contrastcolor}: одређује боју линкова којима је циљ на истој
страници на којој је и извор. Препоручујем да се ова опција увек постави
на исти садржај као и претходна.

\item {\tt style}: контролише стил линка.

\item {\tt title, subtitle, author, date, keyword}: вредности додељене
овим опцијама се конвертују у метаподатке PDF фајла који генерише
\ConTeXt.

\item {\tt click}: ова опција контролише да ли линк треба да се истакне
када се на њега кликне.

\stopitemize

\stopsubsection

\stopsection

\startsection
[title=Хиперлинкови на спољашње документе]

Направићу разлику између команди које не креирају линк већ помажу код
словослагања URL адреса линка, и команди које креирају хиперлинк. Хајде
да их погледамо одвојено:

\startsubsection
[title={Команде које помажу у словослагању\\хиперлинкова, али их не
креирају},
bookmark={Команде које помажу у словослагању хиперлинкова, али их не
креирају}]

URL адресе су углавном врло дугачке и садрже све врсте карактера, чак и
карактере који су резервисани у систему \ConTeXt\ и не могу директно да
се користе.  Уз то, када у документу треба да се прикаже URL, веома је
тешко сложити пасус, јер URL може да прекорачи дужину линије и уопште не
садржи размаке који би могли да се искористе за уметање прелома линије.
Чак штавише, у URL адресама није разумно растављати речи да би се
уметнули преломи редова, јер је читаоцу врло тешко да зна да ли је
цртица последица хифенације, или је уствари део саме URL адресе.

\ConTeXt\ зато обезбеђује две могућности за {\em словослагање} URL
адреса.  Прва је првенствено намењена URL адресама које ће се користити
интерно, али се уствари неће приказивати у документу. Друга служи за URL
адресе које треба да се напишу у документ. Хајде да их погледамо једну
по једну:

\startdescription{\tex{useURL}}\PlaceMacro{useURL}

Ова команда нам омогућава да у преамбули документа напишемо URL и да му
придружимо неко име, па када желимо да га употребимо у документу, можемо
да га позовемо тим именом. Посебно је корисно са URL адресама које ће се
у документу користити више пута.

\page[preference]

Команда подржава две начина употребе:

\startitemize[n, packed]

\item \type{\useURL[Придружено име][URL]}
\item \type{\useURL [Придружено име] [URL] [] [Текст линка]}

\stopitemize

\startitemize

\item У првој верзији, URL адреси се просто придружује име којим ће се
позивати у документу. Али онда, да би употребили URL, када га позивамо
мораћемо на неки начин да наведемо текст који ће се приказати у
документу и на који ће моћи да се кликне.

\item У другој верзији последњи аргумент садржи текст на који ће моћи да
се кликне. Трећи аргумент постоји у случају када URL желимо да поделимо
на два дела, тако да први део садржи приступну адресу, а други део име
одређеног документа или страницу коју желимо да отворимо. На пример:
адреса документа који објашњава шта је \ConTeXt:
\color[blue]{\hyphenatedurl{http://www.pragma-ade.com/general/manuals/what-is-context.pdf}}.
Ова адреса може да се у потпуности напише као други аргумент, чиме
трећи остаје празан:

\starttyping
\useURL [WhatIsCTX]
  [http://www.pragma-ade.com/general/manuals/what-is-context.pdf]
  []
  [Шта је \ConTeXt?]
\stoptyping

али такође можемо и да је поделимо на два аргумента:

\starttyping
\useURL [WhatIsCTX]
  [http://www.pragma-ade.com/general/manuals/]
  [what-is-context.pdf]
  [Шта је \ConTeXt?]
\stoptyping

У оба случаја ћемо ту адресу придружити уз реч \MyKey{WhatIsCTX}, тако
да укључи линк на ту адресу, а ту команду ћемо користити да креирамо
линк; уместо саме URL адресе, просто можемо да напишемо
\MyKey{WhatIsCTX}.

Ако на било које место у тексту желимо да уметнемо ту URL адресу коју
смо придружили имену командом \tex{useURL}, можемо да употребимо
\tex{url[Придружено име]} што у документ умеће URL адресу придружену том
имену.  Али мада уписује URL адресу, ова команда не креира било какав
линк.

\startSmallPrint

Формат у којем се командом \tex{url} приказују URL адресе није онај који
се поставља на општи начин помоћу команде \tex{setupinteraction}, већ
помоћу посебне команде која постоји за ову команду. То је команда
\PlaceMacro{setupurl}\tex{setupurl} која нам омогућава да поставимо стил
(опцијом {\tt style}) и боју (опцијом {\tt colour}).

\stopSmallPrint

\stopitemize

\stopdescription

\startdescription{\tex{hyphenatedurl}}\PlaceMacro{hyphenatedurl}

Ова команда је намењена за URL адресе које ће се писати у тексту нашег
документа, и ако је потребно, \ConTeXt\ мора да унутар URL адресе уметне
преломе линије како би исправно сложио пасус. Њен формат је:

\type{\hyphenatedurl{URLадреса}}

Упркос имену команде \PlaceMacro{hyphenatedurl}\tex{hyphenatedurl},
она не врши хифенацију имена URL адресе. Она сматра да су одређени чести
карактери у URL адресама добре тачке за уметање прелома линије пре или
иза њих. Карактере које желимо можемо да додамо на листу карактера код
којих се дозвољава прелом линије. За то имамо три команде на
располагању:

\starttyping
\sethyphenatedurlnormal{Карактери}
\sethyphenatedurlbefore{Карактери}
\sethyphenatedurlafter{Карактери}
\stoptyping\PlaceMacro{sethyphenatedurlnormal}\PlaceMacro{sethyphenatedurlbefore}\PlaceMacro{sethyphenatedurlafter}

Ове команде редом додају карактере који им се проследе као аргументи на
листу карактера који подржавају прелом линије испред и иза, листу
карактера који подржавају само прелом линије и оних који дозвољавају
прелом линије уназад.

\tex{hyphenatedurl} може да се користи кадгод мора да се упише URL
адреса која ће се појавити у финалном документу онаква каква је. Чак
може да се користи и као последњи аргумент команде
\tex{useURL} у верзији те команде где последњи аргумент доставља текст
на који може да се кликне и који се приказује у финалном документу. На
пример:

\starttyping
\useURL [WhatIsCTX]
  [http://www.pragma-ade.com/general/manuals/what-is-context.pdf]
  []
  [\hyphenatedurl{http://www.pragma-ade.com/general/manuals/what-is-context.pdf}]
\stoptyping

У аргументу команде \tex{hyphenatedurl} могу да се користе сви
резервисани карактери осим три који морају да се замене командама:

\startitemize[packed]

\item \%{} мора да се замени са
\PlaceMacro{letterpercent}\tex{letterpercent}

\item \#{} мора да се замени са \PlaceMacro{letterhash}\tex{letterhash}

\item \backslash{} мора да се замени са
\PlaceMacro{letterescape}\tex{letterescape} или
\PlaceMacro{letterbackslash}\tex{letterbackslash}.

\stopitemize

Сваки пут када \tex{hyphenatedurl} уметне прелом линије, она извршава
команду \PlaceMacro{hyphenatedurlseparator}\tex{hyphenatedurlseparator}
која подразумевано не ради ништа. Али ако је редефинишемо, у URL се
умеће репрезентативни карактер на сличан начин на који се то дешава са
обичним речима у којима се умеће цртица која означава да се реч наставља
у наредној линији. На пример:

\type{\def\hyphenatedurlseparator{\curvearrowright}}

\def\hyphenatedurlseparator{\curvearrowright}

ће дакле приказати следећу прилично дугачку веб адресу на следећи
начин:

\startnarrower\switchtobodyfont[11pt]

\color[blue]{\hyphenatedurl{https://support.microsoft.com/?scid=http://support.microsoft.com:80/support/kb/articles/Q208/4/27.ASP&NoWebContent=1}.}

\stopnarrower

\stopdescription

\stopsubsection

\startsubsection
[
reference=sec:createlinks,
title=Команде које успостављају линк,
]

Да би помоћу \tex{useURL} успоставили линкове на предефинисане URL
адресе можемо да употребимо команду \PlaceMacro{from}\tex{from}, која је
ограничена на успостављање линка, али не уписује никакав текст на који
може да се кликне. Подразумевани текст у \tex{useURL} ће се употребити
као текст линка. Њена синтакса је:

\type{\from[Име]}

где је {\em Име} име које раније придружено URL адреси командом
\tex{useURL}.

Да бисмо креирали линкове и придружили их тексту на који може да се
клике, а који није раније дефинисан, на располагању имамо команду
\PlaceMacro{goto}\tex{goto} која се користи за генерисање и интерних и
спољашњих линкова. Њена синтакса је:

\type{\goto{Текст на који може да се кликне}[Циљ]}

где је {\em Текст на који може да се кликне} текст који ће се приказати
у финалном документу и на који када се кликне мишем, изврши се скок, а 
{\em Циљ} може да буде:

\startitemize

\item Лабела из нашег документа. У овом случају \tex{goto} ће да
генерише скок на сличан начин као, на пример, команде \tex{in} или
\tex{at} које смо већ истражили. Али за разлику од тих команди, не
преузима се никаква информација придружена лабели.

\item Сама URL адреса. У овом случају се мора експлицитно навести да је
то URL адреса, тако што се команда пише на следећи начин:

\type{\goto{Текст на који може да се кликне}[url(URL)]}

где URL може бити редом, име претходно придружено URL адреси командом
\tex{useURL}, или сама URL адреса, у ком случају када се пише URL,
морамо обезбедити да се \ConTeXt\ резервисани карактери пишу онако како
то захтева \ConTeXt. Писање URL адресе сагласно са \ConTeXt\ правилима
неће утицати на функционалност линка.

\stopitemize

\stopsubsection

\stopsection

\startsection
[title=Креирање маркера у финалном PDF фајлу]

PDF фајлови могу да имају интерну листу маркера свог садржаја која
омогућава да читалац види садржај документа у посебном прозору програма
за преглед PDF фајлова, и да се креће кроз њега простим кликтањем на
сваки од одељака и пододељака.

\ConTeXt\ подразумевано у излазном PDF фајлу не креира у маркер листу
садржаја, мада то може да се добије једноставним уметањем команде
\PlaceMacro{placebookmarks}\tex{placebookmarks}, чија је синтакса:

\type{\placebookmarks[Листа одељака]}

где је {\em Листа одељака} листа нивоа одељака раздвојена запетама који
би требало да се појаве у листи садржаја.

Имајте на уму следећа запажања везана за ову команду:

\startitemize

\item Према мојим тестовима \tex{placebookmarks} не функционише ако се
налази у преамбули документа. Али унутар тела документа
(између \tex{starttext} и \tex{stoptext}, или између
\tex{startproduct} и \tex{stopproduct}), није битно на које место је
поставите: листа маркера ће укључити и одељке или пододељке који се
налазе испред команде. Међутим, верујем да је за исправно разумевање
изворног фајла, најпаметније да се команда постави на почетак.

\item Типови одељака које дефинише корисник (командом \tex{definehead})
се не налазе увек на исправном месту у листи маркера. Пожељно је да се
не укључе у листу.

\item Ако наслов било ког одељка у себи садржи белешку на крају или
фусноту, текст фусноте ће се сматрати као део маркера.

\item Уместо листе одељака, као аргумент можемо једноставно да наведемо
симбол \MyKey{all} који, као што му име наговештава, укључује све
одељке; међутим, према мојим тестовима, ова реч уз оно што су без сумње
одељци, укључује и текстове који се ту постављају неким командама које
не служе за поделу, тако да је добијена листа донекле непредвидљива.

\stopitemize

Не омогућавају нам сви програми за преглед PDF фајлова да видимо
маркере; а и многи који то омогућавају, немају ту могућност
подразумевано активирану. Зато, да бисмо проверили резултат ових
функција, морамо бити сигурни да наш PDF читач ту функцију подржава и да
је укључена. Чини ми се да Acrobat, на пример, подразумевано не
приказује маркере, мада постоји тастер на алатној линији којим можемо да
их прикажемо.

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=72 : %%%
