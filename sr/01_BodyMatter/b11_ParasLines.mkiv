%%% Фајл:     b11_ParasLines.mkiv
%%% Аутор:    Joaquín Ataz-López
%%% Започето: Август 2020
%%% Завршено: Август 2020
%%% Садржај:  Ово поглавље је повезаније од претходног. Доста тога из књиге
%%%	      „TeXBook” је посвећено објашњавању вертикалног размака, а у
%%%	      књизи ConTeXt an Excursion говори о вертикалном размаку.
%%%
%%% Уређивано са: Emacs + AuTeX - и повремено са vim + context-plugin
%%%

% \environment ../introCTX_env.mkiv

\startcomponent b11_ParasLines.mkiv

\startchapter
  [title={Пасуси, линије и вертикални размак}]

\TocChap

Као што смо видели у \in{поглављу}[cap:pages], општи изглед документа
углавном одређују величина страница и распоред елемената на њима, фонт који
смо изабрали, о чему се говори у \in{поглављу}[sec:fontscol], као и остале
ствари као што су проред, поравнање пасуса и размак између њих, итд.  Ово
поглавље се бави тим осталим стварима.

\startsection
  [title={Пасуси и њихове карактеристике}]

Пасус је основна јединица текста за \ConTeXt. Постоје два начина за
отварање пасуса:

\startitemize[n]

  \item Уметање једне или више узастопних празних линија у изворни фајл.

  \item Команде \PlaceMacro{par}\tex{par} или \PlaceMacro{endgraf}\tex{endgraf}.

\stopitemize

Обично се користи први начин јер је једноставнији и јер се тако добијају
фајлови који се лакше читају и разумевају. Експлицитно уметање прелома
пасуса командом се обично ради у макроима (погледајте
\in{одељак}[sec:define]) или у ћелијама табела (погледајте
\in{одељак}[sec:tables]).

У документу који је са типографске тачке гледишта добро сложен, важно је да
се пасуси визуелно истичу. То се обично постиже на један од два начина:
малим увлачењем прве линије сваког пасуса, или уметањем размака између
пасуса, а понекад и комбинацијом оба ова начина, мада се то на неким
местима не препоручује јер се сматра удвајањем типографских елемената.

\startSmallPrint

  Не слажем се у потпуности. Просто увлачење прве линије прве линије не
  пружа увек довољно визуелно истицање пасуса; али повећање размака које не
  прати и увлачење прави проблеме у случају када пасус почиње на врху
  странице, па нисмо сигурни да ли је у питању почетак новог пасуса, или
  наставак пасуса са претходне странице. Комбинација оба поступка отклања
  сваку сумњу.

\stopSmallPrint

Хајде да најпре видимо како се у систему \ConTeXt\ постиже увлачење линија
и пасуса.

\startsubsection
  [
    reference=sec:indentation,
    title={Аутоматско увлачење прве линије пасуса},
  ]

Аутоматско уметање малог увлачења пре линије пасуса је подразумевано
искључено. Командом \PlaceMacro{setupindenting}\cmd{set\-up\-in\-den\-ting}
можемо да га укључимо, поново искључимо ако је укључено, као и да назначимо
величину увлачења. Ова команда прихвата следеће вредности:

\startitemize[packed]

  \item {\tt\bf always}: сви пасуси се увлаче, увек.

  \item {\tt\bf yes}: укључује {\em нормално} увлачење пасуса.  Одређени
  пасуси испред којих се налази додатни вертикални размак, као што су први
  пасуси одељака, или пасуси који долазе иза одређених окружења се неће
  увлачити.

  \item {\tt\bf no, not, never, none}: искључује аутоматско увлачење прве
  линије пасуса.

\stopitemize

У случајевима када смо укључили аутоматско увлачење, истом командом можемо
да наведемо и колико то увлачење треба да буде. То можемо да наведемо
експлицитном мером (као што је 1.5~cm) или симболичким речима \MyKey{small},
\MyKey{medium} и \MyKey{big} које означавају да желимо мало, средње или
велико увлачење.

\startSmallPrint

  У неким типографским традицијама (међу њима и шпанској), подразумевано
  увлачење је било два квада. У типографији, квад (оригинално {\em
  квадрат}) је био метални раздвајач који се користио у словослагању на
  штампарским пресама. Израз је касније усвојен као опште име за две
  уобичајене величине размака у типографији, без обзира на технику која се
  користи за штампу.  Ем квад је размак ширине једног ема; широк као и
  висина датог фонта (Википедија). Тако да би за слово величине 12 тачака,
  квад био ширине 12 тачака и 12 тачака висине. \ConTeXt\ поседује две квад
  команде: \tex{quad} која генерише размак наведен малочас, и \tex{qquad}
  која генерише дупло већи размак, али према величини фонта који се
  тренутно користи.  Увлачење од два квада за слово величине 11 тачака ће
  бити 22 тачке, а са словом величине 12 тачака, 24 тачке.

\stopSmallPrint

Када се укључи увлачење, а не желимо да се одређени пасус увуче, треба да
употребимо команду \PlaceMacro{noindentation}\tex{noindentation}.

\startSmallPrint

  У општем случају, ја у својим документима укључујем аутоматско увлачење
  са \cmd{set\-up\-in\-den\-ting[yes, big]}. Међутим, у овом документу то
  нисам тако урадио, јер да јесам, велики број кратких реченица и примера
  би изгледао неуредно на страницама.

\stopSmallPrint

\stopsubsection

\startsubsection
   [title=Специјално увлачење пасуса]

Један од графичких поступака за истицање пасуса је да се увуче било десна,
било лева (или обе) страна пасуса. Ово се користи, на пример, за блок
цитат.

\ConTeXt\ поседује окружење која нам омогућава да променимо увлачење пасуса
тако да истакнемо текст који се налази у њему. То је \MyKey{narrower}
окружење:

\PlaceMacro{startnarrower}\type{\startnarrower [Опције] ... \stopnarrower}

где {\em Опције} може да буде:

\startitemize

  \item {\tt\bf left}: увлачење леве маргине.

  \item {\tt\bf Бр*left}: увлачење леве маргине, уз множење {\em нормалног}
  увлачења са {\em Бр} (на пример {\tt 2*left}).

  \item {\tt\bf right}: увлачење десне маргине.

  \item {\tt\bf Бр*right}: увлачење десне маргине, уз множење {\em
  нормалног} увлачења са {\em Бр} (на пример {\tt 2*right}).

  \item {\tt\bf middle}: увлачење обе маргине. Ово је подразумевано.

  \item {\tt\bf Br*middle}: увлачење обе маргине, уз множење {\em
  нормалног} са {\em Бр}.

\stopitemize

У објашњењу опција које сам поменуо, {\em нормално увлачење} се односи на
количину левог и десног увлачења које подразумевано умеће \MyKey{narrower}.
Ова {\em количина} може да се подеси командом
\PlaceMacro{setupnarrower}\tex{setupnarrower} која прихвата следеће
конфигурационе опције:

\startitemize[packed]

  \item {\tt\bf left}: количина увлачења која треба да се примени на леву
  маргину.

  \item {\tt\bf right}: количина увлачења која треба да се примени на десну
  маргину.

  \item {\tt\bf middle}: количина увлачења која треба да се примени на обе
  маргине.

  \item {\tt\bf before}: команда која треба да се изврши пре уласка у
  окружење.

  \item {\tt\bf after}: команда која треба да се изврши након изласка из
  окружења.

\stopitemize

Ако желимо да користимо другачију конфигурацију narrower окружења, свакој
од њих можемо да доделимо различито име са
\PlaceMacro{definenarrower}\type{\definenarrower [Име] [Конфигурација]}

где је {\em Име} име које се повезује са овом конфигурацијом, а {\em
Конфигурација} прихвата исте вредности као и \tex{setupnarrower}.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:verticalspace,
    title={Вертикални размак између пасуса},
  ]

\startsubsection
  [title=\tex{setupwhitespace}]

Као што већ знамо из \in{одељка}[sec:linebreaks], за \ConTeXt\ није битно
колико у изворном фајлу има узастопних празних линија: једна или више њих
ће у финални документ да уметне прелом пасуса. Уметањем додатне празне
линије у изворни фајл нећемо моћи да повећамо размак између пасуса. Уместо
тога, размак између пасуса се контролише командом
\PlaceMacro{setupwhitespace}\tex{setupwhitespace} која прихвата следеће
вредности:

\startitemize

  \item {\tt\bf none}: значи да се између пасуса неће правити додатни
  размак.

  \item {\tt\bf small, medium, big}: умећу редом мали, средњи или велики
  вертикални размак. Конкретна величина размака који се умеће овим
  вредностима зависи од величине фонта.

  \item {\tt\bf line, halfline, quarterline}: мере додатни размак у односу
  на висину линија и редом умећу додатну линију, пола линије или четвртину
  линије.

  \item {\tt\bf ДИМЕНЗИЈА}: поставља конкретну меру размака између пасуса.
  На пример, \tex{setupwhitespace[5pt]}.

\stopitemize

У општем случају се не саветује употреба конкретне мере за
\tex{setupwhitespace}. Боље је да се користе симболичке вредности small,
medium, big, line, halfline или quarterline. За то постоје два разлога:

\startitemize

  \item Симболичке вредности су еластичне мере (погледајте
  \in{одељак}[sec:dimensions]) што значи да поседују {\em нормалну}
  вредност, али се дозвољава и одређено смањење или увећање те вредности,
  чиме се систему \ConTeXt\ помаже при словослагању страница омогућавањем
  да преломи пасуса буду естетски слични. Фиксна вредност раздвајања пасуса
  отежава постизање добре пагинације документа.

  \item Симболичке вредности small, medium, big, итд. се израчунавају на
  основу величине фонта, тако да ако се у неким деловима документа она
  промени, промениће се и величина вертикалног размака између пасуса, па ће
  крајњи резултат увек бити уравнотежен. За разлику од тога, промене
  величине фонта неће утицати на фиксну вредност вертикалног размака, што
  ће за последицу да има документ са лоше распоређеним празним простором (у
  естетском смислу) и који није у складу са типографским правилима.

\stopitemize

Када се за вертикални размак постави вредност, доступне су још две додатне
команде: \PlaceMacro{nowhitespace}\tex{nowhitespace}, која елиминише било
какав додатни размак између одређених пасуса и
\PlaceMacro{whitespace}\tex{whitespace} која ради супротно. Међутим, ове
команде су ретко потребне, јер је чињеница да \ConTeXt\ и сам веома успешно
управља вертикалним размаком између пасуса; посебно ако је као вредност
унета нека од предефинисаних димензија, која се израчунава из тренутних
вредности величине фонта и прореда.

\startSmallPrint

  Значење \tex{nowhitespace} је очигледно. Али не обавезно и саме команде
  \tex{whitespace}, јер шта је сврха наређивања вертикалног размака између
  одређених пасуса ако је већ успостављен \Conjecture генерално за све
  пасусе? Па, када се пишу напредни макрои, команда \tex{whitespace} може
  бити корисна унутар петље која мора донети одлуку према вредности
  одређеног услова. То је мање више напредно програмирање, и ја овде нећу
  детаљније улазити у то.

\stopSmallPrint

\stopsubsection

\startsubsection
  [title={Пасуси без додатног међусобног размака}]

Ако желимо да одређени делови нашег документа имају пасусе који нису
раздвојени додатним размаком, можемо да изменимо општу конфигурацију
команде \tex{setupwhitespace}, али то је, на неки начин, у супротности са
\ConTeXt\ филозофијом која каже да би опште конфигурационе команде требало
да се постављају искључиво у преамбулу изворног фајла, тако да се постигне
конзистентан изглед докумената који лако може да се промени. Зато постоји
\MyKey{packed} окружење, чија је општа синтакса

\PlaceMacro{startpacked}\type{\startpacked [Размак] ... \stoppacked}

и где је {\em Размак} необавезни аргумент који наводи количину жељеног
вертикалног размака између пасуса у окружењу. Ако се не наведе, неће се
примењивати било какав додатни вертикални размак.

\stopsubsection

\startsubsection
  [title={Уметање додатног вертикалног размака на одређено место у
  документу}]

Ако на одређеном месту у документу није довољан нормални вертикални размак
између пасуса, можемо да употребимо команду \PlaceMacro{blank}\tex{blank}.
Када се користи без аргумената, \tex{blank} ће да уметне количину
вертикалног размака подешену са \tex{setupwhitespace}. Можемо да наведемо
или конкретну вредност унутар великих заграда, или неку од симболичких
вредности које се израчунавају из величине фонта: small, medium или big.
Те вредности можемо и да помножимо неким целим бројем, па ће тако на
пример, \tex{blank[3*medium]} да уметне размак који је еквивалентан висини
три средња прелома линије. Две величине можемо да поставимо и заједно.  На
пример, \tex{blank[2*big, medium]} ће уметнути два велика и један средњи
размак.

Пошто је команда \tex{blank} дизајнирана за повећање вертикалног размака
између пасуса, она нема никакав ефекат ако се између два пасуса чији размак
желите да повећате уметне прелом странице; а ако уметнемо две узастопне
\tex{blank} команде, примениће се само једна од њих (она која умеће највећи
размак). \tex{blank} команда која се постави иза прелома линије такође нема
ефекта. Међутим, у овим случајевима можемо да форсирамо уметање вертикалног
простора употребом симболичке речи \MyKey{force} у опцији команде. Тако на
пример, ако желимо да се наслови поглавља у нашем документу појаве ниже на
страници, тако да је укупна висина те странице мања од осталих страница
(што је релативно честа типографска пракса), онда овако морамо да напишемо
конфигурацију \tex{chapter} команде:

\starttyping
\setuphead
  [chapter]
  [
    page=yes,
    before={\blank[4cm, force]},
    after={\blank[3*medium]}
  ]
\stoptyping

Овај низ команди ће обезбедити да поглавља увек почињу на новој страници и
да се лабела поглавља помери четири центиметара наниже. Ово не би радило
без опције \MyKey{force}.

\stopsubsection

\startsubsection
  [title=\tex{setupblank} и \tex{defineblank}]
\PlaceMacro{setupblank}\PlaceMacro{defineblank}

Раније сам поменуо да када се \tex{blank} употреби без аргумената,
еквивалентна је са \tex{blank[big]}. Међутим, ово можемо променити помоћу
\tex{setupblank}, тако што је подесимо \tex{setupblank[0.5cm]} на пример,
или \tex{setupblank[medium]}. Када се користи без аргумената,
\tex{setupblank} ће подесити вредност на величину текућег фонта.

Као и са \tex{setupwhitespace}, празан простор који се умеће са \tex{blank}
је, онда када је њена вредност једна од предефинисаних симболичних
вредности, еластична димензија која може да се адаптира у одређеној мери.
То можемо да изменимо помоћу \MyKey{fixed}, уз могућност да касније вратимо
подразумевану вредност са \MyKey{flexible}. Тако на пример, за текст који
се слаже у две колоне, препоручује се да се постави \tex{setupblank[fixed,
line]}, а када се враћа назад на једну колону, \tex{setupblank[flexible,
default]}.

Одређену конфигурацију можемо да придружимо имену командом
\tex{defineblank}. Општи формат ове команде је:

\type{\defineblank [Име] [Конфигурација]}

Када дефинишемо своју конфигурацију размака, можемо да је користимо помоћу
\tex{blank[ИмеКонфигурације]}.

\stopsubsection

\startsubsection
  [
	title={Остале процедуре за добијање више вертикалног размака},
  ]

\TeX\ команда која умеће додатни вертикални простор је
\PlaceMacro{vskip}\tex{vskip}. Ова команда, као и скоро све \TeX\ команде,
такође функционише у систему \ConTeXt\, али се саветује да се уопште не
употребљава јер омета интерно функционисање неких \ConTeXt\ макроа. Уместо
ње се саветује употреба команде \PlaceMacro{godown}\tex{godown} чија је
синтакса:

\type{\godown[Мера]}

где {\em Мера} мора да буде цео број након којег следи јединица мере.  На
пример, \tex{godown[5cm]} ће померити 5 центиметара наниже у страници; мада
ако се у оквиру ових 5 центиметара наиђе на прелом странице, команда
\tex{godown} ће померити само до наредне странице. Слично, \tex{godown}
нема ефекта на почетку странице, мада можемо да је {\em преваримо} тако што
напишемо, на пример, \quotation{\cmd{\,\textvisiblespace\,\backslash
godown[3cm]}}\footnote{Присетите се да у овом документу карактер
\quote{\ss\,\textvisiblespace\,} користимо за представљање размака онда када
је важно да га уочимо.} што ће прво да уметне размак чиме више нисмо на
почетку странице, па ће онда отићи три центиметара наниже.

\startSmallPrint

  Као што знамо, \tex{blank} такође прихвата конкретну меру као аргумент.
  Дакле, из угла корисника, \tex{blank[3cm]} или \tex{godown[3cm]} су
  практично исто. Међутим, између њих постоје суптилне разлике.  Тако на
  пример, две узастопне \tex{blank} команде се не акумулирају, па када се
  ово догоди, примењује се само она која задаје већи размак. С друге
  стране, две или више \tex{godown} команде се савршено добро надовезују.

\stopSmallPrint

Још једна прилично корисна \TeX\ команда чија употреба не прави проблем
систему \ConTeXt, је \PlaceMacro{vfill}\tex{vfill}. Ова команда умеће
флексибилни вертикални размак које се протеже све до краја странице. То је
као да команда {\em гура} наниже све што је написано иза ње. Тако се могу
постићи занимљиви ефекти, као на пример, постављање пасуса на дно странице
простим навођењем команде \tex{vfill} испред њега. Мада ефекат команде
\tex{vfill} тешко може да се примети ако се она не комбинује са форсираним
преломима странице, јер нема пуно смисла гурати пасус или линију текста
наниже кроз пасус пошто када расте, он расте навише.

На пример, ако желимо да обезбедимо да се линија постави на дно странице,
треба да напишемо:

\starttyping
\vfill
Линија на дну странице
\page[yes]
\stoptyping

Као и све остале команде које умећу вертикални размак, команда \tex{vfill}
нема ефекта на почетку странице. Али можемо да је {\em преваримо} тако што
испред ње напишемо форсирани размак. На пример:

\starttyping
\page[yes]
\ \vfill
Центрирана линија
\vfill
\page[yes]
\stoptyping

ће фразу \quotation{Центрирана линија} поставити вертикално центрирану на
страници.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:lines,
    title={Како \ConTeXt\ изграђује линије које\\формирају пасусе},
    bookmark={Како \ConTeXt\ изграђује линије које формирају пасусе},
  ]

Један од главних задатака словослагачког система је да прихвати дугачки низ
речи и да га подели на појединачне линије погодне величине. На пример,
сваки пасус у овом тексту је подељен на линије ширине 15 центиметара, али
аутор није морао да се бави таквим детаљима, јер \ConTeXt\ сам бира тачке
прелома након што сваки пасус сагледа у целини, тако да завршне речи пасуса
заиста могу да утичу на поделу прве линије. Резултат тога је да су размаци
између речи у целом пасусу уједначени у највећој могућој мери.

\startSmallPrint

  Ово је један од аспеката који најбоље приказује разлику у начину на који
  функционишу текст процесори као и бољи квалитет који се добија системима
  као што је \ConTeXt. Пошто текст процесор, када наиђе на крај линије и
  прескочи на наредну, подешава размак између речи у линији која је управо
  попуњена тако да обезбеди исправно поравнање. Он то ради за сваку линију
  посебно, па на крају свака линија у пасусу има различити размак између
  речи. Ово може да буде разлог појаве врло лошег ефекта (нпр.
  \quote{реке} празног простора које теку кроз текст). С друге стране,
  \ConTeXt\ пасус обрађује у целости, и за сваку линију израчунава број
  прихватљивих тачака прелома реда и величину размака између речи која би
  настала након прелома на одређеној тачки. Пошто прелом на некој линији
  утиче на потенцијалне тачке прелома у наредним линијама, укупан број
  могућности може да буде прилично велики; али то не представља проблем за
  \ConTeXt. Он ће коначну одлуку да донесе на основу комплетног пасуса,
  обезбеђујући да је размак између речи на свакој линији {\em што је више
  могуће сличан}, а резултат тога је да су пасуси много боље сложени;
  визуелно гушћи.

\stopSmallPrint

Да би ово постигао, \ConTeXt\ тестира разне алтернативе и свакој од њих на
основу њених параметара придружује {\em badness} (исквареност) вредност.
Начин одређивања ове вредности је одређен након детаљне студије уметности
типографије. Коначно, када испита све могућности, \ConTeXt\ бира најмање
лошу опцију (ону која има најнижу вредност искварености). У општем случају,
ово функционише прилично добро, али ће несумњиво постојати случајеви у
којима изабране тачке прелома нису најбоље, или нама не изгледају најбоље.
Зато ћемо понекада пожелети да програму кажемо како нека места нису пожељна
за прелом реда. А у другим ситуацијама ћемо пожелети да на одређеном месту
форсирамо прелом.

\startsubsection
  [
    reference=sec:lettertilde,
    title={Употреба резервисаног карактера \quote{{\tt\lettertilde}}},
  ]

Очигледно су главни кандидати за тачке прелома размаци између речи. Ако
желимо да назначимо да одређени размак никада не сме да се замени преломом
линије, као што већ знамо, употребићемо резервисани карактер
\quote{\lettertilde}, који \TeX\ назива {\em веза}, а који везује две речи
заједно.

Употреба овог непрекидајућег размака се углавном препоручује у следећим
случајевима:

\startitemize[packed]

  \item Између делова који чине скраћеницу. На пример {\tt U\lettertilde
  S}.

  \item Између скраћеница и појма на који се односе. На пример, {\tt
  Др\lettertilde Ана Петровић} или {\tt стр.\lettertilde 45}.

  \item Између бројева и појма који иде уз њих. На пример, {\tt
  Елизабета\lettertilde II}, {\tt 45\lettertilde томова}.

  \item Између цифара и симбола који се налазе испред или иза њих, ако нису
  у експоненту. На пример, {\tt 73\lettertilde км}, {\tt \$\lettertilde
  53}; али ипак, {\tt 35'}.

  \item У процентима који су изражени речима. На пример, {\tt
  двадесет\lettertilde процената}.

  \item У групама бројева раздвојених размацима. На пример, {\tt
  5\lettertilde 357\lettertilde 891}. Мада се у оваквим случајевима
  препоручује употреба онога што се назива {\em танки размак}, који се у
  систему \ConTeXt\ добија командом \tex{,}, тако да се напише {\tt
  5\backslash,357\backslash,891}.

  \item Да се спречи да скраћеница буде сама у линији. На пример:

  \starttyping
    Постоје сектори као што су забава, комуникациони медији,
    трговина,~итд.
  \stoptyping

\stopitemize

Овим случајевима, {\sc Кнут} (отац система \TeX) додаје и следеће
препоруке:

\startitemize[packed]

  \item Након скраћенице која није на крају реченице.

  \item У референцама на делове документа, као што су поглавља, додаци,
  слике, итд. На пример, {\tt Поглавље\lettertilde 12}.

  \item Између имена и првог слова средњег имена особе, или између првог
  слова имена и презимена. На пример, {\tt Доналд\lettertilde E.  Кнут},
  {\tt A.\lettertilde Ајнштајн}.

  \item Између математичких симбола која стоје уз имена. На пример, {\tt
  димензија\lettertilde \$d\$}, {\tt ширина\lettertilde \$w\$}.

  \item Између симбола у редовима. На пример {\tt \{1,\lettertilde 2,
  \backslash dots,\lettertilde \$n\$\}}.

  \item Када је број стриктно везан са предлогом. На пример, {\tt од 0
  до\lettertilde 1}.

  \item Када се математички симболи изражавају речима. На пример, {\tt
  једнако\lettertilde је\lettertilde \$n\$}.

  \item У листама унутар пасуса. На пример: {\tt (1)\lettertilde зелено,
  (2)\lettertilde црвено, (3)\lettertilde плаво}.

\stopitemize

Мноштво случајева? Несумњиво, цена типографске перфекције захтева додатни
труд. Јасно је да ако не желимо, не морамо да применимо ова правила, али не
смета да их познајемо. Осим тога – овде говорим из личног искуства –
једном када се навикнемо да их примењујемо (било које од њих), почињемо
аутоматски то да радимо. Исто као када на речи постављамо акценте док их
пишемо (у шпанском то морамо): за оне од нас који то раде, а постало је
аутоматизам, није потребно више времена да се напише реч са акцентом од
речи без акцента.

\stopsubsection

\startsubsection
  [title=Растављање речи на крају реда]

Осим за језике који се углавном састоје од речи из једног слога, веома је
тешко да се добије оптимални резултат када су потенцијалне тачке прелома
реда само између речи. Због тога \ConTeXt\ такође анализира могућност
уметања прелома реда између два слога у речи (у српском је то мало
слободније); а да би се то урадило, неопходно је да се зна језик на којем
је текст написан, јер се правила растављања речи на крају реда разликују у
сваком језику. Због тога је важно да се у преамбули документа наведе
команда \tex{mainlanguage}.

Може се догодити да \ConTeXt\ неку реч не успе да растави. Понекада узрок
могу бити сама његова правила за поделу речи (на пример, \ConTeXt\ никада
не дели реч на два дела ако делови немају минимални број слова); или јер је
реч двосмислена. На крају крајева, шта \ConTeXt\ може да уради са речима
као што је \quotation{unionised}? Реч би могла да се појави у фрази као што
је \quotation{the unionised workforce} (синдикализована радна снага), али
би могла да се појави и у хемијском тексту као \quotation{an unionised
particle} (тј. нејонизована честица). А шта ако \ConTeXt\ мора да се носи
са речи \quotation{manslaughter} (убиство) као последњој речи на страници,
пре прелома странице. Могао би да преломи реч као man-slaughter (исправно)
али би могао такође да је преломи и као mans-laughter (двозначно).

Штагод да је разлог, ако нисмо задовољни начином на који је реч подељена,
или ако је неисправно подељена, то можемо да променимо тако што контролним
симболом \tex{-} експлицитно назначимо потенцијалне тачке прелома на којима
реч може да се преломи. Тако на пример, ако нам реч \quotation{unionised}
зада било какве проблеме, могли би да је у изворном фајлу напишемо као
\MyKey{union\backslash-ised}; или ако имамо проблем са
\quotation{manslaughter}, могли би да је напишемо као
\MyKey{man\backslash-slaughter}.

Ако се проблематична реч користи неколико пута у документу, онда би требало
да у преамбули назначимо како се раставља командом
\PlaceMacro{hyphenation}\tex{hyphenation}: ова команда, која је предвиђена
да се наведе у преамбули изворног фајла, као аргумент узима једну или више
речи раздвојених запетама, које цртицом наводе тачке на којима се могу
поделити. На пример:

\type{\hyphenation{union-ised, man-slaughter}}

Ако реч која се проследи овој команди не садржи цртицу, она се никада неће
растављати на крају реда. Исти ефекат се постиже употребом команде
\PlaceMacro{hbox}\tex{hbox} која креира недељиву хоризонталну кутију око
речи, или \PlaceMacro{unhyphenated}\tex{unhyphenated} која спречава да се
реч или речи које јој се проследе као аргумент деле на крају реда. Али док
\tex{hyphenation} функционише глобално, \tex{hbox} и \tex{unhyphenated}
функционишу локално, што значи да команда \tex{hyphenation} утиче на сва
појављивања речи задате као аргумент у целом документу; док \tex{hbox} или
\tex{unhyphenated} функционишу само на месту у изворном фајлу на којем се
наиђе на њих.

\startSmallPrint

  Интерно, начин на који \TeX\ контролише поделу речи на крају реда је
  помоћу променљивих \PlaceMacro{pretolerance}\tex{pretolerance} и
  \PlaceMacro{tolerance}\tex{tolerance}. Прва од ових променљивих
  контролише прихватљивост поделе која се врши само на размаку.
  Подразумевано је 100, али ако је променимо, на пример, на 10\,000, онда
  ће \ConTeXt\ увек сматрати да је прихватљиво да постоји прелом линије
  који не значи поделу речи на слогове, што {\em de facto} значи да
  искључујемо поделу речи према слоговима. А ако вредност
  \tex{pretolerance} поставимо на -1, на пример, натерали бисмо \ConTeXt\
  да на крају реда увек дели речи.

  Произвољну вредност за \tex{pretolerance} увек можемо једноставно да
  поставимо било где у документу. На пример:

  \type{\pretolerance=10000}

  али ову вредност такође можемо да мењамо и помоћу \MyKey{lesshyphenation}
  и \MyKey{morehyphenation} вредности у \tex{setupalign}. У вези овога,
  погледајте \in{одељак}[sec:setupalign].

\stopSmallPrint

\stopsubsection

\startsubsection
  [
    reference=sec:horizontaltolerance,
    title={Ниво толеранције за преломе линија},
  ]

Када тражи могуће тачке прелома линије, \ConTeXt\ је обично врло стриктан,
што значи да ће дозволити да реч пређе иза десне маргине када не може
правилно да је растави, и не жели да умеће прелом линије испред речи ако то
прави сувише велики размак између речи на тој линији. Ово подразумевано
понашање обично даје оптималне резултате и само изузетно неке линије
донекле излазе ван десне маргине. Идеја је да аутор (или словослагач)
прегледа ове ретке случајеве када се документ заврши, па да донесе
одговарајућу одлуку, која би могла да буде \tex{break} команда испред речи
која излази ван маргине, или преформулисање текста на другачији начин, тако
да се позиција те речи помери негде другде.

Међутим, у неким случајевима ниска толеранција система \ConTeXt\ може
представљати проблем. У тим случајевима му можемо рећи да буде толерантнији
са размаком у линијама. За то имамо на располагању команду
\PlaceMacro{setuptolerance}\tex{setuptolerance} која нам омогућава да
променимо ниво толеранције при израчунавању прелома линија коју \ConTeXt\
назива \quotation{хоризонтална толеранција} (јер утиче на хоризонтални
размак) и \quotation{вертикална толеранција} када израчунава преломе
страница. О овоме ћемо говорити у \in{одељку}[sec:VerticalAlignment].

Хоризонтална толеранција (она која утиче на преломе линија) је
подразумевано постављена на вредност \MyKey{verystrict}. Ово подешавање
можемо да изменимо, као алтернативе, било којом од следећих вредности:
\MyKey{strict}, \MyKey{tolerant}, \MyKey{verytolerant} или \MyKey{stretch}.
Тако на пример,

\type{\setuptolerance[horizontal, verytolerant]}

значи да линија скоро никада неће моћи да пређе десну маргину, чак и ако то
значи да се поставља врло велики и једва видљив размак између речи у
линији.

\stopsubsection

\startsubsection
  [title={Форсирање прелома линије на одређеном месту}]

Ако желимо да форсирамо прелом линије на одређеном месту, користимо
\PlaceMacro{break}\tex{break}, \PlaceMacro{crlf}\tex{crlf} или
\PlaceMacro{\backslash}{\tt\backslash\backslash} команде. Прва од њих,
\tex{break}, умеће прелом линије на месту на којем се нађе. Линија на којој
се нађе команда ће највероватније да буде естетски деформисана, са огромним
размаком између речи. Као што можемо видети у наредном примеру у којем
команда \tex{break} у трећој линији (фрагмента извора на левој страни)
креира прилично ружну линију (у форматираном тексту са десне стране).

\startDoubleExample

\starttyping
Видео сам га на углу старог кварта како
се \emph{шепури} онако
како\break то раде жестоки момци када ходају,
увек држећи руке у џеповима својих
капута, тако да нико не може знати који
од њих носи бодеж.
\stoptyping

Видео сам га на углу старог кварта како се \emph{шепури} онако како\break
то раде жестоки момци када ходају, увек држећи руке у џеповима својих
капута, тако да нико не може знати који од њих носи бодеж.

\stopDoubleExample

Да бисмо спречили овај ефекат, можемо употребити \cmd{\backslash} или \tex{crlf}
команде које такође умећу форсирани прелом линије, али оригиналну линију
испуњавају са довољно празног простора, тако да буде лево поравната:

\startDoubleExample

\starttyping
Видео сам га на углу старог кварта како
се \emph{шепури} онако
како\\ то раде жестоки момци када ходају,
увек држећи руке у џеповима својих
капута, тако да нико не може знати који
од њих носи бодеж.
\stoptyping

Видео сам га на углу старог кварта како се \emph{шепури} онако како\\ то
раде жестоки момци када ходају, увек држећи руке у џеповима својих капута,
тако да нико не може знати који од њих носи бодеж.

\stopDoubleExample

Колико ја знам, на {\em нормалним} линијама нема разлике између
\cmd{\backslash} и \tex{crlf}; али у наслову одељка постоји разлика:

\startitemize

  \item {\tt\bf\backslash\backslash} генерише прелом линије у телу
  документа, али не када се наслов одељка преноси у садржај.

  \item {\bf\tex{crlf}} генерише прелом линије који се примењује и на тело
  документа и када се линија преноси у садржај.

\stopitemize

Прелом линије не би требало да се меша са преломом пасуса. Прелом линије
просто завршава текућу линију и почиње наредну, али се остаје у текућем
пасусу, тако да ће размак између оригиналне линије и нове одређивати
нормалан проред који важи у пасусу. Тако да постоје само три сценарија у
којима се може препоручити форсирани прелом линије:

\startitemize

  \item У изузетним случајевима када \ConTeXt\ није могао да пронађе
  погодни прелом линије, тако да линија пробија десну маргину. У овим
  случајевима (који се дешавају врло ретко, углавном када линија има
  недељиве {\em кутије}, или {\em дословни} текст [погледајте
  \in{одељак}[sec:verbatim]]), помаже команда \tex{break} непосредно испред
  речи која залази у десну маргину.

  \item У пасусима који су уствари сачињени од појединачних линија, од
  којих су информације у свакој потпуно независне од оних у претходној, на
  пример, наслов писма у којем прва линија може да садржи име пошиљаоца,
  друга примаоца, а трећа датум; или у тексту који говори о ауторству дела,
  у којем се у једној линији налази име аутора, у другој њихова канцеларија
  или академска титула и можда у трећој датум, итд. У овим случајевима би
  прелом линије требало да се уради командама \cmd{\backslash} или
  \tex{crlf}. Такође је уобичајено да су ове врсте параграфа десно
  поравнате.

  \item Када се пишу песме, или слична врста текстова, за раздвајање
  стихова. Мада је у овом последњем случају боље да се користи {\tt lines}
  окружење које је објашњено у \in{одељку}[sec:startlines].

\stopitemize

\stopsubsection

\stopsection

\startsection
  [title=Проред]

Проред је растојање које раздваја линије пасуса. \ConTeXt\ га аутоматски
израчунава на основу конкретног фонта који се тренутно користи и
првенствено на основу базне величине постављене командом
\tex{setupbodyfont} или \tex{switchtobodyfont}.

На проред можемо да утичемо командом
\PlaceMacro{setupinterlinespace}\tex{setupinterlinespace} која прихвата три
различите синтаксе:

\startitemize

  \item \tex{setupinterlinespace [..Проред..]}, где је {\em Проред}
  прецизна вредност или симболичка реч која додељује предефинисани проред:

  \startitemize

    \item Када је у питању прецизна вредност, то може бити димензија (на
    пример, 15pt), или просто цео или децимални број (на пример, 1.2). У
    овом другом случају број се интерпретира као \quotation{број линија} у
    односу на \ConTeXt\ подразумевани проред.

    \item Када је симболичка реч, може бити \MyKey{small}, \MyKey{medium}
    или \MyKey{big} које постављају мали, средњи, или велики проред,
    увек базиран на подразумеваном прореду који би применио \ConTeXt.

  \stopitemize

  \item \tex{setupinterlinespace [..,..=..,..]}. У овом режиму, проред се
  поставља директном изменом мера помоћу којих \ConTeXt\ израчунава
  одговарајући проред. Већ сам рекао да се проред израчунава на основу
  конкретног фонта и његове величине; али само да би ствари остале просте:
  у суштини, фонт и његова величина постављају одређене мере на основу
  којих се израчунава проред. Онда се \tex{setupinterlinespace} приступом
  те мере мењају, па се мења и проред. Конкретне мере и вредности којима
  може да се манипулише (чије значење нећу да објашњавам, јер је то ван
  опсега простог {\em увода}) су: {\tt line, height, depth, minheight,
  mindepth, distance, top, bottom, stretch} и {\tt shrink}.

  \item \tex{setupinterlinespace [Име]}. Овим режимом успостављамо или
  конфигуришемо одређени прилагођени проред претходно дефинисан са
  \PlaceMacro{defineinterlinespace}\tex{defineinterlinespace}.

\stopitemize

Са

\type{\defineinterlinespace [Име] [Конфигурација]}

одређеном имену можемо да придружимо неку конфигурацију прореда коју затим
можемо просто да укључимо на неком месту у документу командом
\tex{setupinterlinespace[Име]}. Када желимо да се вратимо на нормални
проред, потребно је да напишемо \tex{setupinterlinespace[reset]}.

\stopsection

\startsection
  [title={Остале ствари у вези са линијама}]

\startsubsection
  [
    reference=sec:startlines,
    title={Конвертовање прелома линија у изворном фајлу у преломе линија у
    финалном документу},
  ]

Као што већ знамо (погледајте \in{одељак}[sec:linebreaks]), \ConTeXt\
подразумевано игнорише преломе линија у изворном фајлу и сматра да су то
обични размаци, осим у случају да постоји два или више узастопна прелома
линије, када умеће прелом пасуса. Међутим, постоје ситуације у којима
желимо да се поштују преломи линија у оригиналном изворном фајлу онако како
су уметнути, када на пример, пишемо поезију. \ConTeXt\ за то обезбеђује
\MyKey{lines} окружење чији је формат:

\PlaceMacro{startlines}\type{\startlines [Опције] ... \stoplines}

где између осталог, опције могу бити и било шта од следећег:

\startitemize

  \item {\tt\bf space}: када се ова опција постави на вредност \MyKey{on},
  уз поштовање прелома линија у изворном фајлу, окружење ће такође да
  поштује и размаке, чиме се привремено игнорише правило апсорпције.

  \item {\tt\bf before}: текст или команда која треба да се изврши пре
  уласка у окружење.

  \item {\tt\bf after}: текст или команда која треба да се изврши након
  изласка из окружења.

  \item {\tt\bf inbetween}: текст или команда која треба да се изврши када
  се уђе у окружење.

  \item {\tt\bf indenting}: вредност која назначава да ли се у окружењу
  пасуси увлаче или не (погледајте \in{одељак}[sec:indentation]).

  \item {\tt\bf align}: поравнање линија у окружењу (погледајте
  \in{одељак}[sec:alignment]).

  \item {\tt\bf style}: команда стила која се примењује унутар окружења.

  \item {\tt\bf color}: боја која се примењује унутар окружења.

\stopitemize

Тако на пример,

\startDoubleExample
\starttyping
  \startlines
    Ишли смо у Африку,
    Да садимо паприку.
    Знате ону жуту,
    Фину али љуту.
  \stoplines
\stoptyping


  \startlines
    Ишли смо у Африку,
    Да садимо паприку.
    Знате ону жуту,
    Фину али љуту.
  \stoplines
\stopDoubleExample

Подразумевани начин на који ради окружење такође можемо да променимо
командом \PlaceMacro{setuplines}\tex{setuplines} и, као са толико \ConTeXt\
команди, одређеној конфигурацији овог окружења командом
\PlaceMacro{definelines}\tex{definelines} може да се додели име. Њена
синтакса је:

\type{\definelines [Име] [Конфигурација]}

где као конфигурацију можемо да ставимо исте опције објашњене за ово
окружење. Када дефинишемо прилагођено окружење, овако га умећемо у
документ:

\type{\startlines[Име] ... \stoplines}

\stopsubsection

\startsubsection
  [
    reference=sec:linenumbering,
    title={Нумерисање линија},
  ]

У одређеним врстама текстова је уобичајено да се успостави нека врста
нумерисања линија, на пример, у текстовима о компјутерском програмирању где
је релативно уобичајено да се као примери наводе фрагменти кода чије су
линије нумерисане, или у песмама, критичким издањима, итд. За све ове
ситуације \ConTeXt\ обезбеђује {\tt linenumbering} окружење чији је формат

\PlaceMacro{startlinenumbering}\type{\startlinenumbering [Опције] ...
\stoplinenumbering}

Доступне су следеће опције:

\startitemize

  \item {\tt\bf continue}: у случајевима када има више делова документа у
  којима је потребна нумерација линија, ова опција уређује да нумерација
  поново почиње од почетка за сваки од њих (\MyKey{continue=no},
  подразумевана вредности). С друге стране, ако је потребно да се
  нумерација наредног дела настави тамо где се завршила нумерација
  претходног, треба да поставимо \MyKey{continue=yes}.

  \item {\tt\bf start}: назначава број прве линије у случајевима када не
  желимо да буде \quote{1}, или желимо да одговара претходној нумерацији.

  \item {\tt\bf step}: нумерисаће се све линије које су део окружења, али
  овом опцијом можемо назначити да се број штампа само у одређеним
  интервалима. На пример, за песме је уобичајено да се штампа сваки пети
  број (стихови 5, 10, 15,\,…).

\stopitemize

У општем случају, командом
\PlaceMacro{setuplinenumbering}\tex{setuplinenumbering} све ове опције могу
да се наведу за сва {\em linenumbering} окружења у нашем документу. Ова
команда нам такође омогућава да конфигуришемо и остале аспекте нумерације
линија:

\startitemize

  \item {\tt\bf conversion}: врста нумерације линија. Може бити било која
  од оних које су објашњене на \at{страници}[Num:conversion] у вези
  са нумерацијом поглавља и одељака.

  \item {\tt\bf style}: команда (или команде) које одређују стил који ће се
  користити за исписивање нумерације линија (фонт, величина, варијанта…).

  \item {\tt\bf color}: боја којом ће се исписивати бројеви линија.

  \item {\tt\bf location}: где ће се исписивати бројеви линија. Може бити
  било шта од следећег: text, begin, end, default, left, right, inner,
  outer, inleft, inright, margin, inmargin.

  \item {\tt\bf distance}: растојање између броја линије и саме линије.

  \item {\tt\bf align}: поравнање броја. Може бити: inner, outer,
  flushleft, flushright, left, right, middle или auto.

  \item {\tt\bf command}: команда којој ће се број линије проследити као
  параметар пре исписивања.

  \item {\tt\bf width}: ширина простора који се резервише за испис броја
  линије.

  \item {\tt\bf left, right, margin}:

\stopitemize

Такође можемо да креирамо различите прилагођене нумерације линија командом
\PlaceMacro{definelinenumbering}\tex{definelinenumbering} којом се
конфигурацији придружује име:

\type{\definelinenumbering [Име] [Конфигурација]}

Када се одређена конфигурација дефинише и придружи имену, можемо је
употребљавати помоћу

\type{\startlinenumbering [Име] ... \stoplinenumbering}

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:alignment,
    title={Хоризонтално и вертикално поравнање},
  ]

Команда која у општем случају контролише поравнање је
\PlaceMacro{setupalign}\cmd{set\-up\-align}. Она се користи и за
хоризонтално и за вертикално поравнање.

\startsubsection
  [
    reference=sec:setupalign,
    title={Хоризонтално поравнање},
  ]

Када {\em природна} ширина линије текста не заузима сав доступан простор,
јавља се питање шта урадити са тим преосталим празним
простором.\footnote{Под изразом {\em природна} мислим на ширину линије {\em
пре} него што \ConTeXt\ подеси величину размака између речи како би
омогућио поравнање.} У суштини можемо да урадимо три ствари у вези са овим
проблемом:

\startitemize[n]

  \item Да га накупимо на једној од две стране линије: ако га накупимо на
  леву страну, изгледаће као да је линија {\em мало погурана} у десно, а
  ако га накупимо на десну страну, линија остаје на левој. У првом случају
  се ради о {\em десном поравнању}, а у другом о {\em левом поравнању}.
  \ConTeXt\ подразумевано примењује лево поравнање последње линије пасуса.

  Када се неколико узастопних линија лево поравна, десна страна је
  неправилна; а када је поравнање са десне стране, онда лева страна изгледа
  неуједначено. Приликом давања имена опцијама које поравнавају једну или
  другу страну, \ConTeXt\ не мисли на страну на којој су линије поравнате,
  већ на страну на којој нису уједначене. Тако опција {\tt flushright} даје
  лево поравнање, а {\tt flushleft} десно поравнање. Као скраћенице за {\tt
  flushright} и {\tt flushleft}, \tex{setupalign} као вредности подржава и
  {\tt right} и {\tt left}. Али {\bf пажња}: овде значење речи вара.  Мада
  {\em left} значи \quotation{лево}, а {\em right} значи \quotation{десно},
  \tex{setupalign[left]} поравнава по десној ивици, а
  \tex{setupalign[right]} поравнава по левој. У случају да се читалац пита
  зашто је наведен овај коментар, вреди цитирати \ConTeXt\ вики:
  \quotation{ConTeXt користи опције flushleft и flushright. Десно и лево
  поравнање су супротна од уобичајених смерова у свим командама које
  прихватају опцију поравнања, у смислу \quote{искрзана лева} и
  \quote{искрзана десна}. Нажалост, када је Ханс писао овај део система
  ConTeXt, размишљао је о \quote{искрзана десна} и \quote{искрзана лева}
  поравнању, а не о \quote{равна лева} и \quote{равна десна}. Па како је
  већ одавно тако, није могуће да се промени јер би промена покварила
  компатибилност уназад са свим постојећим документима који ово користе.}

  У документима припремљеним за двострану штампу, уз леву и десну маргину
  постоје и унутрашња и спољашња маргина. Вредности {\tt flushinner} (или
  просто {\tt inner}) и {\tt flushouter} (или просто {\tt outer}) у тим
  случајевима успостављају одговарајуће поравнање.

  \item Да га распоредимо по обе маргине. Резултат ће бити центрирана
  линија. \tex{setupalign} опција која то ради је {\tt middle}.

  \item Да га распоредимо по свим речима које чине линију, уз неопходно
  повећање размака између речи, тако да линија потпуно заузме доступан
  простор. У овим случајевима говоримо о {\em уједначеним линијама}.  Ово
  је и подразумевана \ConTeXt\ вредност, па зато не постоји посебна
  \tex{setupalign} опција за успостављање оваквог поравнања. Међутим, ако
  смо променили подразумевано уједначено поравнање, можемо га вратити помоћ
  \tex{setupalign[reset]}.

\stopitemize

Вредност за \tex{setupalign} коју смо управо видели ({\tt right,
flushright, left, flushleft, inner, flushinner, outer, flushouter} и {\tt
middle}) може да се комбинује са {\tt broad}, па се онда добија донекле
грубље поравнање.

\startSmallPrint

  Остале могуће вредности  \tex{setupalign} које утичу на хоризонтално
  поравнање се тичу растављања речи на крају реда, јер и зависности од тога
  да ли се то ради или не, тачна мера дужине линије је већа или мања; а то
  онда утуче на преостали празан простор.

  \tex{setupalign} прихвата {\tt morehyphenation} вредност која систему
  \ConTeXt\ говори да се више потруди приликом проналажења тачака прелома
  које се добијају растављањем речи на крају реда и {\tt lesshyphenation}
  која има супротни ефекат. Са \tex{setupalign[horizontal,
  morehyphenation]}, преостали празан простор у линијама ће се умањити, па
  ће онда поравнање бити мање уочљиво. Супротно томе,
  \tex{setupalign[horizontal, lesshyphenation]} чини да буде више
  преосталог празног простора, чиме је поравнање уочљивије.

\stopSmallPrint

Предвиђено је да се \tex{setupalign} уметне у преамбулу и да утиче на
комплетан документ, или да се уметне на одређено место, па да утиче на све
од тог места до краја. Ако само желимо да променимо поравнање једне или
неколико линија, можемо да употребимо:

\startitemize

  \item \MyKey{alignment} окружење, намењено да утиче на неколико линија.
  Његов општи облик је:

  \PlaceMacro{startalignment}\type{\startalignment [Опције] ... \stopalignment}

  где су {\em Опције} било које од оних које прихвата \tex{setupalign}.

  \item Команде \PlaceMacro{leftaligned}\tex{leftaligned},
  \PlaceMacro{midaligned}\tex{midaligned} или
  \PlaceMacro{rightaligned}\tex{rightaligned} које редом праве лево,
  центрирано, или десно поравнање; а ако желимо да последња реч у пасусу
  (али само она, а не и остатак линије) буде десно поравната, можемо да
  употребимо \PlaceMacro{wordright}\tex{wordright}. Све ове команде траже
  да им се текст на који утичу достави у витичастим заградама.

  \startSmallPrint

    С друге стране, запазите да ако речи \MyKey{right} и \MyKey{left} у
    \tex{setupalign} укључују супротно поравнање од оног на које сугерише
    име, то се не дешава са командама \tex{leftaligned} и
    \tex{rightaligned} које примењују ону врсту поравнања које одговара
    њиховом имену: {\tt left} лево поравнање, а {\tt right} десно.

  \stopSmallPrint

\stopitemize

\stopsubsection

\startsubsection
  [
    reference={sec:VerticalAlignment},
    title={Вертикално поравнање},
  ]

Пошто се хоризонтално поравнање примењује када ширина линије не заузима сав
простор који јој је доступан, онда вертикално поравнање утиче на висину
целе странице: ако {\em природна} висина текста странице не заузме
комплетан доступан простор, шта се ради са остатком празног простора?
Можемо да га нагомиламо на врх (\MyKey{height}), што значи да ће се текст
странице погурати наниже; можемо да га нагомиламо на дно (\MyKey{bottom}),
или да га распоредимо између пасуса (\MyKey{line}). Подразумевана вредност
за вертикално поравнање је \MyKey{bottom}.

\subsubsubject{Вертикални ниво толеранције}

На исти начин на који \PlaceMacro{setuptolerance}\tex{setuptolerance}
можемо да променимо ниво толеранције система \ConTeXt\ у погледу количине
хоризонталног простора који је дозвољен у линији (хоризонтална
толеранција), такође можемо да променимо и његову вертикалну толеранцију,
тј. толеранцију на простор између пасуса који је већи од оног који
\ConTeXt\ подразумевано сматра разумним за добро сложену страницу.
Вредности које су могуће за вертикалну толеранцију су исте као и за
хоризонталну: {\tt verystrict, strict, tolerant} и {\tt verytolerant}.
Подразумевана вредности је \tex{setuptolerance [vertical, strict]}.

\subsubsubject{Контрола удовица и сирочића}

Један аспект који индиректно утиче на вертикално поравнање је контрола
удовица и сирочића. Оба израза наговештавају да је последица прелома
странице то да једна линија пасуса буде изолована од остатка пасуса који се
нађе на другој страници. Сматра се да то није типографски погодно. Ако је
изолована линија пасуса прва на страници, онда говоримо о {\em линији
удовици}; ако је линија одвојена од свог пасуса последња на страници, онда
говоримо о {\em линији сирочету}.

\ConTeXt\ подразумевано не имплементира контролу којом би се спречило да
дође до оваквих линија. Али то можемо променити изменом неких од интерних
променљивих система \ConTeXt: \PlaceMacro{widowpenalty}\tex{widowpenalty}
контролише линије удовице, а \PlaceMacro{clubpenalty}\tex{clubpenalty}
контролише линије сирочиће. Дакле, следеће наредбе у преамбули нашег
документа обезбеђују да се ова контрола изврши:

\starttyping
\widowpenalty=10000
\clubpenalty=10000
\stoptyping

Извођење ове контроле значи да ће \ConTeXt\ избегавати уметање прелома
странице који прву или последњу линију поставља на суседну страницу оне
на којој је остатак пасуса. Ово спречавање ће бити мање или више ригорозно
у зависности од вредности коју доделимо променљивама. Ако поставимо
10\,000, као што сам употребио у примеру, контрола ће бити апсолутна;
вредност од, на пример, 150 поставља контролу која није тако ригорозна, па
се понекад може догодити да се појаве неке линије удовице или сирочићи,
углавном онда када је алтернатива у типографском смислу још лошија.

\stopsubsection

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=75 : %%%
