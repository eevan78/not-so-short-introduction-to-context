%%% Фајл:     b12_SpecialParas.mkiv
%%% Аутор:    Joaquín Ataz-López
%%% Започето: Јул 2020
%%% Завршено: Август 2020
%%% Садржај:  Ово поглавље је велика финална збрка. Све што није јасно
%%%	      могло негде другде да се смести, нашло се овде.  О финалној
%%%	      структури сам одлучио док сам писао ово поглавље, јер када
%%%	      сам почео да се бавим одређеним материјалом, постао сам
%%%	      свестан да би могао негде другде да се смести.
%%%
%%% Уређивано са: Emacs + AuTeX - и повремено са vim + context-plugin
%%%

% \environment ../introCTX_env.mkiv

\startcomponent b12_SpecialParas.mkiv

\startchapter
  [title={Специјалне конструкције и пасуси},
   bookmark={Специјалне конструкције и пасуси}]

\TocChap

\startsection
  [title={Фусноте и белешке на крају}]

Напомене су \quotation{секундарни текстуални елементи који се користе за
различите намене, као што је разјашњавање или проширивање главног текста,
приказивање библиографске референце на изворе, укључујући и цитате,
указивање на остале документе или исказивање значења текста} [{\em Libro de
Estilo de la Lengua española} (Стилски водич шпанског језика), стр. 195].
Оне су од велике важности у текстовима академске природе. Могу да се налазе
на разним местима на страници или у документу. Данас су најраспрострањеније
оне које се налазе у подножју странице (па се зато називају фусноте);
понекад се налазе и у маргинама (маргиналне напомене), на крају сваког
поглавља или одељка, или на крају документа (белешке на крају). У посебно
компликованим документима, могу да постоје разне {\em серије} напомена:
ауторове, напомене преводиоца, ажурирања, итд. Тачније, у критичким
издањима апарат напомена може бити изузетно компликован и само неколико
словослагачких система има могућност да га подржи. \ConTeXt\ је један од
њих. Доступне су бројне команде које успостављају у конфигуришу различите
врсте напомена. 

Да би се ово објаснило, корисно је почети са истицањем различитих елемената
који постоје у напомени:

\startitemize

\item {\em Маркер} или {\em сидро} напомене: знак који се поставља у тело
текста и који означава да постоји напомена везана за њега. Немају све врсте
напомена придружено {\em сидро}, али када постоји, ово {\em сидро} се
појављује на два места: на месту у главном тексту на које се односи
напомена и на почетку самог текста напомене. Присуство исте ознаке на оба
места омогућава да се напомена придружи главном тексту.

\item {\em ИД или идентификатор} напомене: слово, број или симбол који
идентификује напомену и помоћу којег се напомена разликује од осталих
напомена. Неке напомене, на пример маргиналне напомене, немају ИД. Када то
није случај, ИД се обично подудара са {\em сидром}.

  \startSmallPrint

    Ако размишљамо искључиво о фуснотама, видећемо да нема разлике између
    њих и онога што сам управо назвао {\em маркер референце} и {\em ид}. У
    осталим врстама напомена јасно можемо видети разлику: линијске
    напомене, на пример, имају ид али немају маркер референце.
    
  \stopSmallPrint

\item {\em Текст} или {\em садржај} напомене, увек се налази на неком
другом месту на страници или у документу, различитом од оног на којем је
команда која генерише напомену и означава њен садржај.

\item {\em Лабела} придружена напомени: лабела или име придружено напомени
које се не приказује у финалном документу, али нам омогућава да се позовемо
на њега и да на неком другом месту у документу добијемо њен ИД.

\stopitemize

\startsubsection
  [title=Врсте напомена у систему \ConTeXt\ и команде које су им придружене]

\ConTeXt\ познаје различите врсте напомена. За сада ћу само да их наведем,
уз опис у општим цртама и командама које служе да се генеришу. Касније ћу
детаљније да опишем прве две:

\startitemize

\item {\bf Фусноте:} несумњиво најпопуларније, у тој мери да је постало
уобичајено да се за све врсте напомена једним изразом каже да су {\em
фусноте}. Фусноте на место у документу на којем се наиђе на команду умећу
{\em маркер} са {\em ид} напомене, а сам текст напомене умећу на дно
странице на којој се појави маркер. Креирају се командом \tex{footnote}.

\item {\bf Белешке на крају:} ове напомене се креирају командом
\tex{endnote} и умећу се на место у документу на којем се пронађе маркер са
ИД напомене; али садржај напомене се умеће на друго место у документу, и то
уметање се постиже другом командом (\tex{placenotes}).

\item {\bf Маргиналне напомене:} као што им име наговештава, оне се пишу у
маргини текста и у телу документа нема ИД или аутоматски генерисаног
маркера или сидра. Две главне команде (мада не и једина) које их креирају
су \tex{inmargin} и \tex{margintext}.

\item {\bf Линијске напомене:} врста напомена која је типична за окружења у
којима се линије нумеришу, као што је случај са \tex{startlinenumbering ...
\stoplinenumbering} (погледајте \in{одељак}[sec:linenumbering]). Сама напомена,
која се обично пише на дну, се односи на одређени број линије. Оне се
генеришу командом \PlaceMacro{linenote}\tex{linenote} која се конфигурише
командом \PlaceMacro{setuplinenote}\tex{setuplinenote}. Ова команда на
штампа {\em маркер} у телу текста, већ у самој напомени исписује број
линије на коју се напомена односи (што се користи као {\em ИД}).

\stopitemize

Сада ћу детаљно да прикажем прве две врсте напомена:

\startitemize

\item Маргиналне напомене се обрађују на другом месту
(\in{одељак}[sec:margintext]).

\item Линијске напомене имају врло специфичну употребу (посебно у критичким
издањима) па верујем да је у уводном документу као што је овај, довољно да
се читалац упозна са чињеницом да оне постоје.

  \startSmallPrint

    Међутим, заинтересованом читаоцу препоручујем видео (на шпанском) уз
    који иде и текст (такође на шпанском) о критичким издањима у систему
    \ConTeXt, чији је аутор Пабло Родригес. Можете га пронаћи на
    \goto{овој адреси}[url(http://www.ediciones-criticas.tk/)]. Такође је
    добар и за разумевање неколико општих подешавања напомена.

  \stopSmallPrint

\stopitemize

\stopsubsection

\startsubsection
  [title=Детаљи о фуснотама и напоменама на крају]
  \PlaceMacro{footnote}\PlaceMacro{endnote}

Синтакса команди за фусноте и напомене на крају као и механизми
конфигурације и прилагођавања тих команди су врло слични, јер су у
стварности, обе ове врсте напомена конкретне инстанце општијих конструкција
(напомена). Командом \tex{definenote} (погледајте
\in{одељак}[sec:definenote]) могу да се дефинишу и друге инстанце напомена.

Синтакса команде која креира сваку од ових врста напомена је:

\starttyping
\footnote[Лабела]{Текст}
\endnote[Лабела]{Текст}
\stoptyping

где је

\startitemize

\item {\em Лабела} аргумент који није обавезан и који напомени додељује
лабелу којом можемо негде другде у документу да укажемо на ову напомену.

\item {\em Текст} је садржај напомене. Дужина текста може бити произвољна и
може да садржи специјалне пасусе и подешавања, мада би требало напоменути
да је што се тиче фуснота, врло тешко постићи коректан распоред странице у
документима који имају доста прилично дугачких напомена.

  \startSmallPrint

    У принципу, било која команда која може да се употреби у главном
    тексту може да се употреби и у тексту напомене. Међутим, успео сам да
    потврдим како неке конструкције и карактери који не представљају никакав
    проблем у главном тексту генеришу грешку приликом компајлирања ако се
    нађу у тексту напомене. Ове случајеве сам открио током тестирања, али
    их нисам ни на који начин организовао.

  \stopSmallPrint

\stopitemize

Када се аргумент {\em Лабела} употреби за постављање лабеле напомене,
команда \PlaceMacro{note}\tex{note} нам омогућава да добијемо ИД напомене у
питању. Ова команда исписује ИД напомене којој је придружена лабела
прослеђена као аргумент. Тако на пример:

\startDoubleExample
\switchtobodyfont[small]
\setupnotation[footnote][width=-1cm]
\vbox{\starttyping
Ја сам црвић Глиша,\footnote[glisa]{Познати
карактер из дечије песмице} 
ја сам црвић Глиша\note[glisa]\\
Излазим из земље само кад
је киша.\\Волим да се играм,
волим да се смејем.\\
Лети да се купам, зими да се грејем.
\stoptyping}\blank[nowhite]

Ја сам црвић Глиша,\footnote[glisa]{Познати карактер из дечије
песмице} ја сам црвић Глиша\note[glisa]\\Излазим из земље само кад је
киша.\\Волим да се играм, волим да се смејем.\\Лети да се купам, зими да
се грејем.

\stopDoubleExample

Главна разлика између \tex{footnote} и \tex{endnote} је место на којем се
појављује напомена:

\startdescription{\tex{footnote}}

Као правило, текст напомене штампа на дну странице на којој се налази
команда, тако да ће се маркер напомене и њен текст (или почетак текста, ако
мора да се распореди на две странице) појавити на истој страници. Да би то
постигао, \ConTeXt\ ће урадити неопходна подешавања словослагања странице
тако што ће да израчуна простор потребан за место напомене на дну странице.

\startSmallPrint

  Али у неким окружењима, \tex{footnote} текст напомене неће да уметне на
  дно саме странице, већ испод окружења. Ово је случај, на пример, у
  табелама, или у {\tt columns} окружењу. Ако у овим случајевима желимо да
  се напомене унутар окружења сместе на дно странице, треба да уместо
  \tex{footnote} команде употребимо \tex{footnotetext} у комбинацији са
  командом \tex{note} која је поменута изнад. Ова прва, која такође
  као аргумент који није обавезан подржава лабелу, штампа само текст
  напомене, без маркера. Али пошто \tex{note} штампа само маркер без текста,
  комбинација обе нам омогућава да напомену поставимо тамо где желимо. Тако
  на пример, могли би да напишемо \tex{note[MyLabel]} унутар табеле или
  окружења у више колона, па да онда када изађемо из тог окружења наведемо
  \type{\footnotetext[MyLabel]{Текст напомене}}.

Још један пример употребе \tex{footnotext} у комбинацији са \tex{note} би
биле напомене унутар других напомена. На пример:

\startDoubleExample
%\switchtobodyfont[small]
\setupnotation[footnote][width=-1cm]
\starttyping
Ово%
\footnote{или ово\note[noteB], ако вам више одговара.}%
\footnotetext[noteB]
{или можда чак и ово\note[noteC].}
\footnotetext[noteC]{би могло бити
нешто потпуно другачије.}
је реченица са угнежђеним напоменама.
\stoptyping

Ово%
\footnote{или ово\note[noteB], ако вам више одговара.}%
\footnotetext[noteB]
{или можда чак и ово\note[noteC].}
\footnotetext[noteC]{би могло бити
нешто потпуно другачије.}
је реченица са угнежђеним напоменама.

\stopDoubleExample

\stopSmallPrint
  
\stopdescription

\startdescription{\tex{endnote}}

  штампа само сидро напомене на месту у изворном фајлу на којем се постави.
  Конкретан садржај напомене се умеће другом командом на неко друго место у
  документу, (\PlaceMacro{placenotes}\tex{placenotes[endnote]}) која ће, на
  месту на које се нађе, уметнути садржај {\em свих} напомена на крају у
  документу (или поглављу или одељку у питању).

\stopdescription

\stopsubsection

\startsubsection
  [
    reference=sec:localfootnotes,
    title={Локалне напомене},
  ]
  \PlaceMacro{startlocalfootnotes}\PlaceMacro{placelocalfootnotes}

Окружење \tex{startlocalfootnotes} значи да се фусноте у њему посматрају
као {\em локалне} напомене, што значи да се њихова нумерација ресетује и да
се садржај напомена неће аутоматски уметати заједно са осталим напоменама,
већ само на оном месту у документу на којем се наиђе на команду
\tex{placelocalfootnotes}, што може али и не мора да буде унутар окружења.

\stopsubsection

\startsubsection
  [
    reference=sec:definenote,
    title={Креирање и употреба прилагођених типова напомена},
    bookmark={Креирање и употреба прилагођених типова напомена},
  ]
  \PlaceMacro{definenote}

Командом \tex{definenote} можемо да креирамо специјалне врсте напомена. То
може бити корисно у сложеним документима где постоје напомене од различитих
аутора, или за различите намене, да се графички разликује свака врста
напомене у нашем документу користећи различито форматирање и другачију
нумерацију.

Синтакса команде \tex{definenote} је следећа:

\type{\definenote[Име][Модел][Конфигурација]}

где је

\startitemize

\item {\em Име} име које додељујемо нашој новој врсти напомене.

\item {\em Модел} модел напомене која ће иницијално да се искористи. Може
бити {\tt footnote} или {\tt endnote}; у првом случају ће наш модел
напомене радити као фусноте, а у другом као напомене на крају, мада их у
документ нећемо постављати \PlaceMacro{placenotes}\tex{placenotes[endnote]}
већ са \tex{placenotes[Име]} (име које смо доделили овој врсти напомена).

  \startSmallPrint

    Теоретски овај аргумент није обавезан, мада у мојим тестовима неке
    напомене креиране без њега нису биле видљиве, а ја нисам имао стрпљења
    да откријем зашто се то дешавало.

  \stopSmallPrint


\item {\em Конфигурација} је други аргумент који није обавезан и који
нам омогућава да се наша нова врста напомене разликује од свог модела: било
подешавањем другачијег формата, било другачијом нумерацијом, или и једним и
другим.

  \startSmallPrint

    Према званичној листи \ConTeXt\ команди (погледајте
    \in{одељак}[sec:qrc-setup-en]) подешавања која могу да се поставе током
    креирања нове врсте напомене су базирана на онима која би могла касније
    да се наведу командом \tex{setupnote}. Међутим, као што ћемо ускоро
    видети, уствари постоје две могуће команде за подешавање напомена:
    \tex{setupnote} и \cmd{setupnotation}. Тако да мислим да је пожељно
    изоставити овај аргумент, па онда подесити нашу нови напомену користећи
    одговарајуће команде. То је барем једноставније да се објасни.

  \stopSmallPrint

\stopitemize

На пример, следећи фрагмент ће креирати нову напомену под именом
\quotation{BlueNote} која ће личити на фусноте, али ће се њен садржај
штампати црним слогом у плавој боји:

\starttyping
\definenote  [BlueNote] [footnote]
\setupnotation 
  [BlueNote] 
  [color=blue, style=bf]
\stoptyping

Када креирамо нову врсту напомена, нпр. {\em BlueNote}, постаће доступна
команда која нам омогућава да је користимо. У нашем примеру ће то бити
\tex{BlueNote} и њена синтакса је слична синтакси команде \tex{footnote}:

\type{\BlueNote[Лабела]{Текст}}

\stopsubsection

\startsubsection
  [title=Конфигурисање напомена]
  \PlaceMacro{setupnote}\PlaceMacro{setupnotation}
%\adaptlayout[lines=1]
Конфигурација напомена (фуснота или напомена на крају, напомена креираних
командом \tex{definenote} као и линијских напомена подешених са
\tex{linenote}) се врши помоћу две команде: \tex{setupnote} и
\tex{setupnotation}\footnote{\tex{setupnote} има 35 {\em директних} опција
конфигурације и још 45 додатних наслеђених од \tex{setupframed};\\
\tex{setupnotation} има 45 директних конфигурационих опција и још 23
наслеђених од \PlaceMacro{setupcounter}\tex{set\-up\-co\-un\-ter}. Пошто
ове опције нигде нису документоване, и мада за већину њих из њиховог имена
можемо наслутити њихову корисност, морамо проверити да ли је наша интуиција
у праву или није; и такође, узимајући у обзир да многе од ових опција
прихватају већи број вредности које све треба да се тестирају… Да бих
написао ово објашњење, видећете да сам морао извршити поприличан број
тестова; и мада је извршавање теста брзо, обављање великог броја тестова је
споро и досадно.  Тако да се надам да ће ми читалац опростити ако вам кажем
да ћу осим две опште конфигурационе команде за напомене које помињем у
главном тексту и на које се фокусирам у објашњењу које следи, изоставити
остале четири потенцијалне конфигурационе могућности из објашњења:

  \startitemize

  \item \PlaceMacro{setupnotes}\tex{setupnotes} и
  \PlaceMacro{setupnotations}\tex{setupnotations}: другим речима, исто име
  али у множини. Вики каже да су верзије команде у једнини и множини
  синоними, и ја верујем да је тако.

  \item \PlaceMacro{setupfootnotes}\tex{setupfootnotes} и
  \PlaceMacro{setupendnotes}\tex{setupendnotes}: претпостављамо да су ово
  специфичне примене за фусноте и напомене на крају, редом. Можда би
  објашњавање конфигурације напомене на основу ових команди било лакше,
  међутим, пошто прва опција ({\tt numberconversion}) коју сам покушао са
  \tex{setupfootnotes} није успела да проради, мада знам да остале опције
  ових команди функционишу… био сам сувише лењ да многим тестовима које
  сам морао да урадим како би написао оно што следи додам и тестове
  потребне да се у објашњење укључе и ове две команде.\blank[small]

   Али мишљења сам (након неколико случајних тестова које сам извршио) да
   све што ради у ове две команде, али чије објашњење изостављам, такође
   ради и у командама за које дајем објашњење.

  \stopitemize
}. Синтакса је слична за обе:

\starttyping
\setupnote[ТипНапомене][Конфигурација]
\setupnotation[ТипНапомене][Конфигурација]
\stoptyping

где се {\em ТипНапомене} односи на врсту напомене коју конфигуришемо ({\tt
footnote}, {\tt endnote} или име неке врсте напомена коју смо сами
креирали) и {\em Конфигурација} садржи одређене опције конфигурације за
команду.

Проблем је што имена ове две команде не стављају јасно до знања шта је
разлика између њих, или које ствари свака од њих конфигурише; а такође не
помаже ни чињеница да многе од опција ових команди нису нигде
документоване. Након много тестирања, нисам успео да дођем до било каквог
закључка који би ми омогућио да разумем зашто се одређене ствари
конфигуришу једном, а остале другом,\footnote{Постоји страница у
\goto{\ConTeXt\ викију}
[url(https://wiki.contextgarden.net/Unexpected\_behavior)] коју сам
случајно открио (јер није директно посвећена напоменама), која сугерише да
је разлика у томе што \tex{setupnotation} контролише текст напомене који
треба да се уметне, а \tex{setupnote} окружење напомене у којем ће се она
поставити (?) Али то није у складу са чињеницом да се, на пример, ширина
текста напомене (која има везе са њеним {\em уметањем}) контролише опцијом
{\tt width} команде \tex{setupnote}, а не \tex{setupnotation} опцијом са
истим именом. Оно што се овде контролише је ширина простора између маркера
и текста напомене.} осим можда што, због избора које сам направио да бих је
натерао да ради, \tex{setupnotation} увек утиче на текст напомене, или на
ИД који се штампа уз текст напомене, док \tex{setupnote} има неке опције
које утичу на маркер за напомену који се умеће у главни текст.

Сада ћу покушати да организујем оно што сам пронашао након обављања неких
тестова са различитим опцијама обе команде. Већину опција обе команде
остављам по страни, јер нису нигде документоване и јер нисам успео да
извучем било какве закључке о томе за шта служе или под којим условима би
требало да се користе:

\startitemize

\starthead {\bf ИД који се користи за маркер:} напомене се увек
идентификују бројем. Овде можемо да конфигуришемо: \stophead

  \startitemize

  \item {\em Први број}: контролише га опција {\tt start} у
  \tex{setupnotation}. Њена вредност мора да буде цео број, и он се користи
  за почетак набрајања напомена.

  \item {\em Систем набрајања}, који зависи од опције {\tt
  numberconversion} у \tex{setupnotation}. Њене вредности могу бити:

  \startitemize[packed]

  \item {\em Арапски бројеви}: {\tt n, N} или {\tt numbers}.

  \item {\em Римски бројеви}: {\tt I, R, Romannumerals, i, r,
  romannumerals}. Прве три су римски бројеви исписани великим словима, а
  последње три малим.

  \item {\em Набрајање словима}: {\tt A, Character, Characters, a,
  character, characters} у зависности од тога које слово желимо да буде
  велико (прве три опције) или мало (остале).

  \item {\em Набрајање речима}. Другим речима, пишемо реч која означава
  број, тако на пример, \quote{3} постаје \quote{three}. Постоје две
  метода. Опција {\tt Words} исписује реч великим словима, а {\tt words}
  малим.

  \item {\em Набрајање симболима}: можемо да користимо четири различита
  скупа симбола, зависно од опције која се изабере: {\tt set~0, set~1,
  set~2} или {\tt set~3}. На \at{страници}[examples of conversion set]
  постоји пример симбола који се користе у свакој од ових опција.

  \stopitemize

\item {\em Догађај који почиње нумерацију напомена из почетка}: ово зависи
од опције {\tt way} у \tex{setupnotation}. Када је вредност {\tt bytext},
све напомене у документу ће се редно нумерисати, и тај број се никада неће
ресетовати. Када је {\tt bychapter, bysection, bysubsection} итд., бројач
напомена ће се ресетовати сваки пут када се промени поглавље, одељак, или
пододељак, а када је {\tt byblock} набрајање се ресетује сваки пут када у
макроструктури (погледајте \in{одељак}[sec:macrostructure]) променимо
блокове. Када је вредност {\tt bypage}, бројач напомена се ресетује при
свакој промени странице.

  \stopitemize

\starthead {\bf Конфигурисање маркера напомене:} \stophead

  \startitemize

  \item Да ли се приказује или не: опција {\tt number} у
  \tex{setupnotation}.

  \item Позиција маркера у односу на текст напомене: опција {\tt
  alternative} у \tex{setupnotation}: може да има било коју од следећих
  вредности: {\tt left, inleft, leftmargin, right, inright, rightmargin,
  inmargin, margin, innermargin, outermargin, serried, hanging, top,
  command}.

  \item Формат маркера у самој напомени: опција {\tt numbercommand} у
  \tex{setupnotation}.
    
  \item Формат маркера у телу текста: опција {\tt textcommand}
  у \tex{setupnote}.

    \startSmallPrint
      
      Опције {\tt numbercommand} и {\tt textcommand} морају да се састоје
      од команде која као аргумент узима садржај маркера. То може бити и
      кориснички дефинисана команда. Међутим, открио сам да раде и
      једноставне команде форматирања (\tex{bf}, \tex{it}, итд.), мада оне
      нису команде које обавезно прихватају аргумент.

    \stopSmallPrint

  \item Размак између маркера и текста (у самој напомени): опције {\tt
  distance} и {\tt width} у \tex{setupnotation}. Нисам успео да откријем
  разлику (ако она уопште и постоји) између употребе једне или друге
  опције.

  \item Постојање хиперлинка за скок између маркера у главном тексту и
  маркера у самој напомени: опција {\tt interaction} у \tex{setupnote}.
  {\tt yes} као вредност значи да ће постојати линка, а {\tt no} значи да
  неће.

  \stopitemize

\starthead {\bf Конфигурисање самог текста напомене.} \stophead
  Можемо да утичемо на следеће аспекте:

  \startitemize

  \item Место: ово зависи од опције {\tt location} у \tex{setupnote}. 

    \startSmallPrint
      
      У принципу већ знамо да се фусноте постављају на дно странице ({\tt
      location=page}), а белешке на крају тамо где се пронађе команда
      \tex{placenotes[endnote]} ({\tt location=text}). Међутим ову функцију
      можемо да прилагодимо на пример, тако да фусноте поставимо као {\tt
      location=text}, па ће фусноте радити слично као белешке не крају и
      појављиваће се у документу на месту где се пронађе команда
      \tex{placenotes[footnote]}, или специфична команда за фусноте
      \tex{placefootnotes}. Овом процедуром би на пример фусноте могли да
      штампамо испод пасуса у којем се пронађу.

    \stopSmallPrint

  \item Раздвајање пасуса између напомена: свака напомена се подразумевано
  штампа у посебном пасусу, али можемо подесити да се све напомене на
  једној страници штампају у истом пасусу ако опцију {\tt paragraph} у
  \tex{setupnote} поставимо на \MyKey{yes}. 

  \item Стил у којем се исписује текст саме напомене: опција {\tt style} у
  \tex{setupnotation}.

  \item Величина слова: опција {\tt bodyfont} у \tex{setupnote}.

    \startSmallPrint

      Ова опција служи само у случају када ручно желимо да подесимо
      величину фонта за фусноте. То скоро увек није добра идеја, јер
      \ConTeXt\ подразумевано подешава величину фонта за фусноте тако да
      буде мањи од величине главног текста, али користећи величину {\em
      која је пропорционална} величини фонта у главном телу документа.

    \stopSmallPrint

  \item Лева маргина текста напомене: опција {\tt margin} у
  \tex{setupnotation}.

  \item Максимална ширина: опција {\tt width} у \tex{setupnote}.

  \item Број колона: опција {\tt n} у \tex{setupnote} одређује да се текст
  напомене слаже у две или више колона. Вредност \quote{n} мора бити цео
  број.

  \stopitemize

\item {\bf Размак између напомена или између напомена и текста:} овде
имамо следеће опције:

  \startitemize

  \item {\tt rule}, у \tex{setupnote} одређује да ће постојати линија
  (rule) између простора за напомене и простора за главни текст на
  страници. Дозвољене вредности су {\tt yes, on, no} и {\tt off}. Прве две
  укључују линију, а последња је искључује.

  \item {\tt before}, у \tex{setupnotation}: команда или команде које треба
  да се изврше пре уметања текста напомене. Служи да се уметне додатни
  размак, линије које раздвајају напомене, итд.

  \item {\tt after}, у \tex{setupnotation}: команда или команде које треба
  да се изврше након уметања текста напомене.

\stopitemize

\stopitemize

\stopsubsection

\startsubsection
  [
  	title={Привремено искључивање напомена током компајлирања},
  	bookmark={Привремено искључивање напомена током компајлирања}
  ]
  \PlaceMacro{notesenabledfalse}\PlaceMacro{notesenabledtrue}

Команде \tex{notesenabledfalse} и \tex{notesenabledtrue} говоре систему
\ConTeXt\ да редом искључи или укључи компајлирање напомена. Ова функција
може бити корисна ако документ има велики број дугачких напомена, па желимо
да добијемо верзију без напомена. Из мог личног искуства, када на пример,
коригујем докторску тезу, више волим да је прво прочитам у једном пролазу,
без напомена, па да онда у другом читању укључим и напомене.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:multiplecolumns,
    title={Пасуси у више колона},
  ]

Словослагање текста у више од једне колоне се може подесити:

\startitemize[azbuka]

\item Као општа особина распореда странице.

\item Као особина одређених конструкција, као што су на пример, уређене
листе, или фусноте, или напомене на крају.

\item Као особина која се примењује на одређени пасус у документу.
  
\stopitemize
 
У свим овим случајевима, већина команди и окружења ће савршено да ради са
више од једне колоне. Ипак има неких ограничења; углавном у вези са
плутајућим објектима у општем случају (погледајте \in{одељак}[sec:floating
objects]) и нарочито са табелама (\in{одељак}[sec:tables]) чак и када нису
пливајући објекти.

Што се тиче дозвољеног броја колона, \ConTeXt\ нема теоретско ограничење.
Међутим, постоје физичка ограничења која треба узети у обзир:

\startitemize

\item Ширина папира: неограничени број колона захтева неограничену ширину
папира (ако ће се документ штампати) или екрана (ако је предвиђено да се
документ приказује на екрану). У пракси, када се узме у обзир {\em
нормална} ширина величина папира које су у продаји и од којих се праве
књиге, као и величина екрана компјутера, тешко је се на њих смести текст
који је шири од четири или пет колона.

\item Величина компјутерске меморије: \ConTeXt\ референтно упутство истиче
да {\em нормалним} системима (који нису ни посебно моћни ни посебно
ограничених ресурса), може да се обрађује између 20 и 40 колона.

\stopitemize

У овом одељку ћу се фокусирати на механизам више колона у специјалним
пасусима или фрагментима, јер је

\startitemize

\item Више колона као опција распореда странице већ раније објашњена (у
\in{пододељку}[sec:pages-columns] \in{одељка}[sec:pages-other-matters]).

\item Могућност коју нуде неке конструкције, као што су уређене листе или
фусноте, словослагање текста у више од једне колоне, дискутована у вези
са конструкцијом или окружењем о којем се ради.

\stopitemize

\stopcolumns

\startsubsection
  [title={\tex{startcolumns} окружење}]
  \PlaceMacro{startcolumns}

Уобичајена процедура за уметање фрагмената састављених од неколико колона у
документ је да се употреби {\tt columns} окружење чији је формат:

\type{\startcolumns[Конфигурација] ... \stopcolumns}

где нам {\em Конфигурација} омогућава да контролишемо многе аспекте
окружења. Можемо да наведемо жељену конфигурацију сваки пут када позивамо
окружење, или да прилагодимо подразумевано понашање окружења за све позиве
окружења, што може да се постигне са

\PlaceMacro{setupcolumns}\type{\setupcolumns[Configuration]}

Конфигурационе опције су исте у оба случаја. Најважније од њих, поређане по
функцији, су следеће:

\startitemize

\item {\bf Опције које контролишу број колона и размак између њих:}

  \startitemize
    
  \item {\tt n}: контролише број колона. Ако се ово изостави, генерисаће се
  две колоне.

  \item {\tt nleft, nright}: ове опције се користе у распореду двостраног
  документа (погледајте \in{пододељак}[sec:double-sided]
  \in{одељка}[sec:pages-other-matters]), да се редом успостави број колона
  на левим (парним) и десним (непарним) страницама.

  \item {\tt distance}: размак између колона.

  \item {\tt separator}: одређује шта чини граничник између колона. Може
  бити {\tt space} (подразумевана вредност) или {\tt rule}, у ком случају
  се генерише линија (rule) између колона. У случају да се између колона
  поставља линија, она може да се конфигурише са следеће две опције:

    \startitemize
      
    \item {\tt rulecolor}: боја линије.

    \item {\tt rulethickness}: дебљина линије.

    \stopitemize

  \item {\tt maxwidth}: максимална ширина коју колоне могу имати + размак
  између њих.

  \stopitemize

\item {\bf Опције које контролишу дистрибуцију текста по колонама:}

  \startitemize

  \item {\tt balance}: \ConTeXt\ подразумевано {\em балансира} колоне, што
  значи да текст распоређује по њима на такав начин да колоне имају мање
  више исту количину текста. Међутим, ову опцију можемо да подесимо на
  {{\tt no}} тако да текст не почне у колони ако претходна није пуна.

  \item {\tt direction}: одређује у ком смеру се текст распоређује по
  колонама. Подразумевано се следи природни редослед читања (с лева на
  десно), али ако овој опцији доделимо вредност {\tt reverse} распоређиваће
  се с десна у лево.

  \stopitemize
  
\starthead {\bf Опције које утичу на слагање текста унутар окружења:} \stophead

  \startitemize

    \item {\tt tolerance}: текст који се пише у више од једне колоне
    подразумева да је ширина линије колоне мања, па као што је објашњено у
    опису механизма који \ConTeXt\ користи за конструисање линија
    (\in{одељак}[sec:lines]), то отежава лоцирање оптималних тачака за
    уметање прелома линије. Ова опција нам омогућава да привремено изменимо
    хоризонталну толеранцију унутар окружења (погледајте
    \in{одељак}[sec:horizontaltolerance]), и тако помогнемо словослагање
    текста.

    \item {\tt align}: контролише хоризонтално поравнање линија унутар
    окружења. Може имати било коју од следећих вредности: {\tt right,
    flushright, left, flushleft, inner, flushinner, outer, flushouter,
    middle} или {\tt broad}. Што се тиче значења ових вредности, погледајте
    \in{одељак}[sec:setupalign].

    \item {\tt color}: наводи име боје којом ће се штампати текст унутар
    окружења.

  \stopitemize

\stopitemize

\stopsubsection

\startsubsection
  [title={Паралелни пасуси}]
  \PlaceMacro{defineparagraphs}\PlaceMacro{setupparagraphs}

Паралелни пасуси су посебан начин композиције у више колона. У овој врсти
слагања текст се распоређује у две колоне (обично, мада понекад и у више од
две), али не може слободно да тече између њих, већ се уместо тога одржава
стриктна контрола онога шта се појављује у свакој колони. Ово је веома
корисно, на пример, за генерисање докумената који пореде две верзије
текста, као што су нова и стара верзија недавно измењеног закона, или у
двојезичним издањима; или за писање речника за специфичне дефиниције текста
у којима се текст који се дефинише појављује на левој, а дефиниција на
десној страни, итд.

Обично бисмо користили механизам табела да обрадимо овакве врсте пасуса;
али то је зато што већина текст процесора није тако моћна као \ConTeXt.
Он поседује команде \tex{defineparagraphs} и \tex{setupparagraphs} које
изграђују овакве врсте пасуса употребом механизма колона, а који је, мада има
своја ограничења, флексибилнији од механизма табела.

\startSmallPrint

  Колико је мени познато, ова врста пасуса нема посебно име. Назвао сам их
  \quotation{паралелни пасуси} јер ми се то чини много сликовитији израз од
  онога који \ConTeXt\ користи за њих: \quotation{{\em paragraphs}}.

\stopSmallPrint

Овде је основна команда \tex{defineparagraphs} чија је синтакса:

\type{\defineparagraphs[Име][Конфигурација]}

где је {\em Име} име које се даје овој конструкцији, а {\em Конфигурација}
представља особине које ће имати, а које и касније могу да се подесе помоћу

\type{\setupparagraphs[Име][Колона][Конфигурација]}

где је {\em Име} које је било дато кад се креирала, {\em Колона} није
обавезан аргумент који нам омогућава да конфигуришемо одређену колону, и
{\em Конфигурација} нам омогућава да одредимо како ради у пракси.

На пример:

\starttyping
\defineparagraphs
  [MursijaCinjenice]
  [n=3, before={\blank},after={\blank}]

\setupparagraphs
  [MursijaCinjenice][1]
  [width=.1\textwidth, style=bold]

\setupparagraphs
  [MursijaCinjenice][2]
  [width=.4\textwidth]
\stoptyping

Горњи фрагмент креира окружење у три колоне под називом
MursijaCinjenice, па затим подешава да прва колона заузима до 10 процената
ширине линије. Пошто се трећа колона не конфигурише, заузимаће преосталу
ширину, тј. 50\%.

Кад се окружење креира, можемо га употребити да напишемо кратку историју
града Мурсија:

\vbox{\starttyping
  \startMursijaCinjenice
    825
  \MursijaCinjenice
    Основан град Мурсија.
  \MursijaCinjenice
    Почеци града Мурсија нису сасвим јасни, али постоји доказ да је године
    825. Емир од ал-Андалуса Абдерман II наредио оснивање града под именом
    Мадина (или Медина) Мурсија, вероватно саграђеног над много старијом
    насеобином.
  \stopMursijaCinjenice
\stoptyping}

\defineparagraphs
  [MursijaCinjenice]
  [n=3, before={\blank},after={\blank}]

\setupparagraphs
  [MursijaCinjenice][1]
  [width=.1\textwidth, style=bold]

\setupparagraphs
  [MursijaCinjenice][2]
  [width=.4\textwidth]

\example{\startMursijaCinjenice
    825
  \MursijaCinjenice
    Основан град Мурсија.
  \MursijaCinjenice
    Почеци града Мурсија нису сасвим јасни, али постоји доказ да је године
    825. Емир од ал-Андалуса Абдерман II наредио оснивање града под именом
    Мадина (или Медина) Мурсија, вероватно саграђеног над много старијом
    насеобином.
  \stopMursijaCinjenice}

Да смо желели наставити са причом о Мурсији, за нови догађај би била
потребна нова инстанца окружења (\tex{startMursijaCinjenice}), јер овим
механизмом не може да се уметне неколико {\em редова}. 

Желео бих да истакнем следеће детаље у вези са овим примером:

\startitemize

\item Једном када се окружење креира, рецимо са 
\tex{defineparagraphs[BrankoKockica]}, то постаје нормално окружење које
почиње са \tex{startBrankoKockica} и које се завршава са
\tex{stopBrankoKockica}.

\item Креира се и команда \tex{BrankoKockica}, која се користи унутар
окружења онда када желимо назначити да треба променити колону.

\stopitemize

Што се тиче опција конфигурације за паралелне пасусе
(\tex{setupparagraphs}), јасно ми је да је у овој фази увода, узевши у обзир
пример који сам управо представио, читалац већ припремљен да сам одреди
сврху сваке од опција, тако да ћу испод навести само имена и врсту опција,
а тамо где је то битно, и могуће вредности. Ипак, упамтите да
\tex{setupparagraphs [Име] [Конфигурација]} поставља конфигурацију која
утиче на комплетно окружење, док се \tex{setupparagraphs [Име] [БрКол]
[Конфигурација]} наводи конфигурацију која се примењује само на дату колону.

\startitemize[columns, three, packed][align=right]\switchtobodyfont[small]

\item {\tt n}: број

\item {\tt before}: команда

\item {\tt after}: команда

\item {\tt width}: димензија

\item {\tt distance}: димензија

\item {\tt align}: изведено из \tex{setupalign}

\item {\tt inner}: команда

\item {\tt rule}: on off

\item {\tt rulethickness}: димензија

\item {\tt rulecolor}: боја линије

\item {\tt style}: команда стила

\item {\tt color}: боја

\stopitemize

\startSmallPrint

  Ова листа опција није комплетна; нисам навео опције које овде не бих
  објашњавао. Такође сам искористио чињеницу да се налазимо у одељку
  посвећеном колонама, па сам листу опција навео у три колоне, мада то
  нисам урадио употребом било које команде објашњене у овом одељку, већ
  помоћу {\tt columns} опције {\tt itemize} окружења, којем је посвећен
  следећи одељак.

\stopSmallPrint

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:itemize,
    title={Уређене листе},
  ]

Када се информације приказују на уређени начин, читалац их лакше прихвата.
Али ако је уређење и визуелно уочљиво, оно онда читаоцу истиче чињеницу да
је пред њим уређени текст. То је разлог што одређене {\em конструкције} или
{\em механизми} покушавају да истакну визуелну организацију текста, чиме се
доприноси самој структури текста. Од свих алата које за ову сврху \ConTeXt\
нуди аутору, најважнији је {\tt itemize} окружење. Оно је и тема овог
одељка, и помоћу њега се развија оно што би могли да назовемо {\em уређене
листе}.

Листе се састоје од низа {\em текстуалних елемената} (које ћу називати {\em
ставке}), испред којих се налази карактер који помаже да се ставка истакне
од осталих и који ћемо називати \quotation{граничник}. Граничник може бити
број, слово или симбол. Обично су (мада не и увек) {\em ставке} пасуси, а
листа се форматира тако да се обезбеди {\em видљивост} граничника сваког
елемента; обично примењивањем висећег увлачења које га истиче\footnote{У
типографији се увлачење примењено на све линије пасуса осим на прву назива
{\em висеће увлачење}, чиме се лако проналази прва реч или први карактер
пасуса.}. У случају угнеждених листи, увлачење сваке се постепено повећава.
У HTML језику се листе у којима је граничник број или карактер који се
редно увећава називају {\em уређене листе}, што значи да ће свака {\em
ставка} листе имати различити граничник који нам омогућава да на сваки
елемент указујемо бројем или идентификатором; а онима у којима се за сваку
ставку користи исти карактер или симбол назива {\em неуређене листе}.

\ConTeXt\ аутоматски управља азбучним ређањем граничника у нумерисаним
листама, као и увлачењем потребним за угнеждене листе; а у случају
угнеждавања неуређених листи, такође се брине о избору различитог карактера
или симбола који омогућава да се ниво {\em ставке} у листи на први поглед
разликује од симбола који му претходи.

\startSmallPrint

  У референтном упутству се каже да је максимални ниво угнеждавања у
  листама 4, али претпостављам да је то био случај када је упутство
  написано, у 2013. години. Према мојим тестовима, изгледа да нема
  ограничења угнеждавања {\em уређених} листи (моји тестови су достигли до
  15 нивоа угнеждавања). Мада изгледа да нема ограничења ни за неуређене
  листе, у смислу да није битно колико нивоа отворимо, грешка се не
  генерише; али за неуређене листе \ConTeXt\ примењује подразумеване
  симболе само за првих девет нивоа угнеждавања. 

  У сваком случају, требало би истаћи да превелика употреба угнеждавања у
  листама може имати супротан ефекат од оног који желимо, а то је да се
  читалац осећа изгубљен, да не може пронаћи сваку ставку у општој
  структури листе. Из овог разлога лично сматрам да иако су листе моћан
  алат за структурно уређење текста, скоро никада не би требало да се иде
  даље од трећег нивоа угнеждавања; па чак и трећи ниво треба да се користи
  само у одређеним случајевима када је то оправдано.
  
\stopSmallPrint

Општи алат за писање листи у систему \ConTeXt\ је \tex{itemize} окружење
чија је синтакса:

\PlaceMacro{startitemize}\type{\startitemize[Опције][Конфигурација] ... \stopitemize}

при чему ова два аргумента нису обавезна. Први прихвата симболичка имена
којима је \ConTeXt\ дефинисао прецизно значење; други аргумент, који се
ретко и користи, омогућава да се одређеним променљивама доделе одговарајуће
вредности и да се на тај начин утиче на рад окружења.

\startsubsection
  [
    reference=sec:itemize_select-list-type,
    title={Избор врсте листе и граничник између {\em ставки}},
  ]

\startsubsubsection
  [title={Неуређене листе}]

Листа генерисана помоћу {\tt itemize} је подразумевано неуређена листа у
којој ће се граничник аутоматски изабрати у зависности од нивоа угнеждавања:

\startitemize[packed, columns, two]\switchtobodyfont[small]

\sym{\convertnumber{set 0}{1}} За први ниво угнеждавања.

\sym{\convertnumber{set 0}{2}} За други ниво угнеждавања.

\sym{\convertnumber{set 0}{3}} За трећи ниво угнеждавања.

\sym{\convertnumber{set 0}{4}} За четврти ниво угнеждавања.

\sym{\convertnumber{set 0}{5}} За пети ниво угнеждавања.

\sym{\convertnumber{set 0}{6}} За шести ниво угнеждавања.

\sym{\convertnumber{set 0}{7}} За седми ниво угнеждавања.

\sym{\convertnumber{set 0}{8}} За осми ниво угнеждавања.

\sym{\convertnumber{set 0}{9}} За девети ниво угнеждавања.

\stopitemize

Међутим, можемо директно да наведемо симбол који желимо да се користи на
одређеном нивоу тако што као аргумент наведемо и број нивоа. Тако ће
\tex{startitemize[4]} да генерише неуређену листу у којој ће се као
граничник користити карактер \triangleright\, без обзира на ниво
угнеждавања листе.

Предефинисани симбол за сваки ниво можемо да променимо командом
\PlaceMacro{definesymbol}\tex{definesymbol}:

\type{\definesymbol[Ниво]{Симбол придружен нивоу}}

На пример

\type{\definesymbol[1][\diamond]}

подешава да први ниво неуређених листи користи симбол \diamond. Истом
командом можемо да доделимо симболе и нивоима угнеждавања већим од деветог.
Тако на пример

\type{\definesymbol[10][\copyright]}

за ниво угнеждавања 10 поставља међународни симбол {\em ауторских права}:
\copyright.

\stopsubsubsection

\startsubsubsection
  [title=Уређене листе]

Када хоћемо да генеришемо уређену листу, {\tt itemize} окружењу морамо
навести врсту уређења коју желимо. То може бити:

\startitemize[intro, packed, 2*broad, columns, three]
\switchtobodyfont[small]

\sym{{\bf n}} 1, 2, 3, 4, ...

\sym{{\bf m}} {\os 1, 2, 3, 4, ...}

\sym{{\bf g}} \alpha, \beta, \gamma, \delta, ...

\sym{{\bf G}} \Alpha, \Beta, \Gamma, \Delta, ...

\sym{{\bf a}} a, b, c, d, ...

\sym{{\bf A}} A, B, C, D, ...

\sym{{\bf KA}} \cap{a, b, c, d, ...}

\sym{}

\sym{{\bf r}} i, ii, iii, iv, ...

\sym{{\bf R}} I, II, III, IV, ...

\sym{{\bf KR}} \cap{i, ii, iii, iv, ...}

\stopitemize

Разлика између {\tt n} и {\tt m} је у фонту који се користи да се представи
број: {\tt n} користи фонт активан у том тренутку, док {\tt m} користи
различити, елегантнији, скоро калиграфски фонт.\footnote[fn:m]{Опција m укључује
такозване {\em oldstyle} бројеве. То је стилска алтернатива уграђена у неке
фонтове ({\em onum} OpenType особина) која може да се укључи командом \tex{os}.
{\em — прим. прев.}}

\startSmallPrint

  Није ми познато име фонта који се корсити за {\tt m}, па зато у горњој
  листи нисам успео да тачно представим врсту бројева које генерише ова
  опција. Читаоцима препоручујем да је сами испробају.\note[fn:m]

\stopSmallPrint

\stopsubsubsection

\stopsubsection

\startsubsection
  [
    reference=sec:itemize_item-type,
    title={Унос ставки у листу},
  ]

Ставке у листи се по правилу креирају помоћу \tex{startitemize} и уносе
командом  \PlaceMacro{item}\tex{item}, која такође има и верзију у облику
окружења, што је више у Mark~IV стилу: \PlaceMacro{startitem}\tex{startitem
... \stopitem}. Тако наредни пример:

\startDoubleExample
\starttyping
\startitemize[a, packed]
\startitem Први елемент \stopitem
\startitem Други елемент \stopitem
\startitem Трећи елемент \stopitem
\stopitemize
\stoptyping

\startitemize[a, packed]
\startitem Први елемент \stopitem
\startitem Други елемент \stopitem
\startitem Трећи елемент \stopitem
\stopitemize
\stopDoubleExample

креирати потпуно исти резултат као и

\startDoubleExample
\starttyping
\startitemize[a, packed]
\item Први елемент
\item Други елемент
\item Трећи елемент
\stopitemize
\stoptyping

\startitemize[a, packed]
\item Први елемент
\item Други елемент
\item Трећи елемент
\stopitemize

\stopDoubleExample

\tex{item} или \tex{startitem} је {\em општа} команда за уметање ставке у
листу. Уз њу постоје и следеће додатне команде када желимо постићи
специјални резултат:

\startitemize[3*broad]

\sym{\PlaceMacro{head}\tex{head}} Ова команда би требало да се користи
уместо команде \tex{item} када не желимо да се након те ставке уметне
прелом линије.

  \startSmallPrint

    Уобичајена конструкција је да се непосредно након елемента листе уметне
    угнеждена листа или блок текста, тако да елемент листе у суштини служи
    као {\em наслов} подлисте или блока текста. У овим случајевима се не
    саветује уметање прелома странице након тог елемента и наредних пасуса.
    Ако за уметање ових елемената уместо \tex{item} употребимо \tex{head}
    \ConTeXt\ ће се {\em максимално потрудити} да такав елемент не раздвоји
    од наредног блока.

  \stopSmallPrint

\sym{\PlaceMacro{sym}\tex{sym}} Команда \type{\sym{Текст}} умеће ставку у
којој се као {\em граничник} уместо броја или симбола користи текст наведен
као аргумент команде. Ова листа се дакле конструише од ставки које се умећу
са \tex{sym} уместо са \tex{item}.

\sym{\PlaceMacro{sub}\tex{sub}} Ова команда би требало да се користи само у
уређеним листама (где се испред сваке ставке налази број или слово у
азбучном редоследу). Она чини да ставка која се њом уноси задржи број
претходне ставке, а да би се назначило да понављање броја није грешка, са
леве стране се штампа знак \quote{+}. Ово може бити корисно ако указујемо
на претходну листу за коју предлажемо измене, али да би све било јасно,
задржава се нумерација оригиналне листе.

\sym{\PlaceMacro{mar}\tex{mar}} Ова команда одржава нумерацију ставки, али
у маргину додаје слово или карактер (који јој се прослеђује као аргумент,
унутар витичастих заграда). Нисам сигуран колико је корисна.

\stopitemize

Постоје још две команде за унос ставки чија комбинација прави врло {\em
интересантне} ефекте и, ако тако могу да кажем, мислим да је боље објаснити
их кроз пример. \PlaceMacro{ran}\tex{ran} (скраћеница од {\em range} –
опсег) и \PlaceMacro{its}\tex{its}, скраћеница од {\em items} – ставке.
Прва прихвата један аргумент (унутар витичастих заграда), а друга понавља
симбол који се користи као граничник у листи $x$ пута (подразумевано 4, али
то можемо променити употребом опције {\tt items}). Следећи пример показује
како ове две команде могу заједно да креирају нешто што подсећа на упитник:

\vbox{\starttyping 
Након читања увода, одговорите на следећа питања:

\startitemize[5, packed][width=8em, distance=2em, items=5]
\ran{Не \hss Да}
\its Никада нећу користити \ConTeXt, сувише је тежак.
\its Користићу га само за писање великих књига.
\its Користићу га увек.
\its Толико ми се свиђа да ћу свом следећем детету дати име
\quotation{Ханс}, у част Ханса Хагена.
\stopitemize
\stoptyping}

%\startlocalfootnotes
\example{Након читања увода, одговорите на следећа питања:

\startitemize[5, packed][width=8em, distance=2em, items=5]
\ran{Не \hss Да}
\its Никада нећу користити \ConTeXt, сувише је тежак.
\its Користићу га само за писање великих књига.
\its Користићу га увек.
\its Толико ми се свиђа да ћу свом следећем детету дати име
\quotation{Ханс}, у част Ханса Хагена.
\stopitemize
%\placelocalfootnotes
}
%\stoplocalfootnotes

\stopsubsection

\startsubsection
  [
    reference=sec:itemize_arg1,
    title={Основна конфигурација листе},
  ]

Присетимо се да \MyKey{itemize} прихвата два аргумента. Већ смо видели како
нам први аргумент омогућава да изаберемо жељену врсту листе. Али можемо да
га употребимо и за навођење осталих карактеристика листе; то се ради помоћу
наредних опција окружења \MyKey{itemize} у његовом првом аргументу:

\startitemize

\item {\tt columns}: ова опција одређује да се листа прави у две или више
колона. Након опције columns мора да се наведе жељени број колона као речи
раздвојене запетама: two, three, four, five, six, seven, eight или nine.
Ако се иза {\tt columns} не наведе ниједан број, генерисаће се две колоне.

\item {\tt intro}: ова опција покушава да листу не раздвоји преломом линије
од пасуса испред листе.  

\item {\tt continue}: у уређеним листама (нумерисаним или азбучним) ова
опција чини да листа настави са нумерацијом од последње нумерисане листе.
Ако се употреби {\tt continue} опција, није потребно да се наведе жељени
тип листе јер се претпоставља да ће бити иста као последња нумерисана
листа.

\item {\tt packed}: је једна од најчешће коришћених опција. Чини да се
вертикални размак између {\em ставки} листе смањи колико год је то могуће.

\item {\tt nowhite:} има сличан ефекат као и {\tt packed}, али још
израженији: не само да смањује вертикални размак између ставки, већ и
вертикални размак између околног текста.

\item {\tt broad}: повећава хоризонтални размак између граничника ставке и
текста ставке. Простор може да се повећа множењем броја са {\tt broad}, на
пример \type{\startitemize[2*broad]}.

\item {\tt serried}: уклања хоризонтални размак између граничника ставке и
текста.

\item {\tt intext}: уклања висеће увлачење.

\item {\tt text}: уклања висеће увлачење и смањује вертикални размак између
ставки.

\item {\tt repeat}: чини да ниво детета у угнежденим листама {\em понавља}
исти ниво као претходни. Тако бисмо имали на првом нивоу: 1, 2, 3, 4; на
другом нивоу: 1.1, 1.2, 1.3, итд. Опција мора да се наведе за унутрашњу
листу, не за спољашњу.

\item {\tt margin, inmargin}: граничник се подразумевано штампа на левој
страни, али унутар саме области текста ({\tt atmargin}). Опције {\tt
margin} и {\tt inmargin} померају граничник на маргину.

\stopitemize

\stopsubsection

\startsubsection
  [
    reference=sec:itemize_arg2,
    title={Додатна конфигурација листе},
  ]

Други аргумент у \tex{startitemize}, који такође није обавезан, омогућава
детаљнију и опсежнију конфигурацију листи.

\startitemize

\item {\tt before, after}: команде које се редом извршавају пре отварања и
након затварања itemize окружења.

\item {\tt inbetween}: команда која се извршава између две {\em ставке}.

\item {\tt beforehead, afterhead}: команда која се извршава пре или након
ставке која се уноси командом \tex{head}.

\item {\tt left, right}: карактер који се штампа лево или десно од
граничника. На пример, ако желимо да добијемо азбучну листу у којима су
слова унутар заграда, треба да напишемо:

  \type{\startitemize[a][left=(, right=)]}

\item {\tt stopper}: задаје карактер који треба да се испише након
граничника. Функционише само у уређеним листама.

\item {\tt width, maxwidth}: ширина простора резервисаног за гранични, па
дакле и за висеће увлачење.

\item {\tt factor}: репрезентативни број фактора раздвајања између
граничника и текста.

\item {\tt distance}: мера растојања између граничника и текста.

\item {\tt leftmargin, rightmargin, margin}: маргина која се додаје лево
(leftmargin) или десно (rightmargin) од ставки. 

\item {\tt start}: број којим почиње нумерација ставки.

\item {\tt symalign, itemalign, align}: поравнање ставки. Прихвата исте
вредности као и \tex{setupalign}. {\tt symalign} контролише поравнање
граничника; {\tt itemalign} текста ставке, а {\tt align} поравнање оба.

\item {\tt identing}: увлачење прве линије пасуса унутар окружења.
Погледајте \in{одељак}[sec:indentation]

\item {\tt indentnext}: наводи да ли пасус након окружења треба да се
увуче. Вредности су {\em yes, no} и {\em auto}.

\item {\tt items}: за ставке унете командом \tex{its}, наводи колико се
пута понавља сепаратор.

\item {\tt style, color; headstyle, headcolor; marstyle, marcolor;
symstyle, symcolor}: ове опције контролишу стил и боју ставки док се уносе
у окружење командама \tex{item}, \tex{head}, \tex{mar} или \tex{sym}.

\stopitemize

\stopsubsection

\startsubsection
  [
    reference=sec:items command,
    title={Просте листе са \tex{items} командом},
  ]
  \PlaceMacro{items}

Алтернатива {\tt itemize} окружењу за врло просте ненумерисане листе у
којима број ставки није сувише велики је команда \tex{items} чија је
синтакса:

\type{\items[Конфигурација]{Ставка 1, Ставка 2, ..., Ставка n}}

Различите ставке у листи се раздвајају запетама. На пример:

\startDoubleExample
\startframedtext[frame=off, before=, after={\blank[5*big]}, align=high]
\starttyping
Графички фајлови могу имати,
између осталих, и следеће екстензије:

\items{png, jpg, tiff, bmp}
\stoptyping
\ \par
\stopframedtext

Графички фајлови могу имати, између осталих, и следеће екстензије:

\items{png, jpg, tiff, bmp}

\stopDoubleExample

Конфигурационе опције које подржава ова команда су подскуп оних за {\tt
itemize}, осим две које су специфичне за ову команду: 

\startitemize
  
\item {\tt symbol}: ова опција одређује врсту листе која ће се генерисати.
Подржава исте вредности за избор врсте листе као и {\tt itemize}.
 
\item {\tt n}: ова опција наводи од које ставке ће почети граничник.

\stopitemize

\stopsubsection

\startsubsection
  [
    reference=sec:setupitemize,
    title={Предодређивање понашања листе и креирање сопствене врсте листе},
  ]
  
У претходним одељцима смо видели како се наводи жељена врста листе и какве
су њене карактеристике. Али то није ефикасно ако се ради при сваком позиву
листе и обично је последица недоследан документ у којем свака листа
изгледа другачије, а ниједан од тих изгледа не испуњава било какав
критеријум.

Зато би требало:

\startitemize

\item Да се предодреди {\em нормално } понашање окружења {\tt itemize} и
команде \tex{items} у преамбули документа.

\item Да креирамо сопствене прилагођене листе. На пример: азбучно обележену
листу желимо да назовемо {\em ListAlpha}, листу која се набраја римским
бројевима {\em ListRoman}), итд.
  
\stopitemize

Прво постижемо командама \tex{setupitemize} и \tex{setupitems}. Друго
захтева да се употреби или команда
\PlaceMacro{defineitemgroup}\tex{defineitemgroup}, или команда
\PlaceMacro{defineitems}\tex{defineitems}. Прва ће креирати окружење листе
које личи на {\tt itemize}, а друга команду сличну команди {\tt items}.

\stopsubsection

\stopsection

\startsection
  [title={Описи и набрајања}]

Описи и набрајања су две конструкције које обезбеђују доследно словослагање
пасуса или група пасуса које развијају, описују или дефинишу фразу или реч.

\startsubsection
  [title={Описи}]

Код описа разликујемо {\em наслов} и његово објашњење или развој. Опис
можемо креирати са:

\PlaceMacro{definedescription}\type{\definedescription [Име] [Конфигурација]}

где је {\em Име} име којим називамо ову нову конструкцију, а Конфигурација
контролише изглед наше нове структуре. Кад се изврши претходна наредба
имаћемо нову команду и окружење са изабраним именом. Дакле:

\type{\definedescription [Concept]}

ће креирати команде:

\starttyping
  \Concept{Наслов}
  \startConcept {Наслов} ... \stopConcept
\stoptyping

Команду ћемо користити у случају када се текст који објашњава наслов
састоји само од једног пасуса, а окружење за наслове чији опис заузима више
од једног пасуса. Када се користи команда, пасус који јој непосредно следи
је једини који се сматра за опис наслова. Али када се користи окружење, сав
садржај у њему ће се форматирати одговарајућим увлачењем како би било јасно
да је у вези са насловом.

На пример:

\starttyping
\definedescription
  [Concept]
  [alternative=left, width=3.5cm, headstyle=bold]

\Concept{Контекстуализовање}

Постављање нечега у одређени контекст, или слагање текста словослагачким
системом под називом \ConTeXt. Могућност исправне контекстуализације у било
којој ситуацији се сматра знаком интелигенције и доброг опажања.

\stoptyping

ће да генерише следећи резултат:

\startcolor[red]

\definedescription
  [Concept]
  [alternative=left, width=3.5cm, headstyle=bold]

\Concept{Контекстуализовање}

Постављање нечега у одређени контекст, или слагање текста словослагачким
системом под називом \ConTeXt. Могућност исправне контекстуализације у било
којој ситуацији се сматра знаком интелигенције и доброг опажања.
  
\stopcolor

Као што је обичај у систему \ConTeXt, изглед наше нове конструкције ће се
задати аргументом {\em Конфигурација} у тренутку креирања, или касније са
\tex{setupdescription}:

\PlaceMacro{setupdescription}\type{\setupdescription [Име] [Конфигурација]}

где {\em Име} представља име нашег новог описа, а {\em Конфигурација}
одређује његов изглед. Међу разним опцијама конфигурацију желим да истакнем
следеће:

\startitemize

\item {\tt alternative}: оно је опција која суштински контролише изглед
конструкције. Она одређује позиционирање наслова у односу на његов опис.
Могуће вредности су {\language[en]\tt left, right, inmargin, inleft,
inright, margin, leftmargin, rightmargin, in\-ner\-mar\-gin, outermargin,
serried, hanging} и њихова имена су довољно јасна да се може стећи идеја
резултата, мада, у случају сумње, најбоље је урадити тест и видети какав
изглед се постиже.

\item {\tt width}: контролише ширину кутије у којој ће се исписати наслов.
У зависности од вредности опције {\tt alternative}, та величина такође може
бити и део увлачења којим ће се исписати текст објашњења.

\item {\tt distance}: контролише размак између наслова и објашњења.

\item {\tt headstyle, headcolor, headcommand}: утичу како ће изгледати сам
наслов: стил ({\tt headstyle}) и боја ({\tt headcolor}). Помоћу headcommand
можемо назначити команду којој ће се текст наслова проследити као аргумент.
На пример: {\tt headcommand=\backslash WORD} ће обезбедити да се текст
наслова испише у верзалу.

\item {\tt style, color}: контролише изглед текста описа наслова.

\stopitemize

\stopsubsection

\startsubsection
  [title={Набрајања}]

Набрајања су нумерисани текст елементи организовани у неколико нивоа. Сваки
елемент почиње насловом који се подразумевано састоји од имена структуре и
њеног броја, мада наслов можемо променити опцијом {\tt text}. Она су доста
слична описима, мада се разликују у следећем:

\startitemize

\item Сви елементи у набрајању деле исти наслов.

\item Стога се међусобно разликују по својој нумерацији.  

\stopitemize

Ова структура може бити веома корисна, на пример, за писање формула,
проблема или вежби у уџбеницима, јер обезбеђује да се нумеришу како треба и
форматирају на доследан начин.

Набрајање можемо да креирамо помоћу

\PlaceMacro{defineenumeration}\type{\defineenumeration [Име] [Конфигурација]}

где {\em Име} представља име нове конструкције, а {\em Конфигурација}
контролише њен изглед. 

Тако смо у наредном примеру:

\starttyping
  \defineenumeration
    [Exercise]
    [alternative=top, before=\blank, after=\blank, between=\blank]
\stoptyping

креирали нову структуру под називом {\em Exercise} и, као што се дешава са
набрајањима, имаћемо на располагању следеће две команде:

\starttyping
  \Exercise
  \startExercise
\stoptyping

Команда се користи само за {\em exercise} (вежбу) која се састоји од једног
пасуса, а окружење за {\em вежбе} у више пасуса. Али пошто набрајања могу
ићи до четвртог нивоа дубине, креираће се и следеће команде и окружења:

\starttyping
  \subExercise
  \startsubExercise
  \stopsubExercise
  \subsubExercise
  \startsubsubExercise
  \stopsubsubExercise
  \subsubsubExercise
  \startsubsubsubExercise
  \stopsubsubsubExercise
\stoptyping

А за контролу нумерације и следеће додатне команде:

\startitemize

\item \tex{setИмеНабрајања}: поставља текућу вредност нумерације.

\item \tex{resetИмеНабрајања}: поставља бројач набрајања на нулу.

\item \tex{nextИмеНабрајања}: увећава бројач набрајања за један.

\stopitemize

Изглед набрајања може да се одреди у време креирања, или касније командом
\tex{setupenumeration} чији је формат:

\PlaceMacro{setupenumeration}\type{\setupenumeration [Име] [Конфигурација]}.

Сваком набрајању можемо посебно да конфигуришемо сваки његов ниво. Тако на
пример, \tex{setupenumeration [subExercise] [Конфигурација]} утиче на други
ниво набрајања под називом \quotation{Exercise}.

Опције и вредности које могу да се конфигуришу са \tex{setupenumeration} су
слична онима у \tex{setupdescription}.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:FramesLines,
    title={Линије и оквири},
  ]

У \ConTeXt\ референтном упутству се каже да \TeX\ поседује велики капацитет
за управљање текстом, али је веома слаб у управљању графичким
информацијама. Молим за разлику: тачно је да могућности система \ConTeXt\
(уствари \TeX) нису тако надмоћне као када је у питању словослагање текста.
Али ићи дотле да се каже како је систем слаб у овом погледу је по мом
мишљењу, помало натегнуто. Не знам ниједну функцију са линијама и оквирима
које остали словослагачки системи могу да ураде, а да и \ConTeXt\ не може
да генерише. А ако \ConTeXt\ упаримо са \MetaPostLogo, или са TiKZ
(\ConTeXt\ има модул проширења за то), онда је само машта граница.

Међутим, у наредним одељцима ћу се ограничити на објашњавање начина за
генерисање једноставних хоризонталних и вертикалних линија, као и оквира
око речи, реченица или пасуса.

\startsubsection
  [title={Просте линије}]

Најједноставнији начин цртања хоризонталне линије је командом
\PlaceMacro{hairline}\tex{hairline}. Она генерише хоризонталну линију која
заузима комплетну ширину нормалне линије текста.

У линији текста где постоји линија генерисана командом \tex{hairline} не
може да се нађе било какав текст. Ако је потребно да се у истој линији
налазе и текст и линија, морамо да употребимо команду
\PlaceMacro{thinrule}\tex{thinrule}.  Ова друга команда ће искористити пуну
ширину линије. Тако да ће у изолованом пасусу да има исти ефекат као и
\tex{hairline}, док ће у супротном случају \tex{thinrule} да произведе исто
хоризонтално простирање као и \tex{hfill} (погледајте
\in{одељак}[sec:horizontal space2]), али уместо испуњавања хоризонталног
простора празнином (као што то ради \tex{hfill}), она га испуњава линијом.

\startDoubleExample
\starttyping
Са леве\thinrule\\
\thinrule Са десне\\
Са обе\thinrule стране\\
\thinrule у центру\thinrule
\stoptyping

Са леве\thinrule\\
\thinrule Са десне\\
Са обе\thinrule стране\\
\thinrule у центру\thinrule

\stopDoubleExample

Командом \PlaceMacro{thinrules}\tex{thinrules} можемо да генеришемо
неколико линија. \tex{thinrules[n=2]} ће на пример да генерише две
узастопне линије, од којих је свака ширине нормалне линије текста. Линије
генерисане командом \tex{thinrules} такође могу да се конфигуришу, било у
самом позиву команде, навођењем конфигурације као један од њених
аргумената, или уопштено са \tex{setupthinrules}. Конфигурација укључује
дебљину линије ({\tt rulethickness}), њену боју ({\tt color}), боју
позадине ({\tt background}), проред између линија ({\tt interlinespace}),
итд.

\startSmallPrint

  Већи број опција остављам без објашњења. Читалац може да консултује {\tt
  setup-en.pdf} (погледајте \in{одељак}[sec:qrc-setup-en]). Неке опције се
  од других разликују у нијансама (тј. једва да има разлике међу њима), па
  мислим да је читаоцу брже да покуша {\em видети} разлику, него да је ја
  покушам пренети речима. На пример: дебљина линије коју сам управо поменуо
  зависи од опције {\tt rulethickness}. Али на њу такође утичу и опције
  {\tt height} и {\tt depth}.

\stopSmallPrint

Мање линије могу да се генеришу командама \PlaceMacro{hl}\tex{hl} и
\PlaceMacro{vl}\tex{vl}. Прва генерише хоризонталну линију, а друга
вертикалну. Обе прихватају број као параметар који нам омогућава да
израчунамо дужину линије. У \tex{hl} број је мера дужине у {\em емовима}
(није потребно да се јединица мере наводи у команди), а у \tex{vl} аргумент
представља текућу висину линије.

Тако \tex{hl[3]} генерише хоризонталну линију дужине 3 ема, а \tex{vl[3]}
генерише вертикалну линију чија дужина одговара висини три линије текста.
Упамтите да број мере мора да се уметне у велике заграде, а не у витичасте.
У обе команде аргумент није обавезан. Ако се не наведе, узима се да је
вредност 1.

\PlaceMacro{fillinline}\tex{fillinline} је још једна команда за креирање
хоризонталних линија прецизне дужине. Она прихвата више подешавања којима
можемо навести (или предодредити са
\PlaceMacro{setupfillinlines}\tex{setupfillinlines}) ширину (опција {\tt
width}) уз још неке особине.

Особеност ове команде је да ће се текст написан са њене десне стране
поставити лево од генерисане линије и одвојиће се потребним празним
простором тако да се заузме комплетна линија текста. На пример:

\starttyping
\fillinline[width=6cm] Име    
\stoptyping

ће да генерише

\startcolor[red]
  
\fillinline[width=6cm] Име    

\stopcolor

\startSmallPrint

  Претпостављам да је ово чудно понашање услед чињенице да је овај макро
  дизајниран за писање формулара у којима постоји хоризонтална линија иза
  текста на којој нешто треба да се напише. \Conjecture У суштини, само име
  команде {\tt fillinline} значи попуни у линији.

\stopSmallPrint

Осим ширине линије, можемо да конфигуришемо и маргину ({\tt margin}),
растојање ({\tt distance}), дебљину ({\tt rulethickness}) и боју ({\tt color}).

\tex{fillinrules} је скоро идентична са \tex{fillinline}, мада нам ова
команда омогућава да унесемо више од једне линије (опцијом \MyKey{n}).

\type{\fillinrules [Конфигурација] {Текст} {Текст}}

при чему сва три аргумента нису обавезна.

\stopsubsection

\startsubsection
  [title={Линије везане за текст}]

Мада неке од команди које смо управо видели могу генерисати линије које
стоје уз текст у истој линији, оне се у суштини концентришу на изглед
линије. Ако желимо да цртамо линије везане за одређени текст, \ConTeXt\ има
команде:

\startitemize

\item које генеришу текст између линија.

\item које генеришу линије испод текста (подвлачење), изнад текста
(надвлачење) или кроз текст (прецртавање).

\stopitemize

Уобичајена команда за генерисање текста између линија је
\PlaceMacro{textrule}\tex{textrule}. Ова команда исцртава линију која
пролази кроз целу ширину странице и исписује текст који јој се проследи као
параметар са леве стране (али не на маргини). На пример:

\startDoubleExample
\starttyping
\textrule{Пример тест}
\stoptyping
\ 

\textrule{Пример тест}

\stopDoubleExample

\startSmallPrint

  Претпоставља се да \tex{textrule} прихвата необавезни први аргумент који
  може имати три вредности: {\tt top}, {\tt middle} и \Doubt{\tt bottom}.
  Али након неких тестова, нисам успео да пронађем који је ефекат те три
  опције.

\stopSmallPrint

Команди \tex{texrule} је слично
\PlaceMacro{starttextrule}\tex{starttextrule} окружење које, осим што умеће
линију са текстом на почетку окружења, умеће и хоризонталну линију на крај.
Формат ове команде је следећи:

\type{\starttextrule[Конфигурација]{Текст на линији} ... \stoptextrule} %

И \tex{textrule} и \tex{starttextrule} могу да се конфигуришу помоћу
\PlaceMacro{setuptextrule}\tex{setuptextrule}.

За цртање линија испод, изнад, или кроз текст, користе се следеће команде:

\PlaceMacro{underbar}\PlaceMacro{underbars}\PlaceMacro{overbar}
\PlaceMacro{overbars}\PlaceMacro{overstrike}\PlaceMacro{overstrikes}
\starttyping
  \underbar{Текст}
  \underbars{Текст}
  \overbar{Текст}
  \overbars{Текст}
  \overstrike{Текст}
  \overstrikes{Текст}
\stoptyping

Као што можемо видети, за сваки тип линије (испод, изнад, или кроз текст)
постоје две команде. Верзија команде у једнини црта једну линију испод,
изнад или кроз текст који јој се проследи као аргумент, док верзија команде
у множини црта само линију изнад речи, али не и изнад размака.

Ове команде нису компатибилне међусобно, што значи да било које две од њих
не могу да се примене на исти текст. Ако то ипак покушамо, примениће се она
која је задата последња. С друге стране, \tex{underbar} може да се
угнеждава, па подвлачи оно што је већ било подвучено.

\startSmallPrint

  Референтно упутство истиче да \tex{underbar} искључује растављање речи на
  крају реда речи које чине њен аргумент. \Conjecture Није ми сасвим јасно
  да ли се тај исказ односи само на \tex{underbar} или на свих шест команди
  које испитујемо.

\stopSmallPrint

\stopsubsection

\startsubsection
  [title={Уоквирене речи или текстови}]

Када желимо да уоквиримо текст оквиром или мрежом, користимо:

\startitemize

\item Команде \PlaceMacro{framed}\tex{framed} или
\PlaceMacro{inframed}\tex{inframed} ако је текст релативно кратак и не
заузима више од једне линије.

\item Окружење \PlaceMacro{startframedtext}\tex{startframedtext} за дуже
текстове.

\stopitemize

Разлика између \tex{framed} и \tex{inframed} је у тачки из које се исцртава
оквир. \tex{framed} исцртава оквир навише од идеалне линије која се зове
основна линија, на коју се постављају слова, мада нека слова пролазе и
испод ње. \tex{inframed} оквир такође исцртава навише, али од најниже
могуће тачке у линији. На пример:

\startDoubleExample
\starttyping
Овде имамо \framed{два} добра
\inframed{оквира}.
\stoptyping

Овде имамо \framed{два} добра
\inframed{оквира}.

\stopDoubleExample

И framed и inframed текст може да се прилагоди командом
\PlaceMacro{setupframed}\tex{setupframed}, а \tex{startframedtext} се
прилагођава помоћу \PlaceMacro{setupframedtext}\tex{setupframedtext}.
Опције прилагођавања су прилично сличне за обе команде. Оне нам омогућавају
да наведемо димензије оквира ({\tt height, width, depth}), облик углова
({\tt framecorner}), који може бити {\tt rectangular} (правоугаони) или
заобљен ({\tt round}), броју оквира ({\tt framecolor}), дебљину линије
({\tt framethickness}), поравнање садржаја ({\tt align}), боју текста ({\tt
foregroundcolor}), боју позадине ({\tt background} и {\tt
backgroundcolor}), итд.

За \tex{startframedtext} постоји и привидно чудна особина: {\tt frame=off}
која чини да се оквир не исцртава (мада је још увек ту, само невидљив). Ова
особина постоји из разлога што је оквир око пасуса недељив, па је
уобичајено да се цео пасус смести у {\tt framedtext} окружење и искључи
опција исцртавања оквира, чиме се обезбеђује да унутар пасуса не може да се
уметне прелом странице.

Такође можемо да креирамо и прилагођене верзије ових команди помоћу
\PlaceMacro{defineframed}\tex{defineframed} и
\PlaceMacro{defineframedtext}\tex{defineframedtext}.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:buffer,
    title={Остала интересантна окружења и\\ конструкције},
    bookmark={Остала интересантна окружења и конструкције},
  ]

  У систему \ConTeXt\ постоји још доста окружења која уопште нисам ни
  поменуо, или сам их само успут поменуо. Ево примера:

\startitemize
  
\item {\tt\bf buffer}\PlaceMacro{startbuffer}\PlaceMacro{getbuffer} {\em
  Бафери} су фрагменти текста који се чувају у меморији за каснију поновну
  употребу. {\em Бафер} се дефинише негде у документу са
  \cmd{startbuffer[ИмеБафера] ... \backslash stopbuffer} и може да се
  примени на неком другом месту у документу командом
  \tex{getbuffer[ИмеБафера]}, онолико пута колико је потребно.

\item {\tt\bf chemical}\PlaceMacro{startchemical} Ово окружење нам
  омогућава да у њега сместимо хемијске формуле. Како се \TeX\ истиче,
  између многих осталих ствари, у својој могућности да исправно слаже
  текстове са математичким формулама, од свог настанка \ConTeXt\ је тежио
  да ову могућност прошири и на хемијске формуле, па поседује ово окружење
  у којем постоје команде и структуре прилагођење писању хемијских формула.

\item {\tt\bf combination}\PlaceMacro{startcombination} Ово окружење нам
  омогућава да комбинујемо неколико плутајућих елемената на исту страну.
  Посебно је корисно за поравнање разних спољних слика које су у вези једна
  са другом.

\item {\tt\bf formula}\PlaceMacro{startformula}
  Ово је окружење намењено слагању математичких формула.

\item {\tt\bf hiding}\PlaceMacro{starthiding} Текст постављен у ово
  окружење се неће компајлирати, па се стога неће појавити ни у финалном
  документу. Ово је корисно да се привремено искључи компајлирање одређених
  делова изворног фајла. Иста ствар се постиже означавањем једне или више
  линија као коментар. Али када је фрагмент који желимо да искључимо
  релативно дугачак, уместо означавања десетина или стотина линија изворног
  фајла као коментар, боље је да се на почетак фрагмента уметне команда
  \tex{starthiding}, а на крај \tex{stophiding}.

\item {\tt\bf legend}\PlaceMacro{startlegend} У математичком контексту,
  \TeX\ примењује другачија правила тако да није могуће писање обичног
  текста. Међутим, понекад уз формулу иде опис њених елемената. За ову
  потребу постоји \tex{startlegend} окружење које нам омогућава да у
  математички контекст уметнемо обичан текст.

\item {\tt\bf linecorrection}\PlaceMacro{startlinecorrection} \ConTeXt\
  обично на исправан начин управља вертикалним размаком између линија, али
  повремено линија може да садржи нешто због чега не изгледа како треба. То
  се углавном дешава са линијама које имају фрагменте уоквирене командом
  \tex{framed}. Ово окружење у таквим случајевима поправља проред тако да
  пасус изгледа како треба.

\item {\tt\bf mode}\PlaceMacro{startmode} Ово окружење је намењено за
  укључивање фрагмената који ће се у изворном фајлу компајлирати само ако
  је активан одговарајући режим. Употреба {\em режима} није тема овог
  увода, али је веома интересантан алат када је потребно да из једног
  изворног фајла генеришемо неколико различитих верзија са другачијим
  форматирањем. Уз ово окружење постоји и
  \PlaceMacro{startnotmode}\tex{startnotmode}.

\item {\tt\bf opposite}\PlaceMacro{startopposite} Ово окружење се користи
  за слагање текстова у којима је садржај левих и десних страница у вези
  један са другим.

\item {\tt\bf quotation}\PlaceMacro{startquotation} Окружење врло слично са
  {\tt narrower}, намењено за унос умерено дугачких дословних цитата.
  Окружење обезбеђује да се текст унутар њега цитира, као и да се маргине
  повећају тако да се пасус са цитатом визуелно истакне на страници. Али
  требало би напоменути да према уобичајеном стилу блок цитата у енглеском,
  не би требало да постоје отварајући и затварајући знаци навода – па ова
  команда и није толико корисна.

\item {\tt\bf standardmakeup}\PlaceMacro{startstandardmakeup} Ово окружење
  је дизајнирано за генерисање страница са насловима документа, што је
  релативно уобичајено у академским документима одређене дужине, као што су
  докторске дисертације, мастер тезе, итд.

\stopitemize

Ако желите да научите више о било ком од ових окружења (или осталих које
нисам поменуо), предлажем следеће кораке:

\startitemize[n]

\item Погледајте информације о окружењу у \ConTeXt\ референтном упутству.
  Оно не помиње сва окружења; али каже нешто о свакој ставки из горње
  листе.

\item Напишите тест документ у којем се користи окружење.

\item Потражите у \ConTeXt\ званичној листи команди (погледајте
  \in{одељак}[sec:qrc-setup-en]) у вези са опцијама за конфигурацију
  окружења о којем се ради, па их затим тестирајте да откријете шта тачно
  раде.
  
\stopitemize

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=75 : %%%
