%%% File:       b05_Pages.mkiv
%%% Author:     Joaquín Ataz-López
%%% Begun:      May 2020
%%% Concluded:  May 2020
%%% Contents:   Ово поглавље је мешавина две ствари: распореда стране,
%%%            односно општег изгледа документа, и команди које се тичу
%%%            пагинације, што је специфични поглед, па би вероватно
%%%            требало да буде у глави 11. Његов садржај је углавном
%%%            базиран на референтном упутству из 2013. године, мада
%%%            сам консултовао и вики.
%%%
%%% Edited with: Emacs + AuTeX - And at times with vim + context-plugin
%%%

% \environment ../introCTX_env.mkiv

\startcomponent b05_Pages.mkiv

\startchapter
  [
    reference=cap:pages,
    title=Странице и пагинација документа,
    bookmark=Странице и пагинација документа,
  ]

\TocChap

\ConTeXt\ трансформише изворни документ у коректно форматиране {\em
странице}. Изглед страница, распоред текста и празнина, као и елементи
на страницама су од пресудног значаја за словослагање. Ово поглавље је
посвећено свим овим питањима, а и још неким стварима које се тичу
пагинације.

\startsection
  [
    reference=sec:papersize,
    title=Величина странице,
  ]

\startsubsection
  [
    reference=sec:pagesize,
    title=Подешавање величине странице,
  ]
\PlaceMacro{setuppapersize}

\ConTeXt\ подразумевано претпоставља да ће документ бити A4 величине,
односно следи европски стандард. Командом \tex{setuppapersize} можемо да
подесимо неку другу величину. То је команда која се типично поставља у
преамбулу документа.  {\em Уобичајена} синтакса ове команде је:

\type{\setuppapersize[ЛогичкаСтраница][ФизичкаСтраница]}

где су оба аргумента симболичка имена.\footnote{Присетимо се да сам у
\in{одељку}[sec:syntax] навео да у општем случају \ConTeXt\ команде
прихватају две врсте опција: симболичка имена, чије значење \ConTeXt\
већ познаје, и променљиве чије вредности морамо експлицитно да наведемо.}
Први аргумент који сам назвао {\em ЛогичкаСтраница}, представља величину
странице која треба да се узме у обзир за словослагање; а други аргумент
{\em ФизичкаСтраница}, представља величину папира на којој ће се
документ штампати. Обично су обе величине исте, па онда други аргумент
може да се изостави; међутим, у ситуацијама када су две величине
различите, на пример, када се књига штампа у листовима од по 8 или 16
страница (уобичајена техника штампе, посебно за академске књиге до око
1960их година). У тим случајевима \ConTeXt\ нам омогућава да направимо
разлику између обе величине; а ако је идеја да се неколико страница
штампа на једном листу папира, можемо такође да наведемо и шему савијања
која треба да се поштује користећи команду \tex{setuparranging} (за коју
се у овом уводу не даје објашњење).

За величину словослагања можемо да наведемо било коју од предефинисаних
величина које се користе у индустрији папира (или коју ми користимо). То
су:

  \startitemize

  \item Било која из A, B и C серија дефинисаних ISO-216 стандардом (од
  A0 до A10, од B0 до B10 и од C0 до C10), обично се користе у Европи.

  \item Било која од америчких стандардних величина: letter, ledger,
  tabloid, legal, folio, executive.

  \item Било која од RA и RSA величина дефинисаних ISO-217 стандарду.

  \item G5 и E5 величина дефинисаних швајцарским SIS-014711 стандардом
  (за докторске тезе).

  \item За коверте: било која од величина дефинисаних северноамеричким
  стандардом (envelope 9 до envelope 14) или ISO-269 стандардом (C6/C5,
  DL, E4).

  \item CD, за CD омоте.

  \item S3 – S6, S8, SM, SW за величине екрана у документима који нису
  намењени штампању, већ приказу на екран.

  \stopitemize

Заједно са величином папира, командом \tex{setuppapersize} можемо да
назначимо и оријентацију странице: \quotation{portrait} (вертикална) или
\quotation{landscape} (хоризонтална).

\startSmallPrint

  Према \ConTeXt\ викију, остале опције које прихвата
  \tex{setuppapersize} су \MyKey{rotated}, \MyKey{90}, \MyKey{180},
  \MyKey{270}, \MyKey{mirrored} и \MyKey{negative}. У мојим личним
  текстовима сам приметио неке видљиве промене са \MyKey{rotated} које
  инвертују страницу, мада није прецизна инверзија. Бројчане вредности би
  требало да \Doubt произведу одговарајући степен ротације, самостално или у
  комбинацији са \MyKey{rotated}, али нисам успео то да постигнем. Нити
  сам могао успешно да откријем чему служе \MyKey{mirrored} и
  \MyKey{negative}.

\stopSmallPrint

Други аргумент команде \tex{setuppapersize}, за који сам већ напоменуо
да се може изоставити када је величина штампе иста као величина
словослагања, може да узме потпуно исте вредности као и први, и означава
величину папира и оријентацију. Његова вредност такође може бити и
\MyKey{oversized} – што према \ConTeXt\ викију – додаје центиметар и
по сваком углу папира.

\startSmallPrint

  Према викију, постоје и остале могуће вредности за други аргумент:
  \MyKey{undersized}, \MyKey{doublesized} и \MyKey{doubleoversized}. Али
  у мојим личним тестовима нисам видео никакву промену када се употреби
  било која од ових вредности; а ни званична дефиниција команде
  (погледајте \in{одељак}[sec:qrc-setup-en]) не помиње ове опције.

\stopSmallPrint

\stopsubsection

\startsubsection
  [title=Употреба нестандардних величина странице]

Ако желимо да употребимо нестандардну величину странице, морамо да
урадимо две ствари:

\startitemize[n]

\item Употребимо нестандардну синтаксу команде \tex{setuppapersize}
  која нам омогућава да наведемо висину и ширину папира као димензије.

\item Дефинишемо нашу сопствену величину странице, да јој доделимо име и
  да је користимо као да је у питању стандардна величина папира.
  
\stopitemize

\subsubsubject{Алтернативна синтакса команде \tex{setuppapersize}}

Уз синтаксу коју смо већ видели, \tex{setuppapersize} нам омогућава да
употребимо и следећу:

\type{\setuppapersize[Име][Опције]}

где је {\em Име} необавезни аргумент који представља име које се
командом \tex{definepapersize} (коју ћемо представити следећу) додељује
величини папира, а {\em Опције} су врста аргумента којим експлицитно
додељујемо вредност.  Међу дозвољеним вредностима можемо да истакнемо
следеће:

\startitemize

\item {\tt\bf width, height} које представљају редом ширину и висину
странице.
  
\item {\tt\bf page, paper}. Прва се односи на величину странице на коју
се слаже текст, а друга на величину странице на коју ће се физички
штампати. То значи да је \MyKey{page} исто што и први аргумент команде
\tex{setuppapersize} у њеној уобичајеној синтакси (која је објашњена
изнад) и \MyKey{paper} као други аргумент. Ове опције могу имати исте
вредности као што је раније речено (A4, S3, итд.).

\item {\tt\bf scale}, наводи фактор скалирања за страницу.

\item {\tt\bf topspace, backspace, offset,} додатни размаци.
  
\stopitemize

\subsubsubject{Дефинисање прилагођене величине странице}

За дефинисање прилагођене величине странице, користимо команду
\tex{definepapersize} чија је синтакса

\PlaceMacro{definepapersize}\type{\definepapersize[Име][Опције]}

где се {\em Име} односи на име које се даје новој величини, а {\em
Опције} могу бити:

\startitemize

\item Било која од дозвољених вредности за \tex{setuppapersize} у њеној
  уобичајеној синтакси (A4, A3, B5, CD, итд.).

\item Мере за ширину (папира), висину (папира) и померај, или вредност
  скалирања (\MyKey{scale}).
  
\stopitemize

Није могуће да се мешају вредности дозвољене за \tex{setuppapersize} са
мерама или факторима скалирања. Разлог за то је што су у првом случају
опције симболичке речи, а у другом променљиве којима се дају конкретне
вредности; а у систему \ConTeXt, као што сам већ рекао, није дозвољено
мешање ове две врсте опција.

Када користимо \tex{definepapersize} да назначимо величину папира која
се подудара са неким од стандардних величина, уместо да дефинишемо нову
величину папира, ми ћемо уствари да дефинишемо ново име за већ постојећу
величину папира. Ово може да буде корисно ако желимо да комбинујемо
величину папира са оријентацијом. Тако на пример, можемо да напишемо

\starttyping
\definepapersize[vertical][A4, portrait]
\definepapersize[horizontal][A4, landscape]
\stoptyping

\stopsubsection

\startsubsection
  [title=Промена величине папира на било ком месту у документу]

У већини случајева документи користе само једну величину папира и то је
разлог што је команда као што је \tex{setuppapersize} типична команда
која се поставља у преамбулу и која се користи само једном у сваком
документу. Међутим, у неким ситуацијама може бити неопходно да се на
неком месту у документу промени величина; на пример, ако од се неког
места надаље умеће анекс чији су листови положени. 

У таквим случајевима можемо употребити \tex{setuppapersize} тачно на
месту где та промена треба да се догоди. Али пошто би се промена
тренутно применила, обично се пре команде \tex{setuppapersize} умеће
форсирани прелом странице, па се тако спречавају нежељени резултати.

Ако је потребно да се величина промени само је појединачну страницу,
уместо да команду \tex{setuppapersize} употребимо двапут, једном да
подесимо нову величину, а други пут да је вратимо на оригиналну, можемо
да употребимо команду \PlaceMacro{adaptpapersize}\tex{adaptpapersize}
која мења величину странице, а касније је аутоматски ресетује на
вредност која је важила пре позива команде.  Исто као и
са \tex{setuppapersize}, пре употребе \tex{adaptpapersize} би требало да
уметнемо форсирани прелом странице.

\stopsubsection

\startsubsection
  [title=Подешавање величине странице према садржају]

Постоје три окружења у систему \ConTeXt\ која генеришу странице довољне
величине тако да на њих стане предвиђени садржај. То су
\PlaceMacro{startMPpage}\cmd{startMPpage},
\PlaceMacro{startpagefigure}\cmd{startpagefigure} и
\PlaceMacro{startTEXpage}\cmd{startTEXpage}. Прво генерише страницу која
садржи графику дефинисану у MetaPost, језиком за графички дизајн који се
интегрише са \ConTeXt, али којим се нећу бавити у овом уводу. Друго ради
исто са сликом и можда са нешто текста испод ње. Оно узима сва
аргумента: први идентификује фајл који садржи слику. О овоме ћу говорити
у поглављу посвећеном спољним сликама. Треће (\tex{startTEXpage}) садржи
текст који је њен садржај на страници. Њена синтакса је:

\type{\startTEXpage[Опције] ... \stopTEXpage}

где Опције могу бити било шта од следећег:

\startitemize

\item {\tt\bf strut}. Нисам сигуран колико је ова опција корисна.  У
\ConTeXt\ терминологији, {\em strut} је карактер који нема ширину, али
има максималну висину и \Doubt дубину, мада ми није јасно какве то везе
има општом употребном вредности ове команде. Према викију, ова опција
дозвољава вредности \MyKey{yes}, \MyKey{no}, \MyKey{global} и
\MyKey{local}, при чему је подразумевана вредност \MyKey{no}.

\item {\tt\bf align}. Назначава поравнање текста. Ово може бити
\MyKey{normal}, \MyKey{flushleft}, \MyKey{{\language[en]flush\-right}},
\MyKey{middle}, \MyKey{high}, \MyKey{low} или \MyKey{lohi}.
  
\item {\tt\bf offset} за назначавање количине празног простора око
текста. Може бити \MyKey{none}, \MyKey{overlay} у случају да желите
ефекат прекривања, или тачну димензију.
  
\item {\tt\bf width, height} за које можемо навести ширину и висину
странице, или вредност \MyKey{fit} тако да ширина и висина постану такве
да одговарају тексту који се налази у окружењу.
  
\item {\tt\bf frame} која је подразумевано \MyKey{off}, али може да узме
вредност \MyKey{on} ако желимо оквир око текста на страници.
  
\stopitemize

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:page-elements,
    title=Елементи на страници,
  ]

\ConTeXt\ препознаје различите елементе на страницама и њихове
димензије се конфигуришу командом \tex{setuplayout}. Убрзо ћемо се
позабавити овим, али најбоље би било да пре тога опишемо сваки од
елемената странице, и да наведемо име под којим их команда
\tex{setuplayout} познаје:

\startitemize

\item {\bf Ивице:} празан простор око површине текста. Мада их већина
текст процесора назива \quotation{маргине}, пожељно је да се користи
\ConTeXt\ терминологија, јер нам омогућава да направимо разлику између
ивица у ужем смислу, тамо где нема текста (мада се у електронским
документима ту могу налазити дугмад за навигацију и слично), и маргине у
којима се понекада могу налазити текст елементи, као што су на пример,
белешке на маргинама.

  \startitemize

  \item Висина горње ивице се контролише помоћу две мере: самом горњом
  ивицом (\MyKey{top}) и растојањем између горње ивице и заглавља
  (\MyKey{topdistance}). Збир ове две мере се назива \MyKey{topspace}.

  \item Величина леве и десне ивице зависи од мера \MyKey{leftedge} и
  \MyKey{rightedge} редом.  Ако желимо да и једна и друга имају исту
  дужину, можемо истовремено да их подесимо опцијом \MyKey{edge}.

    У документима намењеним за двострану штампу, не говоримо о левој и
    десној ивици, већ о унутрашњој и спољашњој; прва је ивица најближа месту
    на којем ће се листови хефтати или прошивати, тј. лева ивица на непарно
    нумерисаним страницама, а десна ивица парним страницама.  Спољашња ивица
    је насупрот унутрашње.

  \item Висина ниже ивице се назива \MyKey{bottom}.

  \stopitemize

  % У документима намењеним штампи на папиру, ивице могу да садрже
  % текст. Али у документима намењним приказу на екран, на ивицама могу
  % да се налазе неки елементи као што су дугмад за навигацију и слично.

\item {\bf Маргине} у ужем смислу. \ConTeXt\ маргинама назива само бочне
маргине (леву и десну). Маргине се налазе између ивице и простора
главног текста и предвиђено је да се у њима налазе одређени текст
елементи као што су, на пример, белешке на маргинама, наслови одељака
или њихови бројеви.

  Димензије које контролишу величину маргина су:

  \startitemize

  \item {\tt\bf margin}: користи се када истовремено желимо да поставимо
  маргине на исту величину.

  \item {\tt\bf leftmargin, rightmargin}: постављају величину леве и
  десне маргине, редом.

  \item {\tt\bf edgedistance}: растојање између ивице и маргине.

  \item {\tt\bf leftedgedistance, rightedgedistance}: растојање између
  ивице и леве и десне маргине, редом.

  \item {\tt\bf margindistance}: растојање између маргине и области
  главног текста.

  \item {\tt\bf leftmargindistance, rightmargindistance}: растојање
  између области главног текста и леве и десне маргине, редом.

  \item {\tt\bf backspace}: ова мера представља размак између левог угла
  папира и почетка области главног текста.  Дакле, она представља збир
  \MyKey{leftedge} + \MyKey{leftedgedistance} + \MyKey{leftmargin} +
  \MyKey{leftmargindistance}.
    
  \stopitemize

\item {\bf Заглавље и подножје:} заглавље и подножје странице су две
области које се редом налазе изнад и испод површине странице по којој се
пише.  Обично садрже информације које помажу да се одреди контекст
текста, као што су бројеви страница, име аутора, наслов дела, наслов
поглавља или одељка, итд. На ове делове странице се у систему \ConTeXt\
утиче следећим димензијама:

  \startitemize

  \item {\tt\bf header}: висина заглавља.

  \item {\tt\bf footer}: висина подножја

  \item {\tt\bf headerdistance}: растојање од заглавља до области
  главног текста на страници.

  \item {\tt\bf footerdistance}: растојање између подножја и области
  главног текста на страници.

  \item {\tt\bf topdistance, bottomdistance}: већ су раније поменуте.
  Представљају растојање између горње ивице и заглавља или доње ивице и
  подножја, редом.

  \stopitemize

\item {\bf Главна област текста}: ово је најшира област странице у којој
се налази текст документа.  Његова величина зависи од променљивих
\MyKey{width} и \MyKey{textheight}. Променљива \MyKey{height},
представља збир \MyKey{header}, \MyKey{headerdistance},
\MyKey{textheight}, \language[en]\MyKey{footerdistance}\language[sr] и \MyKey{footer}.
  
\stopitemize

\placefigure
  [here]
  [img:page layout]
  {Области и мере на страници}
  {\externalfigure[PageLayout.png][width=.8\textwidth]}

Све ове области можемо видети на \in{слици}[img:page layout] заједно са
именима одговарајућих мера и стрелицама које означавају докле се
простиру. Дебљина стрелице заједно са величином имена стрелица одговара
важности сваке од ових раздаљина за распоред странице. Ако пажљиво
погледамо, видећемо да ова слика приказује да се страница може
представити као табела са 9 редова и 9 колона, или ако не узмемо у обзир
вредности размака између различитих области, онда је то пет редова и пет
колона од којих текст може да буде само у три реда и три колоне. Пресек
средњег реда са средњом колоном чини област главног текста и обично ће
чинити већи део странице.

У фази креирања распореда нашег документа, све мере странице можемо
видети командом \PlaceMacro{showsetups}\tex{showsetups}. Ако желите да
на страници видите визуелну представу обриса дистрибуције текста, можете
да употребите команду \PlaceMacro{showframe}\tex{showframe}; а командом
\PlaceMacro{showlayout}\tex{showlayout} можете видети комбинацију
претходне две команде.

\stopsection

\startsection
  [
    reference=sec:pagelayout,
    title=Распоред странице (\tex{setuplayout}),
  ]
\PlaceMacro{setuplayout}

\startsubsection
  [
    reference=sec:setuplayout,
    title=Додела величине различитим компонентама странице,
  ]

Дизајн странице подразумева доделу одређених величина одговарајућим
областима странице. Ово се ради командом \tex{setuplayout}. Она нам
омогућава да изменимо било коју од димензија поменутих у претходном
одељку. Њена синтакса је следећа:

\type{\setuplayout [Име][Опције]}

где је {\em Име} необавезни аргумент који се користи само у случају када
дизајнирамо више распореда (погледајте \in{одељак}[sec:definelayout]), а
опције су, поред осталих које ћемо видети касније, било које од
претходно поменутих.  Међутим, имајте на уму да су ове мере у међусобној
вези, јер укупан збир компоненти које утичу на ширину, као и оних које
утичу на висину мора да се подудари са ширином и висином странице. Ово у
суштини значи да када мењамо неку хоризонталну дужину, морамо да
променимо и остатак хоризонталних дужина; а исто је и када подешавамо
вертикалну дужину.

\ConTeXt\ подразумевано извршава аутоматска подешавања димензија само у
неким случајевима, који нису на потпун или систематичан начин наведени у
његовој документацији. Извођењем неколико тестова сам потврдио, на
пример, да ручно увећање или смањење висине заглавља или подножја
повлачи и измену \MyKey{textheight}; међутим, ручна измена неке од
маргина не подешава аутоматски и ширину текста, \MyKey{width} (барем је
то резултат мојих тестова). Због тога је најефикаснији начин за
спречавање неконзистентности између величине странице (постављене са
\tex{setuppapersize}) и величине њених одговарајућих компоненти следећи:

\startitemize

\item Што се тиче хоризонталних мера:

  \startitemize

  \item Подешавањем \MyKey{backspace} (које укључује \MyKey{leftedge}
  и \MyKey{leftmargin}).

  \item Подешавањем \MyKey{width} (ширине текста) не са димензијама,
  већ са вредностима \MyKey{fit} или \MyKey{middle}:

    \startitemize

    \item {\tt fit} израчунава ширину текста на основу ширине осталих
    хоризонталних компоненти странице.

    \item {\tt middle} ради исто, али најпре поставља десну и леву
    маргину на исту вредност.

    \stopitemize

  \stopitemize

\item Што се тиче вертикалних мера:

  \startitemize

  \item Подешавањем \MyKey{topspace}.

  \item Подешавањем \MyKey{fit} или \MyKey{middle} вредности на
  \MyKey{height}. Оне раде на исти начин као код ширине. Прва израчунава
  висину према осталим компонентама, а друга прво поставља горњу и доњу
  маргину на исту вредност, па онда израчунава висину текста.

  \item Када се подеси \MyKey{height}, по потреби се подешавају висина
  заглавља или подножја, знајући да ће се \MyKey{textheight} у тим
  случајевима аутоматски поново подесити.

  \stopitemize

\item Још једна могућност за индиректно одређивање висине области
главног текста је навођењем броја линија које треба да стану у њу
(имајући у виду текући размак између линија и величину фонта). Ово је
разлог што \tex{setuplayout} поседује \MyKey{lines} опцију.

\stopitemize

\subsubsubject{Постављање логичке странице на физичку страницу}

У случајевима када величина логичке странице није иста као величина
физичке странице (погледајте \in{одељак}[sec:pagesize])
\tex{setuplayout} нам омогућава да конфигуришемо неке додатне опције
које утичу на постављање логичке странице на физичку:

\startitemize

\item {\tt\bf location}: ова опција одређује место на физичкој страници
на којем ће се поставити логичка. Могуће вредности су {\language[en]left,
middle, right, top, bottom, singlesided, doublesided} или duplex.

\item {\tt\bf scale}: наводи фактор скалирања странице пре постављања на
физичку страницу.

\item {\tt\bf marking}: на страници ће се штампати визуелни маркери који
показују где се сече папир.

\item {\language[en]\tt\bf horoffset, veroffset, clipoffset, cropoffset, trimoffset,
bleedoffset, art\-offset}: низ мера које наводе различите помераје на
физичкој страници. Већина њих је објашњена у референтном упутству из
2013. године.

\stopitemize

Ове \tex{setuplayout} опције морају да се комбинују са назнакама из
\PlaceMacro{setuparranging}\tex{setuparranging} које говоре како се на
физичкој страници ређају логичке странице. Ове команде нећу да описујем
у уводу јер их уопште нисам тестирао.

\subsubsubject{Добијање ширине и висине области текста}

Команде \PlaceMacro{textwidth}\tex{textwidth} и
\PlaceMacro{textheight}\tex{textheight} редом враћају ширину и висину
области текста.  Вредности које се добију помоћу њих не могу директно да
се покажу у финалном документу, али могу да се употребе за постављање
мера висине и ширине осталих команди.  На пример, ако желимо да наведемо
слику чија ће ширина бити 60\% ширине линије, као вредност опције
\MyKey{width} за слику морамо да поставимо: \MyKey{width=0.6\backslash
textwidth}.

\stopsubsection

\startsubsection
  [title=Подешавање распореда странице]
\PlaceMacro{adaptlayout}

Може се догодити да наш распоред странице на одређеној страници не даје
жељени резултат; на пример, последња страница поглавља са само једом или
две линије, што није пожељно ни типографски, ни естетски.
За решавање оваквих ситуација, \ConTeXt\ обезбеђује команду
\tex{adaptlayout} која нам омогућава да променимо величину области
текста на једној или на више страница. Предвиђено је да се ова команда
користи само онда када смо завршили са писањем документа и радимо само
ситна финална подешавања. Стога, њена природна позиција је у преамбули
документа. Синтакса команде је:

\type{\adaptlayout [Странице] [Опције]}

где се {\em Странице} односи на број странице или страница чији распоред
желимо да променимо.  То није обавезни аргумент и он би требало да се
користи само када се команда \tex{adaptlayout} поставља у преамбулу.
Можемо да назначимо само једну страницу, или неколико њих, тако што
бројеве раздвајамо запетама.  Ако изоставимо овај први аргумент,
\tex{adaptlayout} ће утицати само на страницу која садржи команду.

Опције могу да буду:

\startitemize

\item {\tt\bf height}: дозвољава нам да наведемо, као меру, висину
странице у питању. Можемо да задамо апсолутну висину (нпр. „19cm”) или
релативну висину (нпр. „+1cm”, „-0.7cm”).

\item {\tt\bf lines}: можемо да наведемо број линија који треба да се
дода или одузме. Линије се додају ако се испред броја стави +, а
одузимају ако се постави знак $-$ (не просто цртица).

\stopitemize

Имајте на уму да када мењамо број линија на страници, такође може да се
промени и пагинација остатка документа. Из тог разлога је пожељно да се
команда \tex{adaptlayout} користи само на крају, када више нема
накнадних измена документа, и да се то уради у преамбули. Затим одлазимо
на прву страницу коју желимо да изменимо, извршимо измену, па проверимо
како то утиче на наредне странице; ако је измена таква да још нека
страница мора да се промени, додајемо и њен број па компајлирамо још
једном, и тако даље.

\stopsubsection

\startsubsection
  [
    reference=sec:definelayout,
    title=Употреба више различитих распореда страница,
  ] 
\PlaceMacro{definelayout}

Ако је потребно да за различите делове документа употребимо различите
распореде странице, најбољи начин да се почне је да се дефинише
{\em општи} распоред, па затим разни алтернативни који мењају само
димензије које се разликују од оних у општем.
Ови алтернативни распореди наслеђују све особине општег распореда које
се не мењају као део своје дефиниције. За навођење алтернативног
распореда, његово називање именом којим га касније можемо позвати,
користимо команду \tex{definelayout} чија је општа синтакса:

\type{\definelayout [Име/Број] [Конфигурација]}

где је {\em Име/Број} име које се придружује новом дизајну, или број
странице на којем се нови распоред аутоматски активира, а {\em
Конфигурација} садржи аспекте распореда које желимо да променимо у
односу на општи распоред.

Када се новом распореду придружи име, на одређеном месту у документу га
позивамо помоћу:

\type{\setuplayout [ИмеРаспореда]}

а враћамо се на општи распоред са:

\type{\setuplayout [reset]}

С друге стране, ако је нови распоред придружен одређеној страници, он ће
се аутоматски активирати када се достигне та страница. Међутим, једном
када се активира, враћање на општи дизајн се ради експлицитно, мада ово
можемо да {\em полуаутоматизујемо}. На пример, ако желимо да применимо
распоред само на странице 1 и 2, у преамбули документа можемо да
напишемо следеће:

\starttyping
\definelayout[1][...]
\definelayout[3][reset]
\stoptyping

Резултат ових команди је да се распоред дефинисан у првој линији
активира на страници 1, а на страници 3 се активира други распоред чија
је функција просто враћање на општи распоред.

Са \tex{definelayout[even]} креирамо распоред који се активира на свим
парним страницама; а са \tex{definelayout[odd]} распоред који се
примењује на све непарне странице.

\stopsubsection

\startsubsection
  [
    reference=sec:pages-other-matters,
    title=Остале ствари у вези са распоредом странице,
  ]

\startsubsubsection
  [
    reference=sec:double-sided,
    title=Разликовање непарних и парних страница,
  ]

У документима припремљеним за двострану штампу је чест случај да се
заглавље, нумерација страница и бочне маргине разликују на непарним и
парним страницама.  Парно нумерисане странице се такође називају и леве
(версо) странице, а непарне странице десне (ректо) странице. У овим
случајевима је такође обичај да се мења терминологија која се тиче
маргина, па говоримо о унутрашњим и спољашњим маргинама.  Ове раније се
налазе на тачки најближој месту на којем ће се странице хефтати или
прошивати, а касније на супротној страни.  На непарно нумерисаним
страницама, унутрашња маргина одговара левој маргини, а на парно
нумерисаним спољашња маргина одговара десној маргини.

\tex{setuplayout} нема ниједну опцију која нам омогућава да директно
кажемо да желимо разлику између распореда парних и непарних страница.
То је зато што се систему \ConTeXt\ разлика између две врсте страница
поставља другачијом опцијом: \tex{setuppagenumbering} коју ћемо видети у
\in{одељку}[sec:numpages]. Када се ово подеси, \ConTeXt\ претпоставља да
је страница описана са \tex{setuplayout} непарна страница и парну
страницу изграђује тако што на њу примени инвертоване вредности за
непарну страницу: спецификације које се примењују за непарно нумерисане
странице се примењују на леву, а на парно нумерисаним страницама на
десну; и обрнуто: оне  које се примењују на непарно нумерисану страницу
на десну, у парно нумерисаној страници се примењују на леву.

\stopsubsubsection

\startsubsubsection
  [
    reference=sec:pages-columns,
    title=Странице са више од једне колоне,
  ]

Помоћу \tex{setuplayout} текст нашег документа такође можемо да видимо
распоређен у две или више колона, као у неким новинама и магазинима, на
пример.  Ово се контролише опцијом \MyKey{columns} чија вредност мора да
буде цео број. Када постоји више од једне колоне, размак између њих се
задаје опцијом \MyKey{columndistance}.

Ова опција је намењена за документе у којима је сав текст (или већи део
текста) распоређен у више колона. Ако у документу који је углавном у
једној колони пожелимо да одређени део буде у две или три колоне, не
морамо да мењамо распоред странице, већ просто употребимо
\MyKey{columns} окружење (погледајте \in{одељак}[sec:multiplecolumns]).

\stopsubsubsection

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:numpages,
    title=Нумерација страница,
  ]

\ConTeXt\ подразумевано користи арапске бројеве за нумерацију страница и
број се појављује у заглављу, хоризонтално центриран. Ако ове особине
желите да промените, \ConTeXt\ вам нуди различите процедуре за то, које
према мом мишљењу, ствар чине непотребно компликованом.

Најпре, најосновније карактеристике нумерације се контролишу помоћу две
различите команде:
\PlaceMacro{setuppagenumbering}\tex{setuppagenumbering} и
\PlaceMacro{setupuserpagenumber}\tex{setupuserpagenumber}.

\type{\setuppagenumbering} нуди следеће опције:

\startitemize

\item {\tt\bf alternative}: ова опција контролише да ли је документ
дизајниран тако да су заглавље и подножје идентични на свим страницама
(\MyKey{singlesided}), или се прави разлика између парних и непарних
страница (\MyKey{doublesided}). Када ова опција има последњу вредност,
аутоматски се утиче на вредности уведене са \MyKey{setup\-layout}, тако
да се претпоставља да се подешавање \MyKey{setup\-layout} односи само на
непарно нумерисан странице, па дакле, оно што се постави за леву маргину
уствари је за унутрашњу (што је на парно нумерисаним страницама на
десној страни) и да се оно што се постави за десну страну уствари односи
на спољашњу маргину, која је на парно нумерисаним страницама на левој
страни.


\item {\tt\bf state}: означава да ли ће се број странице приказивати, или
не. Могуће су две вредности: start (број странице се приказује) и 
stop (бројеви страница се не приказују). Имена ових вредности (старт и
стоп) би могла да нас наведу на помисао да када имамо
\MyKey{state=stop} странице се не нумеришу, а када је
\MyKey{state=start} нумерација поново почиње. Али није тако: ове
вредности утичу само на то да ли се број приказује или не.

\item {\tt\bf location}: означава где ће се приказивати број. Обичне је
потребно да наведемо две вредности у овој опцији, раздвојене запетом.
Најпре морамо да наведемо да ли желимо број странице у заглављу
(\MyKey{header}), или у подножју (\MyKey{footer}), па затим, где: то
може да буде \MyKey{left}, \MyKey{middle}, \MyKey{right},
\MyKey{inleft}, \MyKey{inright}, \MyKey{margin}, \MyKey{inmargin},
\MyKey{atmargin} или \MyKey{marginedge}. На пример: ако желимо да се
прикаже десно поравната нумерација у подножју, требало би да наведемо
\MyKey{location=\{footer,right\}}. Иначе, погледајте како смо ову опцију
поставили унутар витичастих заграда, тако да \ConTeXt\ исправно може да
интерпретира раздвајајућу запету.

\item {\tt\bf style}: назначава величину фонта и стил који треба да се
користи за бројеве страница.

\item {\tt\bf color}: назначава боју која треба да се примени на број
странице.

\item {\tt\bf left}: прихвата команду или текст који треба да се изврши
лево од броја странице.

\item {\tt\bf right}: прихвата команду или текст који треба да се изврши
десно од броја странице.

\item {\tt\bf command}: прихвата команду којој ће се број странице
проследити као параметар.

\item {\tt\bf width}: назначава ширину коју заузима број странице.

\item {\tt\bf strut}: нисам сигуран у вези са овим. У мојим тестовима,
када је \MyKey{strut=no}, број се штампа тачно на горњој ивици заглавља
или на дну подножја, док када је \MyKey{strut=yes} (подразумевана
вредност) између броја и странице се примењује размак.

\stopitemize

\type{\setupuserpagenumber} прихвата и следеће додатне опције:

\startitemize

\item {\tt\bf numberconversion}: контролише врсту набрајања која може
бити арапска (\MyKey{n}, \MyKey{{\language[en]numbers}}), мала слова (\MyKey{a},
\MyKey{characters}), велика слова (\MyKey{A}, \MyKey{Characters}),
капитал (\MyKey{KA}), римско малим (\MyKey{i}, \MyKey{r},
\MyKey{romannumerals}), римско великим (\MyKey{I}, \MyKey{R},
\MyKey{Romannumerals}) или римско капиталом (\MyKey{KR}).

\item {\tt\bf number}: наводи број који се додељује првој страници, на
основу којег се израчунавају остали.

\item {\tt\bf numberorder}: ако овоме као вредност доделимо
\MyKey{reverse}, нумерација страница ће се вршити у опадајућем
редоследу; то значи да ће последња страница бити 1, претпоследња 2, итд.

\item {\tt\bf way}: омогућава нам да одредимо како ће се наставити са
нумерацијом. Може бити: byblock, bychapter, bysection, bysubsection,
итд.

\item {\tt\bf prefix}: дозвољава нам да наведемо префикс бројевима
страница.

\item {\tt\bf numberconversionset}: објашњено је испод.

\stopitemize

Уз ове две команде, такође је неопходно да се узме обзир контрола
бројева која се тиче макроструктуре документа (погледајте
\in{одељак}[sec:macrostructure]). Са ове тачке гледишта,
\PlaceMacro{defineconversionset}\cmd{defineconversionset} нам омогућава
да наведемо другачију врсту нумерације са сваки макроструктурни блок. На
пример:

\vbox{\starttyping
\defineconversionset
  [frontpart:pagenumber][][romannumerals]

\defineconversionset
  [bodypart:pagenumber][][numbers]

\defineconversionset
  [appendixpart:pagenumber][][Characters]

\stoptyping}

ће уредити да се први блок нашег документа (frontmatter) броји римским
бројевима исписаним малим словима, средишњи блок (bodymatter) арапским
бројевима, а додаци великим словима.

Следећим командама можемо добити број странице:

\startitemize

\item \PlaceMacro{userpagenumber}\tex{userpagenumber}: враћа број
странице онакав како је конфигурисан командама \cmd{setuppagenumbering}
и \cmd{setupuserpagenumber}.

\item \PlaceMacro{pagenumber}\tex{pagenumber}: враћа исти број као
претходна команда, али још увек арапским бројевима.

\item \PlaceMacro{realpagenumber}\tex{realpagenumber}: враћа реални број
странице у арапским бројевима без потребе било које од ових
спецификација.

\stopitemize

Ако желимо да добијемо број последње странце у документу, постоји три
команде које одговарају претходним. То су:
\PlaceMacro{lastuserpagenumber}\cmd{lastuserpagenumber},
\PlaceMacro{lastpagenumber}\cmd{lastpagenumber} и
\PlaceMacro{lastrealpagenumber}\cmd{lastrealpagenumber}.

\stopsection

\startsection
  [
  title=Форсирани или предложени преломи странице
  ]

\startsubsection
  [title=Команда \tex{page}]
\PlaceMacro{page}

Алгоритам за распоред текста у систему \ConTeXt\ је прилично сложен и
заснива се на многим израчунавањима и интерним променљивама које
програму говоре где се из перспективе типографске коректности налази
најбоља тачка за уметање стварног прелома странице. Команда
\tex{page} нам омогућава да утичемо на овај алгоритам:

\startitemize[azbuka]

\item Сугерисањем одређених тачака као најбољих или најгорих места за
уметање прелома странице.

  \startitemize[packed]

  \item {\tt\bf no}: наводи да место на којем се налази команда није
  добар кандидат за уметање прелома странице, тако да би прелом требало да
  се уметне на неком другом месту у документу, што је даље могуће.

  \item {\tt\bf bigpreference}: наводи да је тачка на којој се наиђе на
  команду {\em врло добро место} да се покуша прелом странице, али не
  толико да се прелом форсира.

  \stopitemize

  Запазите да ове две опције нити форсирају, нити спречавају преломе
  страница, већ само говоре систему \ConTeXt\ да би требало да узме у
  обзир оно што је наведено у команду када тражи најбоље место за прелом.
  Међутим, у крајњој линији, \ConTeXt\ ће и даље одлучивати о месту на
  којем ће се уметнуто прелом странице.

\item Форсирањем прелома странице на одређеном месту; у овом случају
можемо такође да назначимо колико прелома страница би требало да се
направи, као и одређене особине страница које се умећу.

  \startitemize[packed]

  \item {\tt\bf yes}: форсира прелом странице на овом месту.

  \item {\tt\bf makeup}: слично као и \MyKey{yes}, али форсирани прелом
  се ради одмах, не поставља се пре тога ниједан плутајући објекат који
  чека на постављање (погледајте \in{одељак}[sec:floating objects]).

  \item {\tt\bf empty}: умеће потпуно празну страницу у документ.
    
  \item {\tt\bf even}: умеће потребан број страница тако да наредна
    страница постане парна страница.
    
  \item {\tt\bf odd}: умеће потребан број страница тако да наредна
    страница постане непарна страница.
    
  \item {\tt\bf left, right}: слично као и претходне две опције, али се
    примењује само на документе предвиђене за двострану штампу, са
    различитим заглављима, подножјима или маргинама у зависности од тога да
    ли је страница парна или непарна.
    
  \item {\tt\bf quadruple}: умеће потребан број страница потребан да
    наредна страница буде умножак броја 4.
    
\stopitemize

\stopitemize

Уз ове опције које су намењене директној контроли пагинације, \tex{page}
нуди и остале опције које утичу на начин функционисања ове команде.
Истичу се опција \MyKey{disable} која чини да \ConTeXt\ игнорише
\tex{page} команде на које наиђе од овог места па надаље, као и опција
\MyKey{reset} која има супротан ефекат, која дакле враћа ефекат наредних
\tex{page} команди на које се наиђе.

\stopsubsection

\startsubsection
  [
  title=Спајање одређених линија пасуса тако да се спречи уметање прелома странице између њих,
  bookmark=Спајање одређених линија пасуса тако да се спречи уметање прелома странице између њих
  ]

Понекада када желимо да спречимо прелом странице између неколико пасуса,
употреба команде \tex{page} може бити заморна, јер би требало да се
напише на свакој тачки где је могуће да се уметне прелом странице.
Једноставнија процедура за то је да се материјал које желимо да буде на
истој страници постави у оно што \TeX\ назива {\em вертикална кутија}.

\startSmallPrint

  На почетку овог документа (на \at{страници}[ref:boxes]) сам напоменуо
  да је интерно за \TeX\ све {\em кутија}. Појам кутије је у \TeX\
  основа за било коју врсту {\em напредне} операције; али управљање њима
  је сувише сложено да би се укључило у овај увод. То је разлог што
  кутије само повремено помињем.

\stopSmallPrint

Једном када се креирају, \TeX\ кутије су недељиве, што значи да не
можемо уметнути прелом странице који би кутију поделио на две. Зато ако
материјал који желимо да држимо заједно поставимо у невидљиву кутију,
спречићемо уметање прелома странице који би поделио тај материјал.  То
се ради командом \PlaceMacro{vbox}\tex{vbox}, чија је синтакса

\type{\vbox{Материјал}}

где је {\em Материјал} текст који желимо да буде заједно.

Нека \ConTeXt\ окружења постављају свој садржај у кутију. На пример,
\MyKey{framedtext}, тако да ако уоквиримо материјал који желимо да
држимо заједно у ово окружење и поставимо да је оквир невидљив (што може
да се уради опцијом {\tt frame=off}), постићи ћемо исту ствар.

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:headerfooter,
    title=Заглавља и подножја,
  ]

\startsubsection
  [title=Команде за постављање саржаја заглавља и подножја]
\PlaceMacro{setupheadertexts}\PlaceMacro{setupfootertexts}

Ако смо у распореду странице заглављу и подножју доделили одређену
величину, у њих можемо уметнути текст командама \tex{setupheadertexts} и
\tex{setupfootertexts}. Оне су сличне, једина разлика је што прва
активира садржај заглавља, а друга садржај подножја. Обе имају од једног
до пет аргумената.

\startitemize[n]

\item Ако се употреби са једним аргументом, он ће садржати текст који ће
се у заглављу или подножју поставити на средину ширине странице. На
пример: \cmd{setupfootertexts[pagenumber]} ће на средини подножја писати
број странице.

\item Ако се употреби са два аргумента, садржај првог аргумента ће се
поставити на леву страну заглавља или подножја, а онај другог аргумента
на десну страну. На пример, \cmd{setupheadertexts[Предговор][pagenumber]}
ће сложити заглавље странице у којем се реч \quotation{предговор}
исписује на левој страни, а број странице на десној страни.

\item Ако се наведу три аргумента, први ће назначити {\em област} у
којој ће се штампати преостала два. {\em Област} се односи на {\em
области} странице поменуте у \in{одељку}[sec:page-elements], другим
речима: edge, margin, header… Остала два аргумента садрже текст који
треба да се постави у леву ивицу, маргину, десну ивицу, маргину.

\stopitemize

Када се користи са четири или пет аргумената, то је исто као и када се
користи са два или три аргумента, само у случајевима када се прави
разлика између парних и непарних страница, а који се јављају, као што
знамо, када се са \cmd{setuppagenumbering} постави
\MyKey{{\language[en]alternative=doublesided}}. У том случају, два могућа аргумента се
додају тако да означавају садржај леве и десне стране парних страница.

Важна карактеристика ове две команде је да када се користе са два
аргумента, претходно централно заглавље или подножје (ако је постојало)
се не преписује, што нам омогућава да у свакој области напишемо
другачији текст све док прво напишемо централни текст (позивом команде
са једним аргументом), па затим напишемо текстове за обе стране (тако
што је позовемо поново, али сада са два аргумента). Дакле, ако напишемо
следеће команде

\starttyping
\setupheadertexts[и]
\setupheadertexts[Станлио][Олио]
\stoptyping

прва команда ће написати \quotation{и} на средини заглавља, а друга ће
написати \quotation{Станлио} на левој и \quotation{Олио} на десној
страни, остављајући средишњу област нетакнутом, јер јој није наложено да
је поново испише. Коначно заглавље ће се сада приказивати овако

\color[maincolor] {Станлио\hfill и\hfill Олио}

\startSmallPrint

  Објашњење рада ових команди које сам управо изложио је мој закључак
  након многих тестова. \ConTeXt\ {\em excursion} даје објашњење ових
  команди засновано на верзији са пет аргумената; а оно у референтном
  упутству из 2013. године је засновано на верзији са три аргумента.
  Чини ми се \Conjecture да је моје јасније.  С друге стране, нисам
  наишао на објашњење зашто други позив команде не преписује претходни
  позив, али то је начин на који она ради ако прво напишемо централну
  ставку у заглављу или подножју, па затим оне са обе стране.  Али ако
  прво упишемо бочне ставке заглавља/подножја, наредни позив команде
  који уписује централну ставку ће обрисати претходна заглавља или
  подножја. Зашто?  Немам појма.  Чини ми се да ови мали детаљи уносе
  непотребну компликацију и требало би да се јасно објасне у званичној
  документацији.

\stopSmallPrint

Штавише, као садржај заглавља или подножја можемо да наведемо било коју
комбинацију текста и команди. А такође и следеће вредности:

\startitemize

\item {\tt\bf date, currentdate}: ће написати (било које од њих) текући
датум.

\item {\tt\bf pagenumber}: ће написати број странице.

\item {\tt\bf part, chapter, section…}\,: ће написати наслов који одговара 
делу, поглављу, одељку… или било које структурне поделе која постоји.

\item {\tt\bf partnumber, chapternumber, sectionnumber…}\,: ће написати
број дела, поглавља, одељка… или било које структурне поделе која
постоји.

\stopitemize

  {\bf Пажња:} ова симболичка имена {\language[en]({\tt date,
  currentdate, pagenumber, chapter, chapternumber}}, итд.) се
  интерпретирају као таква само ако је једини садржај аргумента то
  симболичко име; али ако додамо још неки текст или команду форматирања,
  ове речи ће се интерпретирати дословно, па тако, ако напишемо, на
  пример, \cmd{setupheadertexts[chapternumber]} добићемо број текућег
  поглавља; али ако напишемо
  \cmd{setupheadertexts[Поглавље chapternumber]}
  завршићемо са: \quotation{Поглавље~chapternumber}. У овим случајевима,
  када садржај команде није само симболичка реч, морамо да:

  \startitemize

  \item За {\tt date, currentdate} и {\tt pagenumber} употребимо не
  симболичку реч, већ команду са истим именом (\tex{date},
  \tex{currentdate} или \PlaceMacro{pagenumber}\tex{pagenumber}).

  \item За {\tt part, partnumber, chapter, chapternumber}, итд.
  употребимо \PlaceMacro{getmarking}\tex{getmarking[Mark]} команду која
  враћа садржај {\em Mark} који се тражи. Тако ће, на пример,
  \cmd{getmarking[chapter]} да врати наслов текућег
  поглавља, док ће \cmd{getmarking[chapternumber]}
  вратити број текућег поглавља.

  \stopitemize

  Ако на одређеној страни желимо да искључимо заглавља и подножја,
  користимо команду
  \PlaceMacro{noheaderandfooterlines}\tex{noheaderandfooterlines} која
  ради само на страници на којој се нађе. Ако на некој страници само
  желимо да обришемо број странице, морамо да употребимо команду
  \tex{page[blank]}.

\stopsubsection

\startsubsection
  [title=Форматирање заглавља и подножја]
\PlaceMacro{setupheader}\PlaceMacro{setupfooter}

У аргументима за \tex{setupheadertexts} или \tex{setupfootertexts} може
да се наведе одређени формат у којем се приказује текст заглавља или
подножја користећи одговарајуће команде форматирања.  Међутим, ово
такође можемо и глобално да конфигуришемо са \tex{setupheader} и
\tex{setupfooter} које нуде следеће опције:

\startitemize

\item {\tt\bf state}: прихвата следеће вредности: {\tt start, stop,
  empty, high, none, normal} или {\language[en]{\tt no\-marking}}.
  
\item {\tt\bf style, leftstyle, rightstyle}: конфигурација стила за
  текст заглавља или подножја. {\tt style} утиче на све странице, {\tt
  leftstyle} на парне странице, а {\tt rightstyle} на непарне странице.
  
\item {\tt\bf color, leftcolor, rightcolor}: боја заглавља или подножја.
  Може да утиче на све странице ({\tt color} опција) или само на парне
  странице ({\tt leftcolor}) или непарне странице ({\tt rightcolor})
  
\item {\tt\bf width, leftwidth, rightwidth}: ширина свих заглавља и
  подножја ({\tt width}) или заглавља/подножја на парним страницама ({\tt
  leftwidth}) или непарним ({\tt rightwidth}).

\item {\tt\bf before}: команда која треба да се изврши пре писања
  заглавља или подножја.

\item {\tt\bf after}: команда која ће се извршити након писања заглавља
  или подножја.

\item {\tt\bf strut}: ако има вредност \quotation{yes}, појављује се
  вертикални раздвајајући простор између заглавља и ивице. Када има
  вредност \quotation{no}, заглавље или подножје додирује области горње и
  доње ивице.
  
\stopitemize

% \subsection{Text in the upper and lower edges}

% If we recall what I explained in \in{section}[sec:elementospag]
% regarding page elements, I said that the upper and lower
% edges of the page ({\tt top} and {\tt bottom} in
% \ConTeXt terminology) in principle must not have text. However,
% this is not an absolute rule, since, mainly in electronic
% documents intended for display on screen, it can be
% useful to include some textual elements in these areas. This is why
% \ConTeXt\ allows text content in them

\stopsubsection

\startsubsection
  [
  title=Дефинисање специфичних заглавља и подножја и везивање за section команде,
  bookmark=Дефинисање специфичних заглавља и подножја и везивање за section команде
  ]
\PlaceMacro{definetext}

\ConTeXt\ систем заглавља и подножја нам омогућава да се текст у заглављу
или подножју аутоматски промени када мењамо поглавља или одељке; или
када мењамо странице, у случају да имамо различити сет заглавља или
подножја за парне и непарне странице. Али он нам не омогућава да правимо
разлику између прве странице (документа, или поглавља или одељка) и
осталих страница. Да бисмо то постигли, морамо:

\startitemize[n, packed]

\item Да дефинишемо специфично заглавље или подножје
\item Да га повежемо са одељком на који се односи.
  
\stopitemize

Дефинисање специфичних заглавља или подножја се врши командом
\tex{definetext}, чија је синтакса:

\vbox{\starttyping
\definetext 
  [Име] [Тип]
  [Садржај1] [Садржај2] [Садржај3]
  [Садржај4] [Садржај5]
\stoptyping}

где је {\em Име} име које се додељује заглављу или подножју са којим
радимо; {\em Тип} може бити {\tt header} или {\tt footer}, у зависности
од тога шта дефинишемо, а осталих пет аргумената држе садржај новог
заглавља или подножја, на сличан начин као што смо видели код
\PlaceMacro{setupheadertexts}\tex{setupheadertexts} и
\PlaceMacro{setupfootertexts}\tex{setupfootertexts}. Кад то урадимо,
потребно је да ново заглавље или подножје повежемо са неким одређеним
одељком помоћу \tex{setuphead} користећи опције {\tt header} и
{\tt footer} (које су описане у \in{поглављу}[cap:structure]).

Дакле, наредни пример ће да сакрије заглавље на првој страници сваког
поглавља, а у подножју ће се појавити центриран број странице:

\starttyping
\definetext[ChapterFirstPage] [footer] [pagenumber]
\setuphead 
  [chapter]
  [header=high, footer=ChapterFirstPage]
\stoptyping

\stopsubsection

\stopsection

\startsection
  [
    reference=sec:margintext,
    title=Уметање текст елемената у ивице и маргине странице,
  ]

Горња и доња ивица, као и десна и лева маргина обично не садрже никакав
текст. Међутим, \ConTeXt\ омогућава да ту поставимо неке текст елементе.
Тачније, за то су доступне следеће команде:

\startitemize

\item \PlaceMacro{setuptoptexts}\tex{setuptoptexts}: омогућава нам да
поставимо текст у горњу ивицу странице (изнад области заглавља).

\item \PlaceMacro{setupbottomtexts}\tex{setupbottomtexts}: омогућава нам
да поставимо тест у доњу ивицу странице (испод области подножја).

\item \PlaceMacro{margintext}\cmd{margintext},
  \PlaceMacro{atleftmargin}\cmd{atleftmargin},
  \PlaceMacro{atrightmargin}\cmd{atrightmargin},
  \PlaceMacro{ininner}\cmd{ininner},
  \PlaceMacro{ininneredge}\cmd{ininneredge},
  \PlaceMacro{ininnermargin}\cmd{ininnermargin},
  \PlaceMacro{inleft}\cmd{inleft},
  \PlaceMacro{inleftedge}\cmd{inleftedge},
  \PlaceMacro{inleftmargin}\cmd{inleftmargin},
  \PlaceMacro{inmargin}\cmd{inmargin}, \PlaceMacro{inother}\cmd{inother},
  \PlaceMacro{inouter}\cmd{inouter},
  \PlaceMacro{inouteredge}\cmd{inouteredge},
  \PlaceMacro{inoutermargin}\cmd{inoutermargin},
  \PlaceMacro{inright}\cmd{inright},
  \PlaceMacro{inrightedge}\cmd{inrightedge},
  \PlaceMacro{inrightmargin}\cmd{inrightmargin}: дозвољавају
постављање текста у бочне ивице и маргине документа.

\stopitemize

Прве две команде раде исто као \tex{setupheadertexts} и
\tex{setupfootertexts} и формат ових текстова може чак унапред да се
конфигурише помоћу \tex{setuptop} и \tex{setupbottom}, слично као што
нам \tex{setupheader} дозвољава да конфигуришемо текстове за
\tex{setupheadertexts}. Што се тиче свега наведеног, указујем на оно што
сам већ рекао у \in{одељку}[sec:headerfooter]. Само је потребно је да се
дода мали детаљ да текст који се подеси са \tex{setuptoptexts} или
\tex{setupbottomtexts} неће бити видљив ако се у распореду странице не
резервише простор за горњу ({\tt top}) или доњу ({\tt bottom}) ивицу. У
вези тога, погледајте \in{одељак}[sec:setuplayout].

Што се тиче команди намењених постављају текста у маргине документа, 
све оне имају сличну синтаксу:

\type{\ИмеКоманде[Референца][Конфигурација]{Текст}}

где {\em Референца} и {\em Конфигурација} нису обавезни аргументи; први
се користи са могуће унакрсно референцирање, а други нам омогућава да
подесимо маргинални текст. Последњи аргумент постављен у витичасте
заграде садржи текст који се поставља у маргину.

Општија команда од ових овде је \tex{margintext} јер омогућава
постављање текста у било коју маргину или бочну ивицу странице. Остале
команде, као што њихово име наговештава, постављају текст на саму
маргину (десну или леву, унутрашњу или спољашњу). Оне су уско везане за
распоред странице, јер ако на пример, употребимо \tex{inrightedge} а
нисмо резервисали довољно простора у распореду странице за десну ивицу,
неће се видети ништа.

Конфигурационе опције за \tex{margintext} су следеће:

\startitemize

\item {\tt\bf location}: наводи у коју маргину ће се сместити текст.
Може бити {\tt left}, {\tt right} или, у документима за двострану
штампу, {\tt outer} или {\tt inner}. Подразумевано је {\tt left} за
документе предвиђене за једнострану штампу, а {\tt outer} у онима за
двострану.

\item {\tt\bf width}: ширина доступна за штампање текста. Подразумевано
је то пуна ширина маргине.

\item {\tt\bf margin}: наводи да ли се текст поставља у саму маргину
({\tt margin}) или у ивицу ({\tt edge}).

\item {\tt\bf align}: поравнање текста. Овде се користе исте вредности
као за \in{\tex{setupalign}}[sec:setupalign].

\item {\tt\bf line}: омогућава да наведемо број линија за који ће се
померити текст у маргини. Тако да {\tt line=1} значи да ће се текст
померити једну линију наниже, а {\tt line=-1} за једну линију навише.

\item {\tt\bf style}: команда или команде које наводе стил текста који
се поставља у маргине.

\item {\tt\bf color}: боја маргиналног текста.

\item {\tt\bf command}: име команде којој ће се текст намењен маргини
проследити као аргумент. Ова команда ће се извршити пре исписивања
текста. На пример, ако желимо да исцртамо оквир око текста, могли бисмо
да употребимо \MyKey{[command=\backslash framed]\{Текст\}}.

\stopitemize

Остале команде прихватају исте опције, осим за {\tt location} и {\tt
margin}. Тачније, команде \cmd{atrightmargin} и \cmd{atleftmargin}
постављају текст потпуно наслоњен на тело странице.  Простор раздвајања
можемо да подесимо опцијом {\tt distance}, коју нисам поменуо када сам
говорио о \cmd{margintext,} јер приликом својих тестова нисам приметио
никакав ефекат на ту команду.

\startSmallPrint

  Уз горе поменуте опције, ове команде подржавају и остале опције {\language[en]({\tt
  strut, anchor, method, category, scope, option, hoffset, voffset, dy,
  bottomspace, threshold} и stack}) које нисам поменуо јер нису
  документоване, \Doubt а искрено, нисам ни сигуран чему служе. За оне са
  именима као што је {\em distance} можемо да погодимо, али шта је са
  осталима? Вики помиње само опцију {\tt stack}, за коју каже да се
  користи за емулацију команде \tex{marginpars} у \LaTeX, али то ми баш и
  није јасно.

\stopSmallPrint

Команда \PlaceMacro{setupmargindata}\tex{setupmargindata} нам омогућава
да глобално конфигуришемо текстове у свакој маргини. Тако, на пример

\type{\setupmargindata[right][style=slanted]}

обезбеђује да се сви текстови у десној маргини исписују косим слогом.

Такође можемо да креирамо и прилагођену команду са

\PlaceMacro{definemargindata}\type{\definemargindata[Име][Конфигурација]}

\stopsection

\stopchapter

\stopcomponent

%%% Local Variables:
%%% mode: ConTeXt
%%% mode: auto-fill
%%% coding: utf-8-unix
%%% TeX-master: "../introCTX.mkiv"
%%% End:
%%% vim:set filetype=context tw=72 : %%%
